{
"version":3,
"file":"app.js",
"sourceRoot":"file://",
"sources":["/usr/lib/haxe/std/DateTools.hx","/usr/lib/haxe/std/js/_std/EReg.hx","/usr/lib/haxe/std/js/_std/HxOverrides.hx","/usr/lib/haxe/std/Lambda.hx","/Users/francoponticelli/projects/cards/src/Main.hx","/Users/francoponticelli/projects/cards/src/PropertyFeeder.hx","/usr/lib/haxe/std/js/_std/Reflect.hx","/usr/lib/haxe/std/js/_std/Std.hx","/usr/lib/haxe/std/StringBuf.hx","/usr/lib/haxe/std/StringTools.hx","/usr/lib/haxe/std/js/_std/Type.hx","/Users/francoponticelli/projects/cards/src/cards/components/Component.hx","/Users/francoponticelli/projects/cards/src/cards/components/Properties.hx","/Users/francoponticelli/projects/cards/src/cards/model/Data.hx","/Users/francoponticelli/projects/cards/src/cards/model/Expression.hx","/Users/francoponticelli/projects/cards/src/cards/model/Model.hx","/Users/francoponticelli/projects/cards/src/cards/model/Runtime.hx","/Users/francoponticelli/projects/cards/src/cards/model/Schema.hx","/Users/francoponticelli/projects/cards/src/cards/model/Scope.hx","/Users/francoponticelli/projects/cards/src/cards/model/ref/BaseRef.hx","/Users/francoponticelli/projects/cards/src/cards/model/ref/ArrayRef.hx","/Users/francoponticelli/projects/cards/src/cards/model/ref/ObjectRef.hx","/Users/francoponticelli/projects/cards/src/cards/model/ref/Ref.hx","/Users/francoponticelli/projects/cards/src/cards/model/ref/UnknownRef.hx","/Users/francoponticelli/projects/cards/src/cards/model/ref/ValueRef.hx","/Users/francoponticelli/projects/cards/src/cards/properties/Property.hx","/Users/francoponticelli/projects/cards/src/cards/properties/ValueProperty.hx","/Users/francoponticelli/projects/cards/src/cards/properties/BoolProperty.hx","/Users/francoponticelli/projects/cards/src/cards/properties/PropertyName.hx","/Users/francoponticelli/projects/cards/src/cards/properties/StringProperty.hx","/Users/francoponticelli/projects/cards/src/cards/properties/Text.hx","/Users/francoponticelli/projects/cards/src/cards/properties/ToggleClass.hx","/Users/francoponticelli/projects/cards/src/cards/properties/ValueProperties.hx","/Users/francoponticelli/projects/cards/src/cards/properties/Visible.hx","/Users/francoponticelli/projects/cards/src/cards/types/ArrayTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/BoolTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/CodeTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/DateTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/DynamicTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/FloatTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/ObjectTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/ReferenceTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/StringTransform.hx","/Users/francoponticelli/projects/cards/src/cards/types/TypeTransform.hx","/Users/francoponticelli/projects/cards/src/cards/ui/Article.hx","/Users/francoponticelli/projects/cards/src/cards/ui/Card.hx","/Users/francoponticelli/projects/cards/src/cards/ui/widgets/FrameOverlay.hx","/Users/francoponticelli/projects/cards/src/cards/ui/widgets/Tooltip.hx","/usr/lib/haxe/std/js/Boot.hx","/Users/francoponticelli/projects/cards/src/udom/Dom.hx","/Users/francoponticelli/projects/thx.stream.dom/src/thx/stream/dom/Dom.hx","/Users/francoponticelli/projects/thx.stream/src/thx/stream/Emitter.hx","/Users/francoponticelli/projects/thx.stream/src/thx/stream/Value.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Options.hx","/Users/francoponticelli/projects/cards/src/cards/ui/ContextField.hx","/Users/francoponticelli/projects/cards/src/cards/ui/ContextView.hx","/Users/francoponticelli/projects/cards/src/cards/ui/Document.hx","/Users/francoponticelli/projects/cards/src/cards/ui/FieldValue.hx","/Users/francoponticelli/projects/cards/src/cards/ui/ModelView.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/ArrayEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/BoolEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/TextEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/CodeEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/DateEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/EditorPicker.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/FloatEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/editors/ReferenceEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/fragments/Block.hx","/Users/francoponticelli/projects/cards/src/cards/ui/fragments/FragmentMapper.hx","/Users/francoponticelli/projects/cards/src/cards/ui/fragments/FragmentName.hx","/Users/francoponticelli/projects/cards/src/cards/ui/fragments/FragmentProperties.hx","/Users/francoponticelli/projects/cards/src/cards/ui/fragments/InlineText.hx","/Users/francoponticelli/projects/cards/src/cards/ui/fragments/ReadonlyBlock.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/Editor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/RouteEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/BaseObjectEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/AnonymousObjectEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/ArrayEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/BoolEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/CodeMirrorEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/DateEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/DiffAt.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/EditorFactory.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/InputBasedEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/FieldNameEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/NumberEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/ObjectEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/Path.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/ReferenceEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/TextEditor.hx","/Users/francoponticelli/projects/cards/src/cards/ui/input/TypedValue.hx","/Users/francoponticelli/projects/cards/src/cards/ui/widgets/Button.hx","/Users/francoponticelli/projects/cards/src/cards/ui/widgets/Menu.hx","/Users/francoponticelli/projects/cards/src/cards/ui/widgets/Statusbar.hx","/Users/francoponticelli/projects/cards/src/cards/ui/widgets/Toolbar.hx","/usr/lib/haxe/std/haxe/CallStack.hx","/usr/lib/haxe/std/haxe/Log.hx","/usr/lib/haxe/std/js/_std/haxe/ds/IntMap.hx","/usr/lib/haxe/std/js/_std/haxe/ds/ObjectMap.hx","/usr/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Arrays.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Dynamics.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Error.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Functions.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Ints.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Iterables.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Iterators.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Objects.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Set.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Strings.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Timer.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Tuple.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/Types.hx","/Users/francoponticelli/projects/thx.core/src/thx/core/UUID.hx","/Users/francoponticelli/projects/thx.promise/src/thx/promise/Deferred.hx","/Users/francoponticelli/projects/thx.promise/src/thx/promise/Promise.hx","/Users/francoponticelli/projects/thx.stream/src/thx/stream/Bus.hx","/Users/francoponticelli/projects/thx.stream/src/thx/stream/Stream.hx","/Users/francoponticelli/projects/cards/src/Config.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe DateTools class contains some extra functionalities for handling `Date`\n\tinstances and timestamps.\n\n\tIn the context of haxe dates, a timestamp is defined as the number of\n\tmilliseconds elapsed since 1st January 1970.\n**/\nclass DateTools {\n\n\t#if php\n\t#elseif (neko && !(macro || interp))\n\tstatic var date_format = neko.Lib.load(\"std\",\"date_format\",2);\n\t#else\n\tprivate static function __format_get( d : Date, e : String ) : String {\n\t\treturn switch( e ){\n\t\t\tcase \"%\":\n\t\t\t\t\"%\";\n\t\t\tcase \"C\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(Std.int(d.getFullYear()/100)),\"0\",2);\n\t\t\tcase \"d\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(d.getDate()),\"0\",2);\n\t\t\tcase \"D\":\n\t\t\t\t__format(d,\"%m/%d/%y\");\n\t\t\tcase \"e\":\n\t\t\t\tuntyped Std.string(d.getDate());\n\t\t\tcase \"H\",\"k\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(d.getHours()),if( e == \"H\" ) \"0\" else \" \",2);\n\t\t\tcase \"I\",\"l\":\n\t\t\t\tvar hour = d.getHours()%12;\n\t\t\t\tuntyped StringTools.lpad(Std.string(hour == 0 ? 12 : hour),if( e == \"I\" ) \"0\" else \" \",2);\n\t\t\tcase \"m\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(d.getMonth()+1),\"0\",2);\n\t\t\tcase \"M\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(d.getMinutes()),\"0\",2);\n\t\t\tcase \"n\":\n\t\t\t\t\"\\n\";\n\t\t\tcase \"p\":\n\t\t\t\tuntyped if( d.getHours() > 11 ) \"PM\"; else \"AM\";\n\t\t\tcase \"r\":\n\t\t\t\t__format(d,\"%I:%M:%S %p\");\n\t\t\tcase \"R\":\n\t\t\t\t__format(d,\"%H:%M\");\n\t\t\tcase \"s\":\n\t\t\t\tStd.string(Std.int(d.getTime()/1000));\n\t\t\tcase \"S\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(d.getSeconds()),\"0\",2);\n\t\t\tcase \"t\":\n\t\t\t\t\"\\t\";\n\t\t\tcase \"T\":\n\t\t\t\t__format(d,\"%H:%M:%S\");\n\t\t\tcase \"u\":\n\t\t\t\tuntyped{\n\t\t\t\t\tvar t = d.getDay();\n\t\t\t\t\tif( t == 0 ) \"7\"; else Std.string(t);\n\t\t\t\t}\n\t\t\tcase \"w\":\n\t\t\t\tuntyped Std.string(d.getDay());\n\t\t\tcase \"y\":\n\t\t\t\tuntyped StringTools.lpad(Std.string(d.getFullYear()%100),\"0\",2);\n\t\t\tcase \"Y\":\n\t\t\t\tuntyped Std.string(d.getFullYear());\n\t\t\tdefault:\n\t\t\t\tthrow \"Date.format %\"+e+\"- not implemented yet.\";\n\t\t}\n\t}\n\n\tprivate static function __format( d : Date, f : String ) : String {\n\t\tvar r = new StringBuf();\n\t\tvar p = 0;\n\t\twhile( true ){\n\t\t\tvar np = f.indexOf(\"%\", p);\n\t\t\tif( np < 0 )\n\t\t\t\tbreak;\n\n\t\t\tr.addSub(f,p,np-p);\n\t\t\tr.add( __format_get(d, f.substr(np+1,1) ) );\n\n\t\t\tp = np+2;\n\t\t}\n\t\tr.addSub(f,p,f.length-p);\n\t\treturn r.toString();\n\t}\n\t#end\n\n\t/**\n\t\tFormat the date `d` according to the format `f`. The format is\n\t\tcompatible with the `strftime` standard format, except that there is no\n\t\tsupport in Flash and JS for day and months names (due to lack of proper\n\t\tinternationalization API). On Haxe/Neko/Windows, some formats are not\n\t\tsupported.\n\t**/\n\tpublic static function format( d : Date, f : String ) : String {\n\t\t#if (neko && !(macro || interp))\n\t\t\treturn new String(untyped date_format(d.__t, f.__s));\n\t\t#elseif php\n\t\t\treturn untyped __call__(\"strftime\",f,d.__t);\n\t\t#else\n\t\t\treturn __format(d,f);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the result of adding timestamp `t` to Date `d`.\n\n\t\tThis is a convenience function for calling\n\t\t`Date.fromTime(d.getTime() + t)`.\n\t**/\n\tpublic static inline function delta( d : Date, t : Float ) : Date {\n\t\treturn Date.fromTime( d.getTime() + t );\n\t}\n\n\tstatic var DAYS_OF_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n\t/**\n\t\tReturns the number of days in the month of Date `d`.\n\n\t\tThis method handles leap years.\n\t**/\n\tpublic static function getMonthDays( d : Date ) : Int {\n\t\tvar month = d.getMonth();\n\t\tvar year = d.getFullYear();\n\n\t\tif (month != 1)\n\t\t\treturn DAYS_OF_MONTH[month];\n\n\t\tvar isB = ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n\t\treturn if (isB) 29 else 28;\n\t}\n\n\t/**\n\t\tConverts a number of seconds to a timestamp.\n\t**/\n\tpublic static inline function seconds( n : Float ) : Float {\n\t\treturn n * 1000.0;\n\t}\n\n\t/**\n\t\tConverts a number of minutes to a timestamp.\n\t**/\n\tpublic static inline function minutes( n : Float ) : Float {\n\t\treturn n * 60.0 * 1000.0;\n\t}\n\n\t/**\n\t\tConverts a number of hours to a timestamp.\n\t**/\n\tpublic static inline function hours( n : Float ) : Float {\n\t\treturn n * 60.0 * 60.0 * 1000.0;\n\t}\n\n\t/**\n\t\tConverts a number of days to a timestamp.\n\t**/\n\tpublic static inline function days( n : Float ) : Float {\n\t\treturn n * 24.0 * 60.0 * 60.0 * 1000.0;\n\t}\n\n\t/**\n\t\tSeparate a date-time into several components\n\t**/\n\tpublic static function parse( t : Float ) {\n\t\tvar s = t / 1000;\n\t\tvar m = s / 60;\n\t\tvar h = m / 60;\n\t\treturn {\n\t\t\tms : t % 1000,\n\t\t\tseconds : Std.int(s % 60),\n\t\t\tminutes : Std.int(m % 60),\n\t\t\thours : Std.int(h % 24),\n\t\t\tdays : Std.int(h / 24),\n\t\t};\n\t}\n\n\t/**\n\t\tBuild a date-time from several components\n\t**/\n\tpublic static function make( o : { ms : Float, seconds : Int, minutes : Int, hours : Int, days : Int } ) {\n\t\treturn o.ms + 1000.0 * (o.seconds + 60.0 * (o.minutes + 60.0 * (o.hours + 24.0 * o.days)));\n\t}\n\n\t#if (js || flash || php || cpp || python)\n\t/**\n\t\tRetrieve Unix timestamp value from Date components. Takes same argument sequence as the Date constructor.\n\t**/\n\tpublic static #if (js || flash || php) inline #end function makeUtc(year : Int, month : Int, day : Int, hour : Int, min : Int, sec : Int ):Float {\n\t    #if (js || flash || python)\n\t\t   return untyped Date.UTC(year, month, day, hour, min, sec);\n\t\t#elseif php\n\t\t   return untyped __call__(\"gmmktime\", hour, min, sec, month + 1, day, year) * 1000;\n\t\t#elseif cpp\n\t\t  return untyped __global__.__hxcpp_utc_date(year,month,day,hour,min,sec)*1000.0 ;\n\t\t#else\n\t\t\t//TODO\n\t\t   return 0.;\n\t\t#end\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : Dynamic;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = untyped __new__(\"RegExp\",r,opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\t#if mt\n\t\tvar x = (cast s).cca(index);\n\t\t#else\n\t\tvar x = (cast s).charCodeAt(index);\n\t\t#end\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\n#if mt\n\t\tif( String.prototype.cca == null ) String.prototype.cca = String.prototype.charCodeAt;\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with 'using Lambda' and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","import cards.types.*;\n\nimport cards.model.Data;\nimport cards.model.Model;\nimport cards.model.Schema;\nimport cards.properties.ValueProperties;\nimport cards.ui.Card;\nimport cards.ui.fragments.FragmentMapper;\nimport cards.ui.fragments.FragmentProperties;\nimport cards.util.MacroVersion;\nimport thx.stream.dom.Dom;\nimport udom.Dom;\n\nclass Main {\n  public static function main() {\n    var version = MacroVersion.next();\n    Dom.ready().success(function(_) {\n      // START\n      var values    = new ValueProperties(),\n          fragments = new FragmentProperties(),\n          mapper    = new FragmentMapper(fragments, values);\n\n      PropertyFeeder.feedProperties(values);\n      PropertyFeeder.feedFragments(fragments);\n\n      var container = Query.first('.container'),\n          data      = new Data({}),\n          model     = new Model(data);\n\n      // Card\n      var items = Card.create(model, container, mapper);\n      items.document.statusbar.right.component.el.innerHTML = version.toString();\n    });\n  }\n}","import cards.components.Component;\nimport cards.properties.Text;\nimport cards.properties.ToggleClass;\nimport cards.properties.ValueProperties;\nimport cards.ui.fragments.FragmentProperties;\nimport cards.model.SchemaType;\n\nclass PropertyFeeder {\n  static var classes = [\n    { display : 'bold', name : 'strong'},\n    { display : 'italic', name : 'emphasis'}\n  ];\n\n  public static function feedProperties(properties : ValueProperties) {\n    classes.map(function(p) properties.add(p.name, createToggleClass(p.display, p.name)));\n    properties.add('text', createText());\n  }\n\n  public static function feedFragments(fragments : FragmentProperties) {\n    fragments.associateMany('text', ['strong', 'emphasis', 'text']);\n    fragments.associateMany('block', ['strong', 'emphasis']);\n    //fragments.associateMany('readonly', ['strong', 'emphasis', 'text']);\n  }\n\n  static function createToggleClass(display : String, name : String) : ValuePropertyInfo<Bool> {\n    return {\n      name    : name,\n      display : display,\n      type    : BoolType,\n      create  : function(component : Component) {\n        var cls = new ToggleClass(component, name, name);\n        cls.stream.set(true);\n        return cls;\n      }\n    };\n  }\n\n  static function createText() : ValuePropertyInfo<String> {\n    return {\n      name    : 'text',\n      display : 'content',\n      type    : StringType,\n      create  : function(component : Component) return new Text(component, null) // null means that the text will be taken from the HTML\n    };\n  }\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic untyped {\n\t\treturn try o[field] catch( e : Dynamic ) null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : Dynamic, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn cast(x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String = \"\";\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic function new() {}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cs\n@:keep\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash9\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif flash\n\t\t\treturn untyped _global[\"escape\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeUriString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash9\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif flash\n\t\t\treturn untyped _global[\"unescape\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash9\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash9\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s[\"cca\"](index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.lib.Builtin.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash9 || cpp)\n\t\treturn c == 0;\n\t\t#elseif flash8\n\t\treturn c <= 0; // fast NaN\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static function getClass<T>( o : T ) : Class<T> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","package cards.components;\n\nimport udom.Dom;\nimport js.html.Element;\n\nclass Component {\n  public var children(get, null) : Iterable<Component>;\n  public var isAttached(default, null) : Bool = false;\n  public var parent(default, null) : Component;\n  public var properties(default, null) : Properties;\n  public var el(default, null) : Element;\n  var list : Array<Component>;\n\n  public function new(options : ComponentOptions) {\n    list = [];\n    properties = new Properties(this);\n    if(null == options.template) {\n      if(null == options.el)\n        throw '$this needs a template';\n      else {\n        el = options.el;\n        if(null != el.parentElement) {\n          isAttached = true;\n        }\n      }\n    } else {\n      el = Html.parse(options.template);\n    }\n    if(null != options.classes)\n      options.classes.split(' ').map(el.classList.add);\n    if(null != options.parent)\n      options.parent.add(this);\n    if(null != options.container)\n      appendTo(options.container);\n  }\n\n  public function appendTo(container : Element) {\n    container.appendChild(el);\n    isAttached = true;\n  }\n\n  public function detach() {\n    if(!isAttached)\n      throw 'Component is not attached';\n    el.parentElement.removeChild(el);\n    isAttached = false;\n  }\n\n  public function destroy() {\n    if(null != parent)\n      parent.remove(this);\n    if(isAttached)\n      detach();\n    properties.removeAll();\n  }\n\n  public function add(child : Component) {\n    if(null != child.parent)\n      child.parent.remove(child);\n    list.push(child);\n    child.parent = this;\n  }\n\n  public function remove(child : Component) {\n    if(!list.remove(child))\n      throw '$child is not a child of $this';\n    child.parent = null;\n  }\n\n  function get_children()\n    return list;\n\n  public function toString()\n    return Type.getClassName(Type.getClass(this)).split('.').pop();\n}","package cards.components;\n\nimport cards.properties.Property;\nimport cards.properties.PropertyName;\n\nclass Properties {\n  var properties : Map<String, Property>;\n  var target : Component;\n  public function new(target : Component) {\n    this.target = target;\n    properties = new Map();\n  }\n\n  public function removeAll() {\n    for(name in properties.keys())\n      remove(name);\n  }\n\n  function add(property : Property) {\n    if(properties.exists(property.name))\n      throw '$target already has a property $property';\n    properties.set(property.name, property);\n  }\n\n  public function get(name : PropertyName) {\n    return properties.get(name);\n  }\n\n  public function exists(name : PropertyName) {\n    return properties.exists(name);\n  }\n\n  function remove(name : PropertyName) {\n    if(!properties.exists(name))\n      throw 'property \"${name}\" does not exist in $target';\n    var prop = properties.get(name);\n    properties.remove(name);\n    prop.dispose();\n  }\n}","package cards.model;\n\nimport haxe.Json;\nimport cards.model.ref.ObjectRef;\nimport cards.model.ref.IRef;\nimport thx.stream.Value;\n\nclass Data {\n  var root : ObjectRef;\n  var cache : Map<String, IRef>;\n  public var value(default, null) : Value<{}>;\n\n  public function new(data : {}) {\n    value = new Value(data);\n    reset(data);\n  }\n\n  function resolve(path : String) {\n    var ref = cache.get(path);\n    if(null == ref) {\n      ref = root.resolve(path);\n      if(ref.hasValue())\n        cache.set(path, ref);\n    }\n    return ref;\n  }\n\n  public function get(path : String) : Dynamic\n    return resolve(path).get();\n\n  public function hasValue(path : String) : Bool\n    return resolve(path).hasValue();\n\n  public function set(path : String, value : Dynamic) : Data {\n    var ref = resolve(path);\n    cache.set(path, ref);\n    if(ref.get() != value) {\n      ref.set(value);\n      this.value.set(toObject());\n    }\n    return this;\n  }\n\n  public function reset(value : Dynamic) : Data {\n    root = new ObjectRef(null);\n    cache = new Map();\n    if(null != value) {\n      set(\"\", value);\n    }\n    this.value.set(toObject());\n    return this;\n  }\n\n  public function remove(path : String) {\n    var ref = cache.get(path);\n    if(null == ref) {\n      ref = root.resolve(path);\n    }\n\n    if(ref.hasValue()) {\n      ref.remove();\n      this.value.set(toObject());\n    }\n    cache.remove(path);\n  }\n\n  public function rename(oldpath : String, newpath : String) {\n    if(!hasValue(oldpath) || hasValue(newpath))\n      return false;\n    var v = get(oldpath);\n    remove(oldpath);\n    set(newpath, v);\n    this.value.set(toObject());\n    return true;\n  }\n\n  public function toObject() : {}\n    return root.get();\n\n  public function toJSON()\n    return Json.stringify(toObject());\n}","package cards.model;\n\nimport cards.model.Runtime;\nimport haxe.ds.Option;\n\nenum Expression {\n  Fun(f : Void -> RuntimeResult);\n  SyntaxError(msg : String);\n}\n\nclass Expressions {\n  public static function toErrorOption(exp : Expression) {\n    return switch exp {\n      case SyntaxError(e): Some(e);\n      case _: None;\n    };\n  }\n}","package cards.model;\n\nimport thx.stream.Bus;\nimport thx.stream.Emitter;\n\nclass Model {\n  public var data(default, null) : Data;\n  public var schema(default, null) : Schema;\n\n  public var dataEventSubscriber(default, null) : DataEvent -> Void;\n  public var schemaEventSubscriber(default, null) : SchemaEvent -> Void;\n\n  public var changes(default, null) : Emitter<String>;\n  var bus : Bus<String>;\n\n  public function new(data : Data) {\n    this.changes = this.bus = new Bus();\n    this.data = data;\n    this.schema = new Schema();\n    this.dataEventSubscriber = function(e : DataEvent)\n      switch e {\n        case SetValue(path, value, type):\n          data.set(path, value);\n          bus.pulse(path);\n      };\n\n    this.schemaEventSubscriber = function(e : SchemaEvent) {\n      switch e {\n        case ListFields(list):\n          for(item in list)\n            schema.add(item.name, item.type);\n          bus.pulse(\"\");\n        case AddField(path, type):\n          schema.add(path, type);\n        case DeleteField(path):\n          schema.delete(path);\n          data.remove(path);\n          bus.pulse(path);\n        case RenameField(oldpath, newpath):\n          schema.rename(oldpath, newpath);\n          data.rename(oldpath, newpath);\n          bus.pulse(oldpath);\n          bus.pulse(newpath);\n        case RetypeField(path, type):\n          schema.retype(path, type);\n          data.remove(path);\n          bus.pulse(path);\n      }\n    };\n  }\n}","package cards.model;\n\nimport haxe.ds.Option;\nusing thx.core.Set;\nusing thx.core.Iterables;\nimport cards.model.Expression;\nimport cards.model.Scope;\n\nclass Runtime {\n  static function createFunction(args : Array<String>, code : String) : Dynamic -> Dynamic -> Dynamic\n    return (untyped __js__('new Function'))(args.join(','), code);\n\n  static function formatCode(code : String, scope : Dynamic) {\n    var prelim = Reflect.fields(scope)\n      .map(function(field) {\n        return 'var $field = scope.$field;';\n      })\n      .join('\\n');\n    return '$prelim\ndelete scope;\nreturn $code;';\n  }\n\n  static var pattern = ~/\\$\\.(.+?)\\b/;\n  // TODO: poorman implementation\n  public static function extractDependencies(code : String) {\n    var set = new Set();\n    while(pattern.match(code)) {\n      set.add(pattern.matched(1));\n      code = pattern.matchedRight();\n    }\n    return set.order(thx.core.Strings.compare);\n  }\n\n  public static function toRuntime(code : String, model : Model) : Runtime {\n    var expression = try {\n        var scope = new Scope();\n        var formatted = formatCode(code, scope);\n        var f = createFunction(['$', 'scope'], formatted);\n\n        Fun(function() try return Result(f(model.data.toObject(), scope)) catch(e : Dynamic) return Error(Std.string(e)));\n      } catch(e : Dynamic) {\n        SyntaxError(Std.string(e));\n      };\n    return new Runtime(expression, code);\n  }\n\n  public static function toErrorOption(runtime : Runtime) : Option<String>\n    return switch runtime.expression {\n      case SyntaxError(e): Some(e);\n      case _: None;\n    };\n\n  public var expression(default, null) : Expression;\n  public var code(default, null) : String;\n  public var dependencies(default, null) : Array<String>;\n  public function new(expression : Expression, code : String) {\n    this.expression = expression;\n    this.code = code;\n    this.dependencies = extractDependencies(code);\n  }\n}\n\nenum RuntimeResult {\n  Result(value : Dynamic);\n  Error(msg : String);\n}","package cards.model;\n\nimport thx.core.Error;\nimport thx.stream.Bus;\nimport thx.stream.Emitter;\nimport cards.model.SchemaEvent;\n\nclass Schema {\n  var fields : Map<String, SchemaType>;\n  public var stream(default, null) : Emitter<SchemaEvent>;\n  var bus : Bus<SchemaEvent>;\n\n  public function new() {\n    fields = new Map();\n    stream = bus = new Bus();\n  }\n\n  public function add(name : String, type : SchemaType) {\n    if(fields.exists(name))\n      throw new Error('Schema already contains a field \"$name\"');\n    fields.set(name, type);\n    bus.pulse(AddField(name, type));\n  }\n\n  public function reset(?list : Array<FieldPair>) {\n    if(null == list)\n      list = [];\n    fields = new Map();\n    list.map(function(pair) {\n      fields.set(pair.name, pair.type);\n    });\n    bus.pulse(ListFields(list.copy()));\n  }\n\n  public function delete(name : String) {\n    if(!fields.exists(name))\n      throw new Error('Schema does not contain a field \"${name}\"');\n    fields.remove(name);\n    bus.pulse(DeleteField(name));\n  }\n\n  public function rename(oldname : String, newname : String) {\n    if(!fields.exists(oldname))\n      throw new Error('Schema does not contain a field \"${oldname}\"');\n    var type = fields.get(oldname);\n    fields.remove(oldname);\n    fields.set(newname, type);\n    bus.pulse(RenameField(oldname, newname));\n  }\n\n  public function retype(name : String, type : SchemaType) {\n    if(!fields.exists(name))\n      throw new Error('Schema does not contain a field \"${name}\"');\n    fields.set(name, type);\n    bus.pulse(RetypeField(name, type));\n  }\n\n  public function get(name : String) {\n    return fields.get(name);\n  }\n\n  public function exists(name : String) {\n    return fields.exists(name);\n  }\n\n  public function getFieldNames() {\n    var arr = [];\n    for(key in fields.keys())\n      arr.push(key);\n    return arr;\n  }\n\n  public function getPairs() {\n    return getFieldNames().map(function(key) {\n      return {\n        name : key,\n        type : fields.get(key)\n      };\n    });\n  }\n}","package cards.model;\n\nclass Scope {\n  public var name : String = \"Franco\";\n  public function new() {}\n}","package cards.model.ref;\n\nclass BaseRef {\n  public var parent(default, null) : IParentRef;\n  public function new(?parent : IParentRef) {\n    this.parent = null != parent ? parent : EmptyParent.instance;\n  }\n\n  public function getRoot() : IRef {\n    var ref : IRef = cast this;\n    while(!Std.is(ref.parent, BaseRef.EmptyParent))\n      ref = cast ref.parent;\n    return ref;\n  }\n}\n\nclass EmptyParent implements IParentRef {\n  public static var instance(default, null) : IParentRef = new EmptyParent();\n\n  function new() {}\n\n  public function removeChild(child : IRef) { }\n}","package cards.model.ref;\n\nusing thx.core.Iterators;\nusing thx.core.Arrays;\nusing thx.core.Ints;\n\nclass ArrayRef extends BaseRef implements IRef implements IParentRef {\n  var items : Map<Int, IRef>;\n  var inverse : Map<IRef, Int>;\n\n  public function new(?parent : IParentRef) {\n    super(parent);\n    items   = new Map();\n    inverse = new Map();\n  }\n\n  public function get() {\n    var res = [];\n    items\n      .keys()\n      .toArray()\n      .order(Ints.compare)\n      .map(function(i) return items.get(i))\n      .map(function(ref) {\n        if(ref.hasValue())\n          res.push(ref.get());\n      });\n    return res;\n  }\n\n  public function set(value : Dynamic) {\n    if(!Std.is(value, Array)) throw 'value \"$value\" is not an array';\n\n    (value : Array<Dynamic>).mapi(function(v, i) {\n      var ref = items.get(i);\n      if(null == ref) {\n        items.set(i, ref = Ref.fromValue(v, this));\n        inverse.set(ref, i);\n      } else {\n        ref.set(v);\n      }\n    });\n  }\n\n  public function remove() {\n    for(ref in items) {\n      ref.remove();\n    }\n    parent.removeChild(this);\n  }\n\n  public function removeChild(child : IRef) : Void {\n    var i = inverse.get(child);\n    if(null == i) throw '\"$child\" is not child of \"$this\"';\n    items.remove(i);\n    inverse.remove(child);\n  }\n\n  public function hasValue() {\n    for(ref in items)\n      if(ref.hasValue())\n        return true;\n    return false;\n  }\n\n  public function resolve(path : String, terminal : Bool = true) : IRef {\n    if(path == \"\") return this;\n    if(!Ref.reIndex.match(path))\n      throw 'unable to resolve \"$path\" for ArrayRef';\n    var index = Std.parseInt(Ref.reIndex.matched(1)),\n      rest  = Ref.reIndex.matchedRight(),\n      ref   = items.get(index);\n    if(null == ref) {\n      items.set(index, ref = Ref.fromPath(rest, this, terminal));\n      inverse.set(ref, index);\n    }\n    return ref.resolve(rest, terminal);\n  }\n\n  public function toString()\n    return 'ArrayRef: $items';\n}","package cards.model.ref;\n\nusing thx.core.Iterators;\nusing thx.core.Iterables;\nimport thx.core.Types;\n\nclass ObjectRef extends BaseRef implements IRef implements IParentRef {\n  var fields : Map<String, IRef>;\n  var inverse : Map<IRef, String>;\n\n  public function new(?parent : IParentRef) {\n    super(parent);\n    fields = new Map();\n    inverse = new Map();\n  }\n\n  public function get() : Dynamic {\n    var o = {};\n    fields.keys().map(function(key) {\n      var ref = fields.get(key);\n      if(!ref.hasValue()) return;\n      Reflect.setField(o, key, ref.get());\n    });\n    return o;\n  }\n\n  public function set(obj : Dynamic) {\n    if(!Types.isAnonymousObject(obj)) throw 'object \"$obj\" is not an anonymous object';\n    Reflect.fields(obj).map(function(field) {\n      var ref   = fields.get(field),\n        value = Reflect.field(obj, field);\n      if(null == ref) {\n        ref = Ref.fromValue(value, this);\n        fields.set(field, ref);\n        inverse.set(ref, field);\n      } else {\n        ref.set(value);\n      }\n    });\n  }\n\n  public function hasValue() {\n    for(ref in fields)\n      if(ref.hasValue())\n        return true;\n    return false;\n  }\n\n  public function remove() {\n    fields.map(function(ref) ref.remove());\n    parent.removeChild(this);\n  }\n\n  public function removeChild(child : IRef) {\n    var key = inverse.get(child);\n    if(null == key) throw '\"$child\" is not child of \"$this\"';\n    inverse.remove(child);\n    fields.remove(key);\n  }\n\n  public function resolve(path : String, terminal : Bool = false) : IRef {\n    if(path == \"\") return this;\n    if(!Ref.reField.match(path))\n      throw 'unable to resolve \"$path\" for ObjectRef';\n    var field = Ref.reField.matched(1),\n        rest  = Ref.reField.matchedRight(),\n        ref   = fields.get(field);\n    if(null == ref) {\n      fields.set(field, ref = Ref.fromPath(rest, this, terminal));\n      inverse.set(ref, field);\n    }\n    return ref.resolve(rest, terminal);\n  }\n\n  public function toString()\n    return 'ObjectRef: $fields';\n}","package cards.model.ref;\n\nusing thx.core.Types;\n\nclass Ref {\n  public static function fromValue(value : Dynamic, ?parent : IParentRef) : IRef {\n    if(null == parent)\n      parent = BaseRef.EmptyParent.instance;\n    var ref : IRef = if(Std.is(value, Array)) {\n        new ArrayRef(parent);\n      } else if(Types.isAnonymousObject(value)) {\n        new ObjectRef(parent);\n      } else {\n        new ValueRef(parent);\n      }\n    ref.set(value);\n    return ref;\n  }\n\n  public static var reField = ~/^\\.?([^.\\[]+)/;\n  public static var reIndex = ~/^\\[(\\d+)\\]/;\n  public static function fromPath(path : String, ?parent : IParentRef, terminal : Bool = true) : IRef {\n    trace('$path with $parent $terminal');\n    if(null == parent)\n      parent = BaseRef.EmptyParent.instance;\n    if(path == \"\") {\n      return terminal ? new ValueRef(parent) : new UnknownRef(parent);\n    } else if(reField.match(path)) {\n      return new ObjectRef(parent);\n    } else if(reIndex.match(path)) {\n      return new ArrayRef(parent);\n    } else {\n      return throw 'invalid path \"$path\"';\n    }\n  }\n\n  public static function resolvePath(path : String, ?parent : IParentRef, terminal : Bool = true) : IRef {\n    var ref = fromPath(path, parent, terminal);\n    return ref.resolve(path);\n  }\n}","package cards.model.ref;\n\nusing thx.core.Objects;\nusing thx.core.Arrays;\n\nclass UnknownRef extends BaseRef implements IRef implements IParentRef {\n  public var ref(default, null) : Null<IRef>;\n  var hasRef : Bool = false;\n\n  public function get()\n    return hasRef ? ref.get() : null;\n\n  public function set(value : Dynamic) {\n    if(hasRef)\n      ref.set(value);\n    else {\n      hasRef = true;\n      ref = Ref.fromValue(value, this);\n    }\n  }\n\n  public function remove() : Void {\n    if(hasRef)\n      ref.remove();\n    parent.removeChild(this);\n  }\n\n  public function removeChild(child : IRef) : Void {\n    if(hasRef) {\n      ref = null;\n      hasRef = false;\n    }\n  }\n\n  public function hasValue() : Bool\n    return hasRef && ref.hasValue();\n\n  public function resolve(path : String, terminal : Bool = true) : IRef {\n    if(hasRef)\n      return ref.resolve(path, terminal);\n    if(path == \"\")\n      return this;\n    hasRef = true;\n    ref = Ref.fromPath(path, this, terminal);\n    return ref.resolve(path, terminal);\n  }\n\n  public function toString()\n    return 'UnknownRef: $ref';\n}","package cards.model.ref;\n\nusing thx.core.Objects;\nusing thx.core.Arrays;\n\nclass ValueRef extends BaseRef implements IRef {\n  var _hasValue : Bool = false;\n  var value : Dynamic;\n\n  public function get()\n    return value;\n\n  public function set(value : Dynamic) {\n    this.value = value;\n    _hasValue = true;\n  }\n\n  public function remove() : Void {\n    value = null;\n    _hasValue = false;\n    parent.removeChild(this);\n  }\n\n  public function hasValue() : Bool\n    return _hasValue;\n\n  public function resolve(path : String, terminal : Bool = true) : IRef {\n    if(path != \"\") throw 'unable to resolve path \"$path\" on ValueRef';\n    return this;\n  }\n\n  public function toString()\n    return 'ValueRef: $value';\n}","package cards.properties;\n\nimport cards.components.Component;\n\n@:access(cards.components.Properties)\nclass Property {\n  public var component(default, null) : Component;\n  public var name(default, null) : String;\n  var cancels : Array<Void -> Void>;\n  public function new(component : Component, name : String) {\n    this.component = component;\n    this.name = name;\n    cancels = [];\n    component.properties.add(this);\n  }\n\n  public function dispose() {\n    while(cancels.length > 0)\n      cancels.shift()();\n    if(this.component.properties.exists(name)) {\n      this.component.properties.remove(name);\n      this.component = null;\n    }\n  }\n\n  public function toString()\n    return Type.getClassName(Type.getClass(this)).split('.').pop();\n}","package cards.properties;\n\nimport haxe.ds.Option;\nimport cards.components.Component;\nimport thx.stream.Value;\nimport cards.model.Runtime;\nusing thx.stream.Emitter;\nusing thx.stream.dom.Dom;\n\nclass ValueProperty<T> extends Property {\n  public var stream(default, null) : Value<T>;\n  public var runtime(default, null) : Value<Option<Runtime>>;\n  public var runtimeError(default, null) : Value<Option<String>>;\n\n  public function new(defaultValue : T, component : Component, name : String) {\n    stream = new Value(defaultValue);\n    runtime = new Value(None);\n    runtimeError = new Value(None);\n    super(component, name);\n\n    runtimeError\n      .toBool()\n      .subscribe(component.el.subscribeToggleClass('error'));\n\n    runtime\n      .subscribe(function(opt : Option<Runtime>) switch opt {\n        case None:\n          // TODO: Remove?\n          component.el.classList.remove('error');\n          runtimeError.set(None);\n        case Some(runtime):\n          switch runtime.expression {\n            case SyntaxError(e):\n              // TODO: Remove?\n              component.el.classList.add('error');\n              runtimeError.set(None);\n            case Fun(f):\n              // TODO: Remove?\n              component.el.classList.remove('error');\n              runtimeError.set(None);\n              switch f() {\n                case Result(v):\n                  stream.set(transform(v));\n                case Error(e):\n                  runtimeError.set(Some(e));\n              }\n          }\n      });\n  }\n\n  public function transform(value : Dynamic) : T {\n    return throw Type.getClassName(Type.getClass(this)).split('.').pop() + '.transform() is abstract and must be overridden';\n  }\n\n  override public function dispose() {\n    stream.clear();\n    runtime.clear();\n    runtimeError.clear();\n    super.dispose();\n  }\n\n  function get_value()\n    return stream.get();\n\n  function set_value(value : T)\n    return stream.set(value);\n}","package cards.properties;\n\nimport cards.types.DynamicTransform;\n\nclass BoolProperty extends ValueProperty<Bool> {\n  override public function transform(value : Dynamic) : Bool\n    return DynamicTransform.toBool(value);\n}","package cards.properties;\n\nabstract PropertyName(String) {\n  @:from public inline static function fromProperty(property : Property)\n    return new PropertyName(property.name);\n\n  @:from public inline static function fromString(name : String)\n    return new PropertyName(name);\n\n  public inline function new(name : String)\n    this = name;\n\n  @:to public inline function toString()\n    return this;\n}","package cards.properties;\n\nimport cards.types.DynamicTransform;\n\nclass StringProperty extends ValueProperty<String> {\n  override public function transform(value : Dynamic) : String\n    return DynamicTransform.toString(value);\n}","package cards.properties;\n\nimport cards.components.Component;\nusing thx.stream.dom.Dom;\n\nclass Text extends StringProperty {\n  public function new(component : Component, ?defaultText : String) {\n    super(null == defaultText ? component.el.textContent : defaultText, component, 'text');\n    stream.subscribe(component.el.subscribeText());\n  }\n}","package cards.properties;\n\nimport cards.components.Component;\nusing thx.stream.dom.Dom;\n\nclass ToggleClass extends BoolProperty {\n  public function new(component : Component, name : String, ?className : String) {\n    var defaultValue = component.el.classList.contains(className);\n    super(defaultValue, component, name);\n    className = null == className ? name : className;\n    stream.subscribe(component.el.subscribeToggleClass(className));\n  }\n}","package cards.properties;\n\nimport cards.components.Component;\nimport cards.properties.ValueProperty;\nimport cards.model.SchemaType;\n\nclass ValueProperties {\n  public var map : Map<String, ValuePropertyInfo<Dynamic>>;\n  public function new() {\n    map = new Map();\n  }\n\n  public function add(name : String, info : ValuePropertyInfo<Dynamic>)\n    map.set(name, info);\n\n  public function remove(name : String)\n    map.remove(name);\n\n  public function get(name : String)\n    return map.get(name);\n\n  public function ensure(name : String, component : Component) : ValueProperty<Dynamic>\n    return if(component.properties.exists(name))\n      cast(component.properties.get(name), ValueProperty<Dynamic>);\n    else\n      get(name).create(component);\n\n  public function list()\n    return map.keys();\n}\n\ntypedef ValuePropertyInfo<T> = {\n  name    : String,\n  display : String,\n  create  : Component -> ValueProperty<T>,\n  type    : SchemaType\n}","package cards.properties;\n\nusing thx.stream.dom.Dom;\nimport cards.components.Component;\n\nclass Visible extends BoolProperty {\n  public function new(component : Component, defaultValue : Bool) {\n    super(defaultValue, component, 'visible');\n    stream.subscribe(component.el.subscribeToggleVisibility());\n  }\n}","package cards.types;\n\nusing thx.core.Arrays;\n\nclass ArrayTransform {\n  public static function toArray(value : Array<Dynamic>) : Array<Dynamic> {\n     return null != value ? value : [];\n  }\n\n  public static function toBool(value : Array<Dynamic>) : Bool {\n    return toArray(value).length > 0;\n  }\n\n  public static function toDate(value : Array<Dynamic>) : Date {\n    var defaults = [2000, 0, 1, 0, 0, 0],\n      values   = toArray(value)\n        .map(DynamicTransform.toFloat)\n        .map(function(v) return Math.round(v))\n        .slice(0, defaults.length);\n    values = values.concat(defaults.slice(values.length));\n    return new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\n  }\n\n  public static function toFloat(value : Array<Dynamic>) : Float {\n    return toArray(value).length;\n  }\n\n  public static function toObject(value : Array<Dynamic>) : {} {\n    var obj = {};\n    toArray(value).mapi(function(v, i) {\n      Reflect.setField(obj, 'field_${i+1}', v);\n    });\n    return obj;\n  }\n\n  public static function toString(value : Array<Dynamic>) : String {\n    return toArray(value).map(DynamicTransform.toString).join(', ');\n  }\n\n  public static function toCode(value : Array<Dynamic>) : String {\n    return '[${toArray(value).map(DynamicTransform.toCode).join(\",\")}]';\n  }\n\n  public static function toReference(value : Array<Dynamic>) : String {\n    return '';\n  }\n}","package cards.types;\n\nclass BoolTransform {\n  public static function toArray(value : Bool) : Array<Dynamic> {\n    return [toBool(value) ? false : value];\n  }\n\n  public static function toBool(value : Bool) : Bool {\n    return null != value && value;\n  }\n\n  public static function toDate(value : Bool) : Date {\n    return Date.now();\n  }\n\n  public static function toFloat(value : Bool) : Float {\n    return toBool(value) ? 1 : 0;\n  }\n\n  public static function toObject(value : Bool) : {} {\n    return ArrayTransform.toObject([toBool(value)]);\n  }\n\n  public static function toString(value : Bool) : String {\n    return toBool(value) ? 'Yes' : 'No';\n  }\n\n  public static function toCode<T>(value : Bool) : String {\n    return toBool(value) ? 'true' : 'false';\n  }\n\n  public static function toReference(value : Bool) : String {\n    return '';\n  }\n}","package cards.types;\n\nimport haxe.Json;\nusing StringTools;\n\nclass CodeTransform {\n  public static function toArray(value : String) : Array<Dynamic> {\n    return try {\n      var t = Json.parse(toCode(value));\n      if(Std.is(t, Array))\n        t;\n      else\n        DynamicTransform.toArray(t);\n    } catch(_ : Dynamic) {\n      [];\n    }\n  }\n\n  public static function toBool(value : String) : Bool {\n    return switch toCode(value) {\n      case 'true', '1': true;\n      case _: false;\n    }\n  }\n\n  static var datePattern = ~/Date\\(-?\\d+(:?\\.\\d+)?(:?e-?\\d+)?\\)/;\n  public static function toDate(value : String) : Date {\n    if(datePattern.match(value))\n      return Date.fromTime(Std.parseFloat(datePattern.matched(1)));\n    else\n      return Date.now();\n  }\n\n  public static function toFloat(value : String) : Float {\n    return Std.parseFloat(toCode(value));\n  }\n\n  public static function toObject(value : String) : {} {\n    return try {\n      var t = Json.parse(toCode(value));\n      if(Reflect.isObject(t) && !Std.is(t, String))\n        t;\n      else\n        DynamicTransform.toObject(t);\n    } catch(_ : Dynamic) {\n      {};\n    }\n  }\n\n  public static function toString(value : String) : String {\n    return try {\n      var t = Json.parse(toCode(value));\n      if(Std.is(t, String))\n        t;\n      else\n        DynamicTransform.toString(t);\n    } catch(_ : Dynamic) {\n      '';\n    }\n  }\n\n  public static function toCode(value : String) : String {\n    return null != value ? value.trim() : 'null';\n  }\n\n  static var PATTERN = ~/^\\s*\\$\\.([a-z](:?(\\.|\\[\\d+\\])?[a-z0-9]*)*)\\s*$/;\n  public static function toReference(value : String) : String {\n    var code = toCode(value);\n    return PATTERN.match(code) ? PATTERN.matched(1) : '';\n  }\n}","package cards.types;\n\nclass DateTransform {\n  public static function toArray(value : Date) : Array<Dynamic> {\n    return [toDate(value)];\n  }\n\n  public static function toBool(value : Date) : Bool {\n    return false;\n  }\n\n  public static function toDate(value : Date) : Date {\n    return null != value ? value : Date.now();\n  }\n\n  public static function toFloat(value : Date) : Float {\n    return toDate(value).getTime();\n  }\n\n  public static function toObject(value : Date) : {} {\n    return ArrayTransform.toObject([toDate(value)]);\n  }\n\n  public static function toString(value : Date) : String {\n    return toDate(value).toString();\n  }\n\n  public static function toCode(value : Date) : String {\n    return 'new Date(${toDate(value).getTime()})';\n  }\n\n  public static function toReference(value : Date) : String {\n    return '';\n  }\n}","package cards.types;\n\nclass DynamicTransform {\n  public static function toArray(value : Dynamic) : Array<Dynamic> {\n    if(null == value)\n      return [];\n    if(Std.is(value, Array))\n      return ArrayTransform.toArray(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toArray(value);\n    if(Std.is(value, Date))\n      return DateTransform.toArray(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toArray(value);\n    if(Std.is(value, String))\n      return StringTransform.toArray(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toArray(value);\n    if(Reflect.isFunction(value))\n      return toArray(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toArray';\n  }\n\n  public static function toBool(value : Dynamic) : Bool {\n    if(null == value)\n      return false;\n    if(Std.is(value, Array))\n      return ArrayTransform.toBool(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toBool(value);\n    if(Std.is(value, Date))\n      return DateTransform.toBool(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toBool(value);\n    if(Std.is(value, String))\n      return StringTransform.toBool(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toBool(value);\n    if(Reflect.isFunction(value))\n      return toBool(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toBool';\n  }\n\n  public static function toDate(value : Dynamic) : Date {\n    if(null == value)\n      return Date.now();\n    if(Std.is(value, Array))\n      return ArrayTransform.toDate(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toDate(value);\n    if(Std.is(value, Date))\n      return DateTransform.toDate(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toDate(value);\n    if(Std.is(value, String))\n      return StringTransform.toDate(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toDate(value);\n    if(Reflect.isFunction(value))\n      return toDate(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toDate';\n  }\n\n  public static function toFloat(value : Dynamic) : Float {\n    if(null == value)\n      return 0;\n    if(Std.is(value, Array))\n      return ArrayTransform.toFloat(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toFloat(value);\n    if(Std.is(value, Date))\n      return DateTransform.toFloat(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toFloat(value);\n    if(Std.is(value, String))\n      return StringTransform.toFloat(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toFloat(value);\n    if(Reflect.isFunction(value))\n      return toFloat(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toFloat';\n  }\n\n  public static function toObject(value : Dynamic) : {} {\n    if(null == value)\n      return {};\n    if(Std.is(value, Array))\n      return ArrayTransform.toObject(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toObject(value);\n    if(Std.is(value, Date))\n      return DateTransform.toObject(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toObject(value);\n    if(Std.is(value, String))\n      return StringTransform.toObject(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toObject(value);\n    if(Reflect.isFunction(value))\n      return toObject(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toObject';\n  }\n\n  public static function toString(value : Dynamic) : String {\n    if(null == value)\n      return '';\n    if(Std.is(value, Array))\n      return ArrayTransform.toString(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toString(value);\n    if(Std.is(value, Date))\n      return DateTransform.toString(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toString(value);\n    if(Std.is(value, String))\n      return StringTransform.toString(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toString(value);\n    if(Reflect.isFunction(value))\n      return toString(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toString';\n  }\n\n  public static function toCode(value : Dynamic) : String {\n    if(null == value)\n      return 'null';\n    if(Std.is(value, Array))\n      return ArrayTransform.toCode(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toCode(value);\n    if(Std.is(value, Date))\n      return DateTransform.toCode(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toCode(value);\n    if(Std.is(value, String))\n      return StringTransform.toCode(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toCode(value);\n    if(Reflect.isFunction(value))\n      return toCode(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toCode';\n  }\n\n  public static function toReference(value : Dynamic) : String {\n    if(null == value)\n      return '';\n    if(Std.is(value, Array))\n      return ArrayTransform.toReference(value);\n    if(Std.is(value, Bool))\n      return BoolTransform.toReference(value);\n    if(Std.is(value, Date))\n      return DateTransform.toReference(value);\n    if(Std.is(value, Float))\n      return FloatTransform.toReference(value);\n    if(Std.is(value, String))\n      return StringTransform.toReference(value);\n    if(Reflect.isObject(value))\n      return ObjectTransform.toReference(value);\n    if(Reflect.isFunction(value))\n      return toReference(null);\n    return throw 'Type of $value cannot be matched by DynamicTransform.toReference';\n  }\n}","package cards.types;\n\nclass FloatTransform {\n  public static function toArray(value : Float) : Array<Dynamic> {\n    return [toFloat(value)];\n  }\n\n  public static function toBool(value : Float) : Bool {\n    return toFloat(value) != 0;\n  }\n\n  public static function toDate(value : Float) : Date {\n    return Date.fromTime(toFloat(value));\n  }\n\n  public static function toFloat(value : Float) : Float {\n    return null != value ? value : 0.0;\n  }\n\n  public static function toObject(value : Float) : {} {\n    return ArrayTransform.toObject([toFloat(value)]);\n  }\n\n  public static function toString(value : Float) : String {\n    return '' + toFloat(value);\n  }\n\n  public static function toCode(value : Float) : String {\n    return '' + toFloat(value);\n  }\n\n  public static function toReference(value : Array<Dynamic>) : String {\n    return '';\n  }\n}","package cards.types;\n\nimport thx.core.Objects;\n\nclass ObjectTransform {\n  public static function toArray(value : {}) : Array<Dynamic> {\n    return [toObject(value)];\n  }\n\n  public static function toBool(value : {}) : Bool {\n    return !Objects.isEmpty(toObject(value));\n  }\n\n  public static function toDate(value : {}) : Date {\n    return Date.now();\n  }\n\n  public static function toFloat(value : {}) : Float {\n    return Reflect.fields(toObject(value)).length;\n  }\n\n  public static function toObject(value : {}) : {} {\n    return null != value ? value : {};\n  }\n\n  public static function toString(value : {}) : String {\n    return Reflect.fields(toObject(value)).map(function(field) {\n      return '$field: ' + DynamicTransform.toString(Reflect.field(value, field));\n    }).join(', ');\n  }\n\n  public static function toCode(value : {}) : String {\n    return \"{\" + Reflect.fields(toObject(value)).map(function(field) {\n      return '\"$field\" : ' + DynamicTransform.toCode(Reflect.field(value, field));\n    }).join(', ') + \"}\";\n  }\n\n  public static function toReference(value : Array<Dynamic>) : String {\n    return '';\n  }\n}","package cards.types;\n\nimport haxe.Json;\nusing StringTools;\n\nclass ReferenceTransform {\n  public static function toArray(value : String) : Array<Dynamic> {\n    return ArrayTransform.toArray(null);\n  }\n\n  public static function toBool(value : String) : Bool {\n    return BoolTransform.toBool(null);\n  }\n\n  public static function toDate(value : String) : Date {\n    return DateTransform.toDate(null);\n  }\n\n  public static function toFloat(value : String) : Float {\n    return FloatTransform.toFloat(null);\n  }\n\n  public static function toObject(value : String) : {} {\n    return ObjectTransform.toObject(null);\n  }\n\n  public static function toString(value : String) : String {\n    return StringTransform.toString(null);\n  }\n\n  public static function toCode(value : String) : String {\n    value = toReference(value);\n    return '' == value ? '' : '$.$value';\n  }\n\n  public static function toReference(value : String) : String {\n    return null == value ? '' : value;\n  }\n}","package cards.types;\n\nusing StringTools;\n\nclass StringTransform {\n  public static function toArray(value : String) : Array<Dynamic> {\n    return toString(value).split(',').map(StringTools.trim);\n  }\n\n  public static function toBool(value : String) : Bool {\n    return switch toString(value).trim().toLowerCase() {\n      case '', 'off', 'no', 'false', '0': false;\n      case _: true;\n    };\n  }\n\n  public static function toDate(value : String) : Date {\n    return try {\n      Date.fromString(value);\n    } catch(e : Dynamic) {\n      Date.now();\n    };\n  }\n\n  public static function toFloat(value : String) : Float {\n    return Std.parseFloat(toString(value));\n  }\n\n  public static function toObject(value : String) : {} {\n    return ArrayTransform.toObject([toString(value)]);\n  }\n\n  public static function toString(value : String) : String {\n    return null != value ? value : '';\n  }\n\n  public static function toCode(value : String) : String {\n    return '\"' + toString(value).replace('\"', '\\\\\"') + '\"';\n  }\n\n  public static function toReference(value : Array<Dynamic>) : String {\n    return '';\n  }\n}","package cards.types;\n\nimport cards.types.ArrayTransform;\nimport cards.types.BoolTransform;\nimport cards.types.DateTransform;\nimport cards.types.FloatTransform;\nimport cards.types.ObjectTransform;\nimport cards.types.StringTransform;\nimport cards.model.SchemaType;\n\nclass TypeTransform {\n  public static function transform(srcType : SchemaType, dstType : SchemaType) : Dynamic -> Dynamic {\n    return switch srcType {\n      case ArrayType(_):\n        switch dstType {\n          case ArrayType(_):\n            ArrayTransform.toArray;\n          case BoolType:\n            ArrayTransform.toBool;\n          case DateType:\n            ArrayTransform.toDate;\n          case FloatType:\n            ArrayTransform.toFloat;\n          case ObjectType(_):\n            ArrayTransform.toObject;\n          case StringType:\n            ArrayTransform.toString;\n          case CodeType:\n            ArrayTransform.toCode;\n          case ReferenceType:\n            ArrayTransform.toReference;\n        }\n      case BoolType:\n        switch dstType {\n          case ArrayType(_):\n            BoolTransform.toArray;\n          case BoolType:\n            BoolTransform.toBool;\n          case DateType:\n            BoolTransform.toDate;\n          case FloatType:\n            BoolTransform.toFloat;\n          case ObjectType(_):\n            BoolTransform.toObject;\n          case StringType:\n            BoolTransform.toString;\n          case CodeType:\n            BoolTransform.toCode;\n          case ReferenceType:\n            BoolTransform.toReference;\n        }\n      case DateType:\n        switch dstType {\n          case ArrayType(_):\n            DateTransform.toArray;\n          case BoolType:\n            DateTransform.toBool;\n          case DateType:\n            DateTransform.toDate;\n          case FloatType:\n            DateTransform.toFloat;\n          case ObjectType(_):\n            DateTransform.toObject;\n          case StringType:\n            DateTransform.toString;\n          case CodeType:\n            DateTransform.toCode;\n          case ReferenceType:\n            DateTransform.toReference;\n        }\n      case FloatType:\n        switch dstType {\n          case ArrayType(_):\n            FloatTransform.toArray;\n          case BoolType:\n            FloatTransform.toBool;\n          case DateType:\n            FloatTransform.toDate;\n          case FloatType:\n            FloatTransform.toFloat;\n          case ObjectType(_):\n            FloatTransform.toObject;\n          case StringType:\n            FloatTransform.toString;\n          case CodeType:\n            FloatTransform.toCode;\n          case ReferenceType:\n            FloatTransform.toReference;\n        }\n      case ObjectType(_):\n        switch dstType {\n          case ArrayType(_):\n            ObjectTransform.toArray;\n          case BoolType:\n            ObjectTransform.toBool;\n          case DateType:\n            ObjectTransform.toDate;\n          case FloatType:\n            ObjectTransform.toFloat;\n          case ObjectType(_):\n            ObjectTransform.toObject;\n          case StringType:\n            ObjectTransform.toString;\n          case CodeType:\n            ObjectTransform.toCode;\n          case ReferenceType:\n            ObjectTransform.toReference;\n        }\n      case StringType:\n        switch dstType {\n          case ArrayType(_):\n            StringTransform.toArray;\n          case BoolType:\n            StringTransform.toBool;\n          case DateType:\n            StringTransform.toDate;\n          case FloatType:\n            StringTransform.toFloat;\n          case ObjectType(_):\n            StringTransform.toObject;\n          case StringType:\n            StringTransform.toString;\n          case CodeType:\n            StringTransform.toCode;\n          case ReferenceType:\n            StringTransform.toReference;\n        }\n      case CodeType:\n        switch dstType {\n          case ArrayType(_):\n            CodeTransform.toArray;\n          case BoolType:\n            CodeTransform.toBool;\n          case DateType:\n            CodeTransform.toDate;\n          case FloatType:\n            CodeTransform.toFloat;\n          case ObjectType(_):\n            CodeTransform.toObject;\n          case StringType:\n            CodeTransform.toString;\n          case CodeType:\n            CodeTransform.toCode;\n          case ReferenceType:\n            CodeTransform.toReference;\n        }\n      case ReferenceType:\n        switch dstType {\n          case ArrayType(_):\n            ReferenceTransform.toArray;\n          case BoolType:\n            ReferenceTransform.toBool;\n          case DateType:\n            ReferenceTransform.toDate;\n          case FloatType:\n            ReferenceTransform.toFloat;\n          case ObjectType(_):\n            ReferenceTransform.toObject;\n          case StringType:\n            ReferenceTransform.toString;\n          case CodeType:\n            ReferenceTransform.toCode;\n          case ReferenceType:\n            ReferenceTransform.toReference;\n        }\n    }\n  }\n}","package cards.ui;\n\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport cards.ui.fragments.Block;\nimport cards.ui.fragments.ReadonlyBlock;\nimport cards.ui.fragments.Fragment;\nimport cards.ui.fragments.InlineText;\nimport thx.stream.Value;\nimport haxe.ds.Option;\nusing thx.core.Options;\nusing thx.stream.Bus;\nusing thx.stream.Emitter;\n\nclass Article {\n  public var component(default, null) : Component;\n  public var fragment(default, null) : Value<Option<Fragment>>;\n\n  // TODO: possibly remove\n  var fragmentStream : Bus<Fragment>;\n  var fragmentsMap : Map<Fragment, Void -> Void>;\n\n  public function new(options : ComponentOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<article></article>';\n    component = new Component(options);\n    fragmentsMap = new Map();\n    fragmentStream = new Bus();\n    fragment = new Value(None);\n    fragmentStream.toOption().feed(fragment);\n    var filtered = fragment.filterOption();\n    filtered.previous().subscribe(function(fragment : Fragment) {\n      fragment.active.set(false);\n    });\n    filtered.subscribe(function(fragment : Fragment) {\n      fragment.active.set(true);\n    });\n  }\n\n  function addFragment(fragment : Fragment) {\n    var focusStream = fragment\n          .focus\n          .withValue(true)\n          .mapValue(function(_) : Fragment return fragment)\n          .plug(fragmentStream);\n    fragmentsMap.set(fragment, focusStream.cancel);\n  }\n\n  public function addBlock() {\n    var fragment = new Block({\n        parent : component,\n        container : component.el\n      });\n    addFragment(fragment);\n    addInlineText(fragment);\n    return fragment;\n  }\n\n  public function addInlineText(parent : Block) {\n    var fragment = new InlineText({\n        fragmentParent : parent,\n        container : parent.component.el,\n        defaultText : ''\n      });\n    addFragment(fragment);\n    fragment.focus.set(true);\n  }\n\n  public function addReadonly() {\n    var fragment = new ReadonlyBlock({\n        parent : component,\n        container : component.el\n      });\n    addFragment(fragment);\n    return fragment;\n  }\n\n  public function removeFragment(fragment : Fragment) {\n    if(this.fragment.get().equalsValue(fragment))\n      this.fragment.set(None);\n    var finalizer = fragmentsMap.get(fragment);\n    fragmentsMap.remove(fragment);\n    finalizer();\n  }\n}","package cards.ui;\n\nimport cards.model.Model;\nimport cards.components.Component;\nimport cards.ui.fragments.FragmentMapper;\nimport js.html.Element;\nimport udom.Dom;\nusing thx.stream.Emitter;\n\nclass Card {\n  public static function create(model : Model, container : Element, mapper : FragmentMapper) {\n    var card = new Component({\n          template : '<div class=\"card\"><div class=\"doc\"></div><aside><div class=\"context\"></div><div class=\"model\"></div></aside></div>'\n        }),\n        modelView = new ModelView(),\n        document = new Document({ el : Query.first('.doc', card.el) }),\n        context = new ContextView(\n          document,\n          model,\n          modelView,\n          mapper,\n          { el : Query.first('.context', card.el) }\n        );\n\n    modelView.component.appendTo(Query.first('.model', card.el));\n\n    //modelView.schema.subscribe(model.schemaEventSubscriber);\n    modelView.data.subscribe(model.dataEventSubscriber);\n\n    card.appendTo(container);\n\n    document.article.addBlock();\n\n    return {\n      card : card,\n      modelView : modelView,\n      document : document,\n      context : context\n    };\n  }\n}","package cards.ui.widgets;\n\nimport js.Browser;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport js.html.Element;\nimport cards.properties.Visible;\nimport udom.Dom;\n\nclass FrameOverlay {\n  public var component(default, null) : Component;\n  public var visible(default, null) : Visible;\n  public var anchorElement(default, null) : Element;\n  var my : AnchorPoint;\n  var at : AnchorPoint;\n  public function new(options : ComponentOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<div class=\"frame-overlay\"></div>';\n    component = new Component(options);\n    visible = new Visible(component, false);\n    function clear(_) {\n      visible.stream.set(false);\n    }\n    visible.stream\n      .filterValue(function(b) {\n        return !b;\n      })\n      .subscribe(function(_) {\n        Browser.document.removeEventListener('mouseup', clear, false);\n      });\n    visible.stream\n      .filterValue(function(b) {\n        return b;\n      })\n      .subscribe(function(_) {\n        Browser.document.addEventListener('mouseup', clear, false);\n        reposition();\n      });\n    anchorElement = Browser.document.body;\n  }\n\n  public function anchorTo(el : Element, ?my : AnchorPoint, ?at : AnchorPoint) {\n    anchorElement = el;\n    this.my = null == my ? TopLeft : my;\n    this.at = null == at ? BottomLeft : at;\n    if(visible.stream.get())\n      reposition();\n  }\n\n  public function reposition() {\n    if(!component.isAttached) {\n      var parent = [Query.first(Config.selectors.app), Browser.document.body].filter(function(v) return null != v).shift();\n      component.appendTo(parent);\n    }\n    var style = component.el.style;\n    style.position = \"fixed\";\n\n    var atrect = anchorElement.getBoundingClientRect(),\n      myrect = component.el.getBoundingClientRect(),\n      x = 0.0,\n      y = 0.0;\n    // AT Y\n    switch at {\n      case TopLeft, Top, TopRight:\n        y = atrect.top;\n      case Left, Center, Right:\n        y = atrect.top + atrect.height / 2;\n      case BottomLeft, Bottom, BottomRight:\n        y = atrect.top + atrect.height;\n    }\n    // AT X\n    switch at {\n      case TopLeft, Left, BottomLeft:\n        x = atrect.left;\n      case Top, Center, Bottom:\n        x = atrect.left + atrect.width / 2;\n      case TopRight, Right, BottomRight:\n        x = atrect.left + atrect.width;\n    }\n    // MY Y\n    switch my {\n      case TopLeft, Top, TopRight:\n        y -= 0;\n      case Left, Center, Right:\n        y -= myrect.height / 2;\n      case BottomLeft, Bottom, BottomRight:\n        y -= myrect.height;\n    }\n    // MY X\n    switch my {\n      case TopLeft, Left, BottomLeft:\n        x -= 0;\n      case Top, Center, Bottom:\n        x -= myrect.width / 2;\n      case TopRight, Right, BottomRight:\n        x -= myrect.width;\n    }\n    style.top  = y + 'px';\n    style.left = x + 'px';\n  }\n}","package cards.ui.widgets;\n\nimport cards.components.ComponentOptions;\n\nclass Tooltip extends FrameOverlay {\n  public function new(options : ComponentOptions)\n    super(options);\n\n  public function setContent(html : String)\n    component.el.innerHTML = html;\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic inline function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse\n\t\t\treturn untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t}\n\n\t@:ifFeature(\"may_print_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n}\n","package udom;\n\nusing StringTools;\nimport js.html.Element;\nimport js.html.NodeList;\nimport thx.core.Nil;\nimport thx.promise.Promise;\n\nclass Html {\n  public static function parseList(html : String) : NodeList {\n    var el = js.Browser.document.createElement('div');\n    el.innerHTML = html;\n    return el.childNodes;\n  }\n\n  public inline static function parseAll(html : String) : Array<Element> {\n    return H.toArray(parseList(html.trim()));\n  }\n\n  // TODO: unsafe cast\n  public inline static function parse(html : String) : Element {\n    return cast parseList(html.ltrim())[0];\n  }\n}\n\nclass Query {\n  static var doc : Element = untyped __js__('document');\n  public static function first(selector : String, ?ctx : js.html.Element) : Element {\n    return (ctx != null ? ctx : doc).querySelector(selector);\n  }\n\n  public static function list(selector : String, ?ctx : js.html.Element) : NodeList {\n    return (ctx != null ? ctx : doc).querySelectorAll(selector);\n  }\n\n  public inline static function all(selector : String, ?ctx : js.html.Element) : Array<Element> {\n    return H.toArray(list(selector, ctx));\n  }\n\n  public static function getElementIndex(el : Element) {\n    var index = 0;\n    while(null != (el = el.previousElementSibling))\n      index++;\n    return index;\n  }\n\n  public static function childOf(child : Element, parent : Element)\n    return null != child && child.parentElement == parent ? child : null;\n\n  public static function childrenOf(children : Array<Element>, parent : Element) : Array<Element>\n    return children.filter(function(child) return child.parentElement == parent);\n}\n\nprivate class H {\n  public inline static function toArray(list : js.html.NodeList) : Array<Element>\n    return untyped __js__('Array.prototype.slice.call')(list, 0);\n}","package thx.stream.dom;\n\nusing StringTools;\nimport js.html.*;\nusing thx.core.Nil;\nusing thx.stream.Emitter;\nusing thx.promise.Promise;\n\nclass Dom {\n  public static function ready() : Promise<Nil>\n    return Promise.create(function(resolve, _) {\n      js.Browser.document.addEventListener(\"DOMContentLoaded\", function(_) {\n        resolve(nil);\n      }, false);\n    });\n\n  public inline static function streamClick(el : Element, capture = false) : Emitter<MouseEvent>\n    return streamMouseEvent(el, 'click', capture);\n\n  public static function streamEvent<TEvent : Event>(el : Element, name : String, capture = false) : Emitter<TEvent>\n    return new Emitter(function(stream) {\n      el.addEventListener(name, stream.pulse, capture);\n      stream.addCleanUp(function() el.removeEventListener(name, stream.pulse, capture));\n    });\n\n  public static function streamFocus(el : Element, capture = false) : Emitter<Bool>\n    return streamEvent(el, 'focus', capture).toTrue().merge(streamEvent(el, 'blur', capture).toFalse());\n\n  public static function streamKey(el : Element, name : String, capture = false) : Emitter<KeyboardEvent>\n    return new Emitter({\n      if(!name.startsWith('key'))\n        name = 'key$name';\n      function(stream) {\n        el.addEventListener(name, stream.pulse, capture);\n        stream.addCleanUp(function() el.removeEventListener(name, stream.pulse, capture));\n      }\n    });\n\n  public inline static function streamInput(el : InputElement, capture = false) : Emitter<String>\n    return streamMouseEvent(el, 'input', capture).mapValue(function(_) return el.value);\n\n  public inline static function streamMouseDown(el : Element, capture = false) : Emitter<MouseEvent>\n    return streamEvent(el, \"mousedown\", capture);\n\n  public inline static function streamMouseEvent(el : Element, name : String, capture = false) : Emitter<MouseEvent>\n    return streamEvent(el, name, capture);\n\n  public inline static function streamMouseMove(el : Element, capture = false) : Emitter<MouseEvent>\n    return streamEvent(el, \"mousemove\", capture);\n\n  public inline static function streamMouseUp(el : Element, capture = false) : Emitter<MouseEvent>\n    return streamEvent(el, \"mouseup\", capture);\n\n  public static function subscribeAttribute<T>(el : Element, name : String) : T -> Void\n    return function(value : T) if(null == value) el.removeAttribute(name) else el.setAttribute(name, cast value);\n\n  public static function subscribeFocus(el : Element) : Bool -> Void\n    return function(focus : Bool) if(focus) el.focus() else el.blur();\n\n  public static function subscribeHTML(el : Element) : String -> Void\n    return function(html : String) el.innerHTML = html;\n\n  public static function subscribeText(el : Element, force = false) : String -> Void\n    return function(text : String) if(el.textContent != text || force) el.textContent = text;\n\n  public static function subscribeToggleAttribute<T>(el : Element, name : String, ?value : T) : Bool -> Void {\n    if(null == value)\n      value = cast el.getAttribute(name);\n    return function(on) if(on) el.setAttribute(name, cast value) else el.removeAttribute(name);\n  }\n\n  public static function subscribeToggleClass(el : Element, name : String) : Bool -> Void\n    return function(on) if(on) el.classList.add(name) else el.classList.remove(name);\n\n  public static function subscribeToggleVisibility(el : Element) : Bool -> Void {\n    var originalDisplay = el.style.display;\n    if(originalDisplay == 'none')\n      originalDisplay = '';\n    return function(on) if(on) el.style.display = originalDisplay else el.style.display = 'none';\n  }\n}","package thx.stream;\n\nimport haxe.ds.Option;\nusing thx.core.Arrays;\nimport thx.core.Error;\nimport thx.core.Nil;\nusing thx.core.Options;\n#if !macro\nimport thx.core.Timer in T;\n#end\nusing thx.core.Tuple;\nimport thx.promise.Promise;\n\nclass Emitter<T> {\n  var init : Stream<T> -> Void;\n  public function new(init : Stream<T> -> Void)\n    this.init = init;\n\n  // TRIGGER METHODS\n  @:access(thx.stream.Value)\n  @:access(thx.stream.Stream)\n  public function feed(value : Value<T>) : IStream {\n    var stream : Stream<T> = new Stream(null);\n    stream.subscriber = function(r) switch r {\n      case Pulse(v): value.set(v);\n      case Failure(e): stream.fail(e);\n      case End(c): if(c) stream.cancel() else stream.end();\n    };\n    value.upStreams.push(stream);\n    stream.addCleanUp(function() value.upStreams.remove(stream));\n    init(stream);\n    return stream;\n  }\n\n  @:access(thx.stream.Bus)\n  @:access(thx.stream.Stream)\n  public function plug(bus : Bus<T>) : IStream {\n    var stream : Stream<T> = new Stream(null);\n    stream.subscriber = bus.emit;\n    bus.upStreams.push(stream);\n    stream.addCleanUp(function() bus.upStreams.remove(stream));\n    init(stream);\n    return stream;\n  }\n\n  public function sign(subscriber : StreamValue<T> -> Void) : IStream {\n    var stream = new Stream(subscriber);\n    init(stream);\n    return stream;\n  }\n\n  public function subscribe(?pulse : T -> Void, ?fail : Error -> Void, ?end : Bool -> Void) : IStream {\n    pulse = null != pulse ? pulse : function(_) {};\n    fail  = null != fail  ? fail  : function(_) {};\n    end   = null != end   ? end   : function(_) {};\n    var stream = new Stream(function(r) switch r {\n      case Pulse(v):   pulse(v);\n      case Failure(e): fail(e);\n      case End(c):     end(c);\n    });\n    init(stream);\n    return stream;\n  }\n\n  // TRANSFORM STREAM\n  public function concat(other : Emitter<T>) : Emitter<T>\n    return new Emitter(function(stream) {\n      init(new Stream(function(r) switch r {\n        case Pulse(v):    stream.pulse(v);\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  other.init(stream);\n      }));\n    });\n\n  public function count()\n    return mapValue((function(){\n        var c = 0;\n        return function(_) return ++c;\n      })());\n#if !macro\n  public function debounce(delay : Int)\n    return new Emitter(function(stream) {\n      var cancel = function() {};\n      stream.addCleanUp(function() cancel());\n      init(new Stream(function(r : StreamValue<T>) {\n        switch r {\n          case Pulse(v):\n            cancel();\n            cancel = T.delay(stream.pulse.bind(v), delay);\n          case Failure(e): stream.fail(e);\n          case End(true):  stream.cancel();\n          case End(false): T.delay(stream.end, delay);\n        }\n      }));\n    });\n#end\n\n#if !macro\n  public function delay(time : Int)\n    return new Emitter(function(stream) {\n      var cancel = T.delay(function() init(stream), time);\n      stream.addCleanUp(cancel);\n    });\n#end\n\n  public function diff<TOut>(?init : T, f : T -> T -> TOut) : Emitter<TOut>\n    return window(2, null != init).mapValue(function(a) {\n        return if(a.length == 1)\n          f(init, a[0]);\n        else\n          f(a[0], a[1]);\n      });\n\n  public function merge(other : Emitter<T>) : Emitter<T>\n    return new Emitter(function(stream : Stream<T>) {\n      init(stream);\n      other.init(stream);\n    });\n\n  public function previous() : Emitter<T>\n    return new Emitter(function(stream) {\n      var value : Null<T> = null,\n          first = true;\n      function pulse() {\n        if(first) {\n          first = false;\n          return;\n        }\n        stream.pulse(value);\n      }\n\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          pulse();\n          value = v;\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n\n  public function reduce<TOut>(acc : TOut, f : TOut -> T -> TOut) : Emitter<TOut>\n    return new Emitter(function(stream) {\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          acc = f(acc, v);\n          stream.pulse(acc);\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n\n  public function window(size : Int, ?emitWithLess = false) : Emitter<Array<T>>\n    return new Emitter(function(stream) {\n      var buf = [];\n      function pulse() {\n        if(buf.length > size)\n          buf.shift();\n        if(buf.length == size || emitWithLess)\n          stream.pulse(buf.copy());\n      }\n\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          buf.push(v);\n          pulse();\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n\n\n  // TRANSFORM VALUES\n  public function map<TOut>(f : T -> Promise<TOut>) : Emitter<TOut>\n    return new Emitter(function(stream) {\n      init(new Stream(function(r) {\n        switch r {\n        case Pulse(v):\n          f(v).either(\n            function(vout) stream.pulse(vout),\n            function(err)  stream.fail(err)\n          );\n        case Failure(e):   stream.fail(e);\n        case End(true):    stream.cancel();\n        case End(false):   stream.end();\n      }}));\n    });\n\n  macro public function mapField<T>(emitter : haxe.macro.Expr.ExprOf<Emitter<T>>, field : haxe.macro.Expr) {\n    var id = 'o.'+haxe.macro.ExprTools.toString(field),\n        expr = haxe.macro.Context.parse(id, field.pos);\n    return macro $e{emitter}.mapValue(function(o) return ${expr});\n  }\n\n  public function mapValue<TOut>(f : T -> TOut) : Emitter<TOut>\n    return map(function(v) return Promise.value(f(v)));\n\n  public function toOption() : Emitter<Option<T>>\n    return mapValue(function(v) return null == v ? None : Some(v));\n  public function toNil() : Emitter<Nil>\n    return mapValue(function(_) return nil);\n  public function toTrue() : Emitter<Bool>\n    return mapValue(function(_) return true);\n  public function toFalse() : Emitter<Bool>\n    return mapValue(function(_) return false);\n  public function toValue<T>(value : T) : Emitter<T>\n    return mapValue(function(_) return value);\n\n  // FILTER STREAM\n  public function filter(f : T -> Promise<Bool>) : Emitter<T>\n    return new Emitter(function(stream) {\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          f(v).either(\n            function(c)   if(c) stream.pulse(v),\n            function(err) stream.fail(err)\n          );\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n\n  public function filterValue(f : T -> Bool) : Emitter<T>\n    return filter(function(v) return Promise.value(f(v)));\n\n  public function first()\n    return take(1);\n\n  public function distinct(?equals : T -> T -> Bool) : Emitter<T> {\n    if(null == equals)\n        equals = function(a, b) return a == b;\n      var last : T = null;\n    return filterValue(function(v) {\n      return if(equals(v, last))\n        false;\n      else {\n        last = v;\n        true;\n      }\n    });\n  }\n\n  public function last()\n    return new Emitter(function(stream) {\n      var last : Null<T> = null;\n      init(new Stream(function(r) {\n        switch r {\n        case Pulse(v):   last = v;\n        case Failure(e): stream.fail(e);\n        case End(true):  stream.cancel();\n        case End(false):\n          stream.pulse(last);\n          stream.end();\n      }}));\n    });\n\n  public function memberOf(arr : Array<T>, ?equality : T -> T -> Bool)\n    return filterValue(function(v) return arr.contains(v, equality));\n\n  public function notNull()\n    return filterValue(function(v) return v != null);\n\n  public function skip(n : Int)\n    return skipUntil((function() {\n      var count = 0;\n      return function(_) return count++ < n;\n    })());\n\n  public function skipUntil(predicate : T -> Bool)\n    return filterValue((function() {\n      var flag = false;\n      return function(v) {\n        if(flag)\n          return true;\n        if(predicate(v))\n          return false;\n        return flag = true;\n      };\n    }()));\n\n  public function take(count : Int)\n    return takeUntil({\n      var counter = 0;\n      function(_) return Promise.value(counter++ < count);\n    });\n\n  public function takeAt(index : Int)\n    return take(index + 1).last();\n\n  public function takeLast(n : Int)\n    return EmitterArrays.flatten(window(n).last());\n\n  // TODO: ... have a look at those nasty instream\n  public function takeUntil(f : T -> Promise<Bool>) : Emitter<T>\n    return new Emitter(function(stream) {\n      var instream : Stream<T> = null;\n      instream = new Stream(function(r : StreamValue<T>) switch r {\n        case Pulse(v):\n          f(v).either(\n            function(c : Bool) if(c) {\n              stream.pulse(v);\n            } else {\n              instream.end();\n              stream.end();\n            },\n            stream.fail\n          );\n        case Failure(e):\n          instream.fail(e);\n          stream.fail(e);\n        case End(true):\n          instream.cancel();\n          stream.cancel();\n        case End(false):\n          instream.end();\n          stream.end();\n      });\n      this.init(instream);\n    });\n\n  public function withValue(expected : T) : Emitter<T>\n    return filterValue(function(v : T) return v == expected);\n\n  // UTILITY\n#if !macro\n  public function split() : Tuple2<Emitter<T>, Emitter<T>> {\n    var inited  = false,\n        streams = [];\n    function init(stream) {\n      streams.push(stream);\n      if(!inited) {\n        inited = true;\n        // the delay ensures that the second stream has the time to be implemented\n        thx.core.Timer.immediate(function() {\n          this.init(new Stream(function(r) {\n            switch r {\n              case Pulse(v):   for(s in streams) s.pulse(v);\n              case Failure(e): for(s in streams) s.faile(e);\n              case End(true):  for(s in streams) s.canel();\n              case End(false): for(s in streams) s.end();\n            };\n          }));\n        });\n      }\n    }\n    return new Tuple2(new Emitter(init), new Emitter(init));\n  }\n#end\n\n  public function audit(handler : T -> Void) : Emitter<T>\n    return mapValue(function(v) {\n      handler(v);\n      return v;\n    });\n\n  public function log(?prefix : String, ?posInfo : haxe.PosInfos) {\n    prefix = prefix == null ? '': '${prefix}: ';\n    return mapValue(function(v) {\n      haxe.Log.trace('$prefix$v', posInfo);\n      return v;\n    });\n  }\n\n  // AGGREGATE\n  public function pair<TOther>(other : Emitter<TOther>) : Emitter<Tuple2<T, TOther>>\n    return new Emitter(function(stream) {\n      var _0 : Null<T> = null,\n          _1 : Null<TOther> = null;\n      stream.addCleanUp(function() {\n        _0 = null;\n        _1 = null;\n      });\n      function pulse() {\n        if(null == _0 || null == _1)\n          return;\n        stream.pulse(new Tuple2(_0, _1));\n      }\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          _0 = v;\n          pulse();\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n      other.init(new Stream(function(r) switch r {\n        case Pulse(v):\n          _1 = v;\n          pulse();\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n\n  // throttle(wait) at most once every per wait use sampleBy(Timer.repeat(Nil, wait)).left()\n  public function sampleBy<TOther>(sampler : Emitter<TOther>) : Emitter<Tuple2<T, TOther>>\n    return new Emitter(function(stream) {\n      var _0 : Null<T> = null,\n          _1 : Null<TOther> = null;\n      stream.addCleanUp(function() {\n        _0 = null;\n        _1 = null;\n      });\n      function pulse() {\n        if(null == _0 || null == _1)\n          return;\n        stream.pulse(new Tuple2(_0, _1));\n      }\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          _0 = v;\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n      sampler.init(new Stream(function(r) switch r {\n        case Pulse(v):\n          _1 = v;\n          pulse();\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n\n  public function samplerOf<TOther>(sampled : Emitter<TOther>) : Emitter<Tuple2<T, TOther>>\n    return sampled.sampleBy(this).mapValue(function(t) return t.flip());\n\n  public function zip<TOther>(other : Emitter<TOther>) : Emitter<Tuple2<T, TOther>>\n    return new Emitter(function(stream) {\n      var _0 : Array<T> = [],\n          _1 : Array<TOther> = [];\n      stream.addCleanUp(function() {\n        _0 = null;\n        _1 = null;\n      });\n      function pulse() {\n        if(_0.length == 0 || _1.length == 0)\n          return;\n        stream.pulse(new Tuple2(_0.shift(), _1.shift()));\n      }\n      init(new Stream(function(r) switch r {\n        case Pulse(v):\n          _0.push(v);\n          pulse();\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n      other.init(new Stream(function(r) switch r {\n        case Pulse(v):\n          _1.push(v);\n          pulse();\n        case Failure(e):  stream.fail(e);\n        case End(true):   stream.cancel();\n        case End(false):  stream.end();\n      }));\n    });\n}\n\nclass Emitters {\n  public static function skipNull<T>(emitter : Emitter<Null<T>>) : Emitter<T>\n    return emitter\n      .filterValue(function(value) return null != value);\n\n  public static function unique<T>(emitter : Emitter<T>) : Emitter<T>\n    return emitter.filterValue((function() {\n      var buf = [];\n      return function(v) {\n        return if(buf.indexOf(v) >= 0)\n          false;\n        else {\n          buf.push(v);\n          true;\n        }\n      };\n    })());\n}\n\nclass EmitterStrings {\n  public static function match(emitter : Emitter<String>, pattern : EReg) : Emitter<String>\n    return emitter.filterValue(function(s) return pattern.match(s));\n\n  public static function toBool(emitter : Emitter<String>) : Emitter<Bool>\n    return emitter.mapValue(function(s) return s != null && s != \"\");\n\n  public static function truthy(emitter : Emitter<String>) : Emitter<String>\n    return emitter.filterValue(function(s) return s != null && s != \"\");\n\n  public static function unique(emitter : Emitter<String>) : Emitter<String>\n    return emitter.filterValue((function() {\n      var buf = new Map<String, Bool>();\n      return function(v) {\n        return if(buf.exists(v))\n          false;\n        else {\n          buf.set(v, true);\n          true;\n        }\n      };\n    })());\n}\n\nclass EmitterInts {\n  public static function average(emitter : Emitter<Int>) : Emitter<Float>\n    return emitter\n      .mapValue((function(){\n        var sum = 0.0,\n            count = 0;\n        return function(v) return (sum += v) / (++count);\n      })());\n\n  public static function greaterThan(emitter : Emitter<Int>, x : Int) : Emitter<Int>\n    return emitter.filterValue(function(v) return v > x);\n\n  public static function greaterThanOrEqualTo(emitter : Emitter<Int>, x : Int) : Emitter<Int>\n    return emitter.filterValue(function(v) return v >= x);\n\n  public static function inRange(emitter : Emitter<Int>, min : Int, max : Int) : Emitter<Int>\n    return emitter.filterValue(function(v) return v <= max && v >= min);\n\n  public static function insideRange(emitter : Emitter<Int>, min : Int, max : Int) : Emitter<Int>\n    return emitter.filterValue(function(v) return v < max && v > min);\n\n  public static function lessThan(emitter : Emitter<Int>, x : Int) : Emitter<Int>\n    return emitter.filterValue(function(v) return v < x);\n\n  public static function lessThanOrEqualTo(emitter : Emitter<Int>, x : Int) : Emitter<Int>\n    return emitter.filterValue(function(v) return v <= x);\n\n  public static function max(emitter : Emitter<Int>) : Emitter<Int>\n    return emitter\n      .filterValue((function() {\n        var max : Null<Int> = null;\n        return function(v)\n          return if(null == max || v > max) {\n            max = v;\n            true;\n          } else {\n            false;\n          }\n        })());\n\n  public static function min(emitter : Emitter<Int>) : Emitter<Int>\n    return emitter\n      .filterValue((function() {\n        var min : Null<Int> = null;\n        return function(v)\n          return if(null == min || v < min) {\n            min = v;\n            true;\n          } else {\n            false;\n          }\n        })());\n\n  public static function sum(emitter : Emitter<Int>) : Emitter<Int>\n    return emitter\n      .mapValue((function(){\n        var value = 0;\n        return function(v) return value += v;\n      })());\n\n  public static function toBool(emitter : Emitter<Int>) : Emitter<Bool>\n    return emitter\n      .mapValue(function(i) return i != 0);\n\n  public static function unique(emitter : Emitter<Int>) : Emitter<Int>\n    return emitter.filterValue((function() {\n      var buf = new Map<Int, Bool>();\n      return function(v) {\n        return if(buf.exists(v))\n          false;\n        else {\n          buf.set(v, true);\n          true;\n        }\n      };\n    })());\n}\n\nclass EmitterFloats {\n  public static function average(emitter : Emitter<Float>) : Emitter<Float>\n    return emitter\n      .mapValue((function(){\n        var sum = 0.0,\n            count = 0;\n        return function(v) return (sum += v) / (++count);\n      })());\n\n  public static function greaterThan(emitter : Emitter<Float>, x : Float) : Emitter<Float>\n    return emitter.filterValue(function(v) return v > x);\n\n  public static function greaterThanOrEqualTo(emitter : Emitter<Float>, x : Float) : Emitter<Float>\n    return emitter.filterValue(function(v) return v >= x);\n\n  public static function inRange(emitter : Emitter<Float>, min : Float, max : Float) : Emitter<Float>\n    return emitter.filterValue(function(v) return v <= max && v >= min);\n\n  public static function insideRange(emitter : Emitter<Float>, min : Float, max : Float) : Emitter<Float>\n    return emitter.filterValue(function(v) return v < max && v > min);\n\n  public static function lessThan(emitter : Emitter<Float>, x : Float) : Emitter<Float>\n    return emitter.filterValue(function(v) return v < x);\n\n  public static function lessThanOrEqualTo(emitter : Emitter<Float>, x : Float) : Emitter<Float>\n    return emitter.filterValue(function(v) return v <= x);\n\n  public static function max(emitter : Emitter<Float>) : Emitter<Float>\n    return emitter\n      .filterValue((function() {\n        var max : Float = Math.NEGATIVE_INFINITY;\n        return function(v)\n          return if(v > max) {\n            max = v;\n            true;\n          } else {\n            false;\n          }\n        })());\n\n  public static function min(emitter : Emitter<Float>) : Emitter<Float>\n    return emitter\n      .filterValue((function() {\n        var min : Float = Math.POSITIVE_INFINITY;\n        return function(v)\n          return if(v < min) {\n            min = v;\n            true;\n          } else {\n            false;\n          }\n        })());\n\n  public static function sum(emitter : Emitter<Float>) : Emitter<Float>\n    return emitter\n      .mapValue((function(){\n        var sum = 0.0;\n        return function(v) return sum += v;\n      })());\n}\n\nclass EmitterOptions {\n  public static function either<T>(emitter : Emitter<Option<T>>, ?some : T -> Void, ?none : Void -> Void, ?fail : Error -> Void, ?end : Bool -> Void) {\n    if(null == some) some = function(_) {};\n    if(null == none) none = function() {};\n    return emitter.subscribe(\n        function(o : Option<T>) switch o {\n          case Some(v) : some(v);\n          case None: none();\n        },\n        fail,\n        end\n      );\n  }\n\n  public static function filterOption<T>(emitter : Emitter<Option<T>>) : Emitter<T>\n    return emitter\n      .filterValue(function(opt) return opt.toBool())\n      .mapValue(function(opt) return opt.toValue());\n\n  public static function toBool<T>(emitter : Emitter<Option<T>>) : Emitter<Bool>\n    return emitter\n      .mapValue(function(opt) return opt.toBool());\n\n  public static function toValue<T>(emitter : Emitter<Option<T>>) : Emitter<Null<T>>\n    return emitter\n      .mapValue(function(opt) return opt.toValue());\n}\n\nclass EmitterBools {\n  public static function negate(emitter : Emitter<Bool>)\n    return emitter.mapValue(function(v) return !v);\n}\n\n@:access(thx.stream.Emitter)\nclass EmitterEmitters {\n  // TODO: is flatMap the right name here?\n  public static function flatMap<T>(emitter : Emitter<Emitter<T>>) : Emitter<T>\n    return new Emitter(function(stream) {\n      emitter.init(new Stream(function(r : StreamValue<Emitter<T>>) {\n        switch r {\n          case Pulse(em):  em.init(stream);\n          case Failure(e): stream.fail(e);\n          case End(true):  stream.cancel();\n          case End(false): stream.end();\n        }}));\n    });\n}\n\n@:access(thx.stream.Emitter)\nclass EmitterArrays {\n  public static function containerOf<T>(emitter : Emitter<Array<T>>, value : T) : Emitter<Array<T>>\n    return emitter.filterValue(function(arr) return arr.indexOf(value) >= 0);\n\n  public static function flatten<T>(emitter : Emitter<Array<T>>) : Emitter<T>\n    return new Emitter(function(stream) {\n      emitter.init(new Stream(function(r : StreamValue<Array<T>>) {\n        switch r {\n          case Pulse(arr): arr.map(stream.pulse);\n          case Failure(e): stream.fail(e);\n          case End(true):  stream.cancel();\n          case End(false): stream.end();\n        }}));\n    });\n}\n\nclass EmitterValues {\n  public static function left<TLeft, TRight>(emitter : Emitter<Tuple2<TLeft, TRight>>) : Emitter<TLeft>\n    return emitter.mapValue(function(v) return v._0);\n\n  public static function right<TLeft, TRight>(emitter : Emitter<Tuple2<TLeft, TRight>>) : Emitter<TRight>\n    return emitter.mapValue(function(v) return v._1);\n}","package thx.stream;\n\nimport haxe.ds.Option;\nimport thx.core.Options;\n\n// TODO: value lens\nclass Value<T> extends Emitter<T> {\n  public static function createOption<T>(?value : T, ?equal : T -> T -> Bool) {\n    var def = null == value ? None : Some(value);\n    return new Value<Option<T>>(def, Options.equals.bind(_, _, equal));\n  }\n\n  var value : T;\n  var downStreams : Array<Stream<T>>;\n  var upStreams : Array<Stream<T>>;\n  var equal : T -> T -> Bool;\n  public function new(value : T, ?equal : T -> T -> Bool) {\n    this.equal = null == equal ? function(a, b) return a == b : equal;\n    this.value = value;\n    this.downStreams = [];\n    this.upStreams = [];\n    super(function(stream : Stream<T>) {\n      this.downStreams.push(stream);\n      stream.addCleanUp(function() this.downStreams.remove(stream));\n      stream.pulse(this.value);\n    });\n  }\n\n  public function get() : T\n    return value;\n\n  public function set(value : T) {\n    if(equal(this.value, value))\n      return;\n    this.value = value;\n    update();\n  }\n\n  public function clearStreams()\n    for(stream in downStreams.copy())\n      stream.end();\n\n  public function clearEmitters()\n    for(stream in upStreams.copy())\n      stream.cancel();\n\n  public function clear() {\n    clearEmitters();\n    clearStreams();\n  }\n\n  function update()\n    for(stream in downStreams.copy())\n      stream.pulse(value);\n}","package thx.core;\n\nimport haxe.ds.Option;\n\nclass Options {\n  public static function equals<T>(a : Option<T>, b : Option<T>, ?eq : T -> T -> Bool)\n    return switch [a, b] {\n      case [None, None]: true;\n      case [Some(a), Some(b)]:\n        if(null == eq)\n          eq = function(a, b) return a == b;\n        eq(a,b);\n      case [_, _]:\n        false;\n    };\n\n  public static function equalsValue<T>(a : Option<T>, b : Null<T>, ?eq : T -> T -> Bool)\n    return equals(a, toOption(b), eq);\n\n  public static function flatMap<T, TOut>(option : Option<T>, callback : T -> Array<TOut>) : Array<TOut>\n    return switch option {\n      case None: [];\n      case Some(v): callback(v);\n    };\n\n  public static function map<T, TOut>(option : Option<T>, callback : T -> TOut) : Option<TOut>\n    return switch option {\n      case None: None;\n      case Some(v): Some(callback(v));\n    };\n\n  public static function toArray<T>(option : Option<T>) : Array<T>\n    return switch option {\n      case None: [];\n      case Some(v) : [v];\n    };\n\n  public static function toBool<T>(option : Option<T>) : Bool\n    return switch option {\n      case None: false;\n      case Some(_) : true;\n    };\n\n  public static function toOption<T>(value : T) : Option<T>\n    return null == value ? None : Some(value);\n\n  public static function toValue<T>(option : Option<T>) : Null<T>\n    return switch option {\n      case None: null;\n      case Some(v) : v;\n    };\n}","package cards.ui;\n\nimport cards.model.Model;\nimport cards.model.Runtime;\nimport thx.stream.Bus;\nusing thx.stream.Emitter;\nimport thx.stream.Value;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport udom.Dom;\nimport cards.properties.ToggleClass;\nimport cards.properties.ValueProperty;\nusing thx.core.Arrays;\nimport cards.types.CodeTransform;\nimport cards.types.ReferenceTransform;\nimport cards.types.TypeTransform;\nimport cards.ui.editors.CodeEditor;\nimport cards.ui.editors.Editor;\nimport cards.ui.editors.EditorPicker;\nusing thx.stream.dom.Dom;\nimport haxe.ds.Option;\nimport cards.model.SchemaType;\nimport cards.ui.widgets.Tooltip;\nimport cards.ui.FieldValue;\nusing thx.core.Options;\nusing cards.model.Expression;\nusing StringTools;\n\nclass ContextField {\n  public static var tooltip(default, null) : Tooltip = new Tooltip({ classes : 'tooltip error' });\n  public var component(default, null) : Component;\n  //public var editor(default, null) : Editor<Dynamic>;\n  public var focus(default, null) : Value<Bool>;\n  public var active(default, null) : Value<Bool>;\n  public var name(default, null) : String;\n  public var withError(default, null) : Value<Option<String>>;\n  public var fieldValue(default, null) : FieldValue;\n  public var type(default, null) : SchemaType;\n  public var currentType(default, null) : Value<SchemaType>;\n\n  public function new(options : ContextFieldOptions) {\n    if(null == options.template && null == options.el)\n      options.template = '<div class=\"field\"><div class=\"key-container\"><div class=\"key\"></div></div><div class=\"value-container\"></div></div>';\n\n    component = new Component(options);\n    // setup field key\n    var key = Query.first('.key', component.el);\n    key.textContent = options.display;\n\n    name = options.name;\n    type = options.type;\n    currentType = new Value(options.type);\n\n    focus = new Value(false);\n    active = new Value(false);\n    withError = new Value(None);\n\n    function wireRuntime(editor : Editor<Dynamic>, convert : String -> Runtime) {\n      var runtime = editor.value.mapValue(convert);\n      runtime\n        .distinct(function(a, b) {\n          return b != null && a.dependencies.equals(b.dependencies);\n        })\n        .subscribe(function(res : Runtime) {\n          options.model.changes.subscribe(function(path) {\n            if(res.dependencies.contains(path, function(a, b) return b.startsWith(a))) {\n              options.value.runtime.set(Some(convert(editor.value.get())));\n            }\n          });\n        });\n      runtime\n        .toOption()\n        .feed(options.value.runtime);\n      runtime\n        .mapValue(function(res) return res.expression.toErrorOption())\n        .merge(options.value.runtimeError)\n        .feed(withError);\n    }\n\n    var bus = new Bus();\n    fieldValue = new FieldValue(\n      component,\n      Query.first('.value-container', component.el),\n      function(type : SchemaType, editor : Editor<Dynamic>) {\n        editor.focus.feed(focus);\n        currentType.set(type);\n        switch type {\n          case CodeType:\n            wireRuntime(editor, function(value : String) return Runtime.toRuntime(value, options.model));\n          case ReferenceType:\n            wireRuntime(editor, function(value : String) return Runtime.toRuntime(ReferenceTransform.toCode(value), options.model));\n            // TODO: break loop!\n            bus.subscribe(function(value : Dynamic) {\n              var path = (editor.value.get() : String);\n              options.modelView.setField(path, value, options.type);\n            });\n            options.value.stream.plug(bus);\n          case _:\n            options.value.runtime.set(None);\n            editor.value.feed(options.value.stream);\n            // TODO: does this leak?\n            options.value.stream.feed(editor.value);\n        }\n      },\n      function(type : SchemaType, editor : Editor<Dynamic>) {\n        switch type {\n          case CodeType:\n          case ReferenceType:\n            trace(\"cancelling\");\n            bus.cancel();\n          case _:\n        }\n      }\n    );\n\n    var runtime = options.value.runtime.get().toValue();\n    if(null == runtime)\n      fieldValue.setEditor(options.type, options.value.stream.get());\n    else {\n      var reference = CodeTransform.toReference(runtime.code);\n      if(null != reference && \"\" != reference)\n        fieldValue.setEditor(ReferenceType, CodeTransform.toReference(runtime.code));\n      else\n        fieldValue.setEditor(CodeType, runtime.code);\n    }\n\n    active.subscribe(component.el.subscribeToggleClass('active'));\n\n    var clickKeyStream = key.streamClick()\n      .subscribe(function(_) {\n        if(null != fieldValue.editor)\n          fieldValue.editor.focus.set(true);\n      });\n\n    // TODO: is this properly cancelled?\n    withError.toBool().subscribe(component.el.subscribeToggleClass('error'));\n    withError.either(\n      function(err) {\n        tooltip.setContent(err);\n        tooltip.anchorTo(component.el, Top, Bottom);\n        tooltip.visible.stream.set(true);\n      },\n      function() {\n        if(tooltip.anchorElement == component.el)\n          tooltip.visible.stream.set(false);\n      }\n    );\n  }\n\n  public function destroy() {\n    component.destroy();\n    focus = null;\n  }\n}\n\ntypedef ContextFieldOptions = {>ComponentOptions,\n  type : SchemaType,\n  display : String,\n  name : String,\n  value : ValueProperty<Dynamic>,\n  model : Model,\n  modelView : ModelView\n}","package cards.ui;\n\nimport udom.Dom;\nimport haxe.ds.Option;\nimport js.html.Element;\nimport thx.stream.Value;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport cards.properties.ValueProperties;\nimport cards.properties.ValueProperty;\nimport cards.ui.fragments.FragmentMapper;\nimport cards.model.Model;\nimport cards.model.SchemaType;\nimport cards.ui.widgets.Button;\nimport cards.ui.fragments.Fragment;\nimport cards.ui.widgets.Menu;\nimport cards.ui.widgets.Toolbar;\nusing thx.core.Options;\nusing thx.stream.Emitter;\n\nclass ContextView {\n  public var component(default, null) : Component;\n  public var toolbar(default, null) : Toolbar;\n  public var document(default, null) : Document;\n  public var field(default, null) : Value<Option<ContextField>>;\n  public var model(default, null) : Model;\n  public var modelView(default, null) : ModelView;\n  var el : Element;\n  var button : {\n    add : Button,\n    remove : Button,\n    toValue : Button,\n    toCode : Button,\n    toReference : Button\n  };\n  var menu : {\n    add : Menu\n  };\n  var mapper : FragmentMapper;\n\n  public function new(document : Document, model : Model, modelView : ModelView, mapper : FragmentMapper, options : ComponentOptions) {\n    this.document = document;\n    this.model = model;\n    this.modelView = modelView;\n    this.mapper = mapper;\n    component = new Component(options);\n    toolbar   = new Toolbar({ parent : component, container : component.el });\n    el = Html.parse('<div class=\"fields\"><div></div></div>');\n    component.el.appendChild(el);\n    el = Query.first('div', el);\n\n    button = {\n      add : toolbar.left.addButton('', Config.icons.dropdown),\n      toValue : toolbar.center.addButton('', Config.icons.value),\n      toCode : toolbar.center.addButton('', Config.icons.code),\n      toReference : toolbar.center.addButton('', Config.icons.reference),\n      remove : toolbar.right.addButton('', Config.icons.remove)\n    };\n    menu = {\n      add : new Menu({ parent : component })\n    };\n\n    menu.add.anchorTo(button.add.component.el);\n    button.add.clicks.toTrue().feed(menu.add.visible.stream);\n\n    button.add.enabled.set(false);\n\n    button.remove.clicks.subscribe(function(_) {\n      var field = field.get().toValue(),\n          fragment = document.article.fragment.get().toValue();\n      fragment.component.properties.get(field.name).dispose();\n      field.destroy();\n      setAddMenuItems(fragment);\n    });\n\n    button.toValue.clicks.subscribe(function(_) {\n      var field = field.get().toValue(),\n          type  = field.fieldValue.type;\n      field.fieldValue.setEditor(field.type);\n    });\n    button.toCode.clicks.subscribe(function(_) {\n      var field = field.get().toValue(),\n          type  = field.fieldValue.type;\n      field.fieldValue.setEditor(CodeType);\n    });\n    button.toReference.clicks.subscribe(function(_) {\n      var field = field.get().toValue(),\n          type  = field.fieldValue.type;\n      field.fieldValue.setEditor(ReferenceType);\n    });\n\n    field = new Value(None);\n    var delayed = field\n      .debounce(10);\n\n    delayed\n      .toBool()\n      .feed(button.remove.enabled);\n    field\n      .filterOption()\n      .mapValue(function(v) : Emitter<SchemaType> return v.currentType)\n      .flatMap()\n      .subscribe(function(type) {\n        switch type {\n          case CodeType:\n            button.toCode.enabled.set(false);\n            button.toReference.enabled.set(true);\n            button.toValue.enabled.set(true);\n          case ReferenceType:\n            button.toCode.enabled.set(true);\n            button.toReference.enabled.set(false);\n            button.toValue.enabled.set(true);\n          case _:\n            button.toCode.enabled.set(true);\n            button.toReference.enabled.set(true);\n            button.toValue.enabled.set(false);\n        }\n      });\n\n    var filtered = field.filterOption();\n    filtered.previous().subscribe(function(field : ContextField)\n      field.active.set(false));\n    filtered.subscribe(function(field : ContextField)\n      field.active.set(true));\n\n    document.article.fragment.either(setFragmentStatus, resetFragmentStatus);\n  }\n\n  function resetFragmentStatus() {\n    resetFields();\n    resetAddMenuItems();\n  }\n\n  function setFragmentStatus(fragment : Fragment) {\n    setFields(fragment);\n    setAddMenuItems(fragment);\n  }\n\n  function resetFields() {\n    el.innerHTML = '';\n  }\n\n  function setFields(fragment : Fragment) {\n    resetFields();\n    mapper\n      .getAttachedPropertiesForFragment(fragment)\n      .map(function(info) {\n        var value = cast(fragment.component.properties.get(info.name), ValueProperty<Dynamic>);\n        addField(info, value);\n      });\n  }\n\n  function addField(info : ValuePropertyInfo<Dynamic>, value : ValueProperty<Dynamic>) {\n    var f = new ContextField({\n        container : el,\n        parent    : component,\n        display   : info.display,\n        name      : info.name,\n        type      : info.type,\n        value     : value,\n        model     : model,\n        modelView : modelView\n      });\n\n    f.focus\n      .withValue(true)\n      .mapValue(function(_) return Some(f))\n      .feed(field);\n  }\n\n  function resetAddMenuItems() {\n    button.remove.enabled.set(false);\n    button.toValue.enabled.set(false);\n    button.toCode.enabled.set(false);\n    button.toReference.enabled.set(false);\n    button.add.enabled.set(false);\n    menu.add.clear();\n  }\n\n  function setAddMenuItems(fragment : Fragment) {\n    resetAddMenuItems();\n    var attachables = mapper.getAttachablePropertiesForFragment(fragment);\n    button.add.enabled.set(attachables.length > 0);\n    attachables.map(function(info) {\n      var button = new Button('add ${info.display}');\n      menu.add.addItem(button.component);\n      button.clicks.subscribe(function(_) {\n        mapper.values.ensure(info.name, fragment.component);\n        setFragmentStatus(fragment);\n      });\n    });\n  }\n}","package cards.ui;\n\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport cards.ui.fragments.Block;\nimport cards.ui.fragments.Fragment;\nimport cards.ui.fragments.InlineText;\nimport cards.ui.widgets.Toolbar;\nimport cards.ui.widgets.Statusbar;\nusing thx.stream.Emitter;\nusing thx.core.Options;\nusing thx.stream.dom.Dom;\n\nclass Document {\n  public var component(default, null) : Component;\n  public var toolbar(default, null) : Toolbar;\n  public var article(default, null) : Article;\n  public var statusbar(default, null) : Statusbar;\n\n  public function new(options : ComponentOptions) {\n    component = new Component(options);\n    toolbar   = new Toolbar({ parent : component, container : component.el });\n    article   = new Article({ parent : component, container : component.el });\n    statusbar = new Statusbar({ parent : component, container : component.el });\n\n\n    // TODO: change this to components\n    article.fragment\n      .mapValue(function(r) switch r {\n        case Some(v):\n          return '$v';\n        case None:\n          return 'no fragment selected';\n      })\n      .subscribe(statusbar.left.component.el.subscribeHTML());\n\n    toolbar.left.addButton('block', Config.icons.add)\n      .clicks.subscribe(function(_) article.addBlock());\n\n    var buttonAddText = toolbar.left.addButton('text', Config.icons.add);\n    buttonAddText\n      .clicks.subscribe(function(_) {\n        var block = getNearestBlock(article.fragment.get().toValue());\n        if(null == block)\n          return;\n        article.addInlineText(block);\n      });\n    buttonAddText.enabled.set(false);\n    article.fragment\n      .mapValue(function(r) switch r {\n        case Some(v):\n          return getNearestBlock(v) != null;\n        case None:    return false;\n      })\n      .feed(buttonAddText.enabled);\n\n    var buttonRemove = toolbar.right.addButton('', Config.icons.remove);\n    buttonRemove.enabled.set(false);\n    buttonRemove.clicks.subscribe(function(_) {\n      article.fragment.get().toValue().component.destroy();\n      article.fragment.set(None);\n    });\n    article.fragment.toBool().feed(buttonRemove.enabled);\n  }\n\n  static function getNearestBlock(fragment : Fragment) : Block {\n    if(null == fragment)\n      return null;\n    if(Std.is(fragment, Block))\n      return cast fragment;\n    return getNearestBlock(fragment.parent);\n  }\n}","package cards.ui;\n\nimport js.html.Element;\nimport cards.components.Component;\nimport cards.model.SchemaType;\nimport cards.ui.editors.EditorPicker;\nimport cards.ui.editors.Editor;\nimport udom.Dom;\nimport cards.types.TypeTransform;\n\nclass FieldValue {\n  public var type(default, null) : SchemaType;\n  public var editor(default, null) : Null<Editor<Dynamic>>;\n  var parent : Component;\n  var container : Element;\n  var afterCreate : InitFunction;\n  var afterRemove : InitFunction;\n  public function new(parent : Component, container : Element, afterCreate : InitFunction, afterRemove : InitFunction) {\n    this.parent = parent;\n    this.container = container;\n    this.afterCreate = afterCreate;\n    this.afterRemove = afterRemove;\n  }\n\n  public function setEditor(type, ?value : Dynamic) {\n    if(null != editor) {\n      if(null == value) {\n        value = TypeTransform.transform(this.type, type)(editor.value.get());\n      }\n      afterRemove(this.type, editor);\n      container.innerHTML = '';\n    }\n    this.type = type;\n    editor = EditorPicker.pick(type, container, parent, value);\n    editor.component.el.classList.add('value');\n    afterCreate(this.type, editor);\n  }\n}\n\ntypedef InitFunction = SchemaType -> Editor<Dynamic> -> Void;","package cards.ui;\n\nimport cards.types.TypeTransform;\nimport cards.ui.input.AnonymousObjectEditor;\nimport cards.ui.input.DiffAt;\nimport cards.ui.input.Path;\nimport cards.ui.input.TypedValue;\nimport js.html.Element;\nusing thx.stream.Emitter;\nimport cards.components.Component;\nimport cards.model.DataEvent;\nimport cards.model.SchemaEvent;\nimport cards.model.SchemaType;\nimport cards.ui.widgets.Toolbar;\nimport udom.Dom;\nimport thx.stream.Bus;\n\nclass ModelView {\n  public var component(default, null) : Component;\n  //public var schema(default, null) : Emitter<SchemaEvent>;\n  public var data(default, null) : Emitter<DataEvent>;\n\n  //var schemaBus : Bus<SchemaEvent>;\n  var dataBus : Bus<DataEvent>;\n  var editor : AnonymousObjectEditor;\n  public function new() {\n    component = new Component({\n      template : '<div class=\"modelview\"></div>'\n    });\n\n    //schema = this.schemaBus = new Bus();\n    data = this.dataBus = new Bus();\n\n    editor = new AnonymousObjectEditor(component.el, component);\n    editor.diff.subscribe(function(d) switch [d.diff, d.path] {\n      case [Add, path]:\n        //schemaBus.pulse(SchemaEvent.AddField(path.toString(), editor.typeAt(path)));\n      case [Remove, path]:\n        //schemaBus.pulse(SchemaEvent.DeleteField(path.toString()));\n      case [Set(v), path]:\n        dataBus.pulse(DataEvent.SetValue(path, v.asValue(), v.asType()));\n    });\n  }\n\n  public function setField(path : Path, value : Dynamic, type : SchemaType) {\n    if(path == \"\" || path == null)\n      return;\n      editor.diff.pulse(new DiffAt(path, Set(new TypedValue(type, value))));\n  }\n}","package cards.ui.editors;\n\nusing thx.stream.Emitter;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.model.SchemaType;\nusing thx.stream.dom.Dom;\n\nclass ArrayEditor implements Editor<Array<Dynamic>> {\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var value(default, null) : Value<Array<Dynamic>>;\n  public var type(default, null) : SchemaType;\n  public var innerType(default, null) : SchemaType;\n  var cancel : Void -> Void;\n  var items : Array<{ item : Component, editor : Editor<Dynamic> }>;\n  public function new(options : ArrayEditorOptions) {\n    type = ArrayType(this.innerType = options.innerType);\n    if(null == options.defaultValue)\n      options.defaultValue = [];\n    if(null == options.template)\n      options.template = '<ul type=\"array\"></ul>';\n\n    component = new Component(options);\n\n    var cls = component.el.classList;\n    cls.add('editor');\n    cls.add('array');\n    component.el.setAttribute('tabindex', '1');\n\n    value = new Value(options.defaultValue);\n\n    focus = new Value(false);\n    focus.withValue(true).subscribe(component.el.subscribeFocus());\n    var focusStream = component.el.streamFocus().feed(focus);\n\n//    component.el.streamEvent('input')\n//      .mapValue(function(_) return (cast component.el : js.html.InputElement).valueAsNumber)\n//      .feed(value);\n    cancel = function() {\n      focusStream.cancel();\n    };\n\n    items = [];\n    addItem();\n    addItem();\n    addItem();\n  }\n\n  public function addItem(?value : Dynamic) {\n    var index = items.length,\n        item = new Component({\n        template : '<li></li>',\n        parent : component,\n        container : component.el\n      }),\n      editor = EditorPicker.pick(innerType, item.el, item, value);\n\n    editor.value\n      .mapValue(function(v) {\n        var arr = this.value.get().copy();\n        arr[index] = v;\n        return arr;\n      })\n      .feed(this.value);\n\n    items.push({\n      item : item,\n      editor : editor\n    });\n  }\n\n  public function destroy() {\n    cancel();\n    component.destroy();\n    value.clear();\n  }\n}\n\ntypedef ArrayEditorOptions = {> ComponentOptions,\n  defaultValue : Array<Dynamic>,\n  innerType : SchemaType\n}","package cards.ui.editors;\n\nusing thx.stream.Emitter;\nimport js.html.KeyboardEvent;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.properties.Text;\nimport cards.model.SchemaType;\nusing thx.stream.dom.Dom;\n\nclass BoolEditor implements Editor<Bool> {\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var value(default, null) : Value<Bool>;\n  public var type(default, null) : SchemaType;\n  var cancel : Void -> Void;\n  public function new(options : BoolEditorOptions) {\n    type = BoolType;\n    if(null == options.defaultValue)\n      options.defaultValue = false;\n    if(null == options.el && null == options.template)\n      options.template = '<div></div>';\n    component = new Component(options);\n    var cls = component.el.classList;\n    cls.add('fa');\n    cls.add('editor');\n    cls.add('bool');\n    cls.add('fa-' + Config.icons.unchecked);\n    component.el.setAttribute('tabindex', '1');\n\n    value = new Value(options.defaultValue);\n\n    value\n      .subscribe(component.el.subscribeToggleClass('fa-' + Config.icons.checked));\n    value\n      .negate()\n      .subscribe(component.el.subscribeToggleClass('fa-' + Config.icons.unchecked));\n\n    var clickStream = component.el.streamClick()\n      .toNil()\n      .merge(\n        component.el.streamKey('up')\n          .filterValue(function(e : KeyboardEvent) {\n            return switch e.keyCode {\n              case 32, 13: // spacebar, return\n                true;\n              case _:\n                false;\n            };\n          })\n          .toNil()\n      )\n      .mapValue(function(_) return !value.get())\n      .feed(value);\n\n    focus = new Value(false);\n    focus.withValue(true).subscribe(component.el.subscribeFocus());\n    var focusStream = component.el.streamEvent('focus')\n      .toTrue()\n      .merge(\n        component.el.streamEvent('blur').toFalse()\n      ).feed(focus);\n    cancel = function() {\n      clickStream.cancel();\n      focusStream.cancel();\n    };\n  }\n\n  public function destroy() {\n    cancel();\n    component.destroy();\n    value.clear();\n  }\n}\n\ntypedef BoolEditorOptions = {> ComponentOptions,\n  defaultValue : Bool\n}","package cards.ui.editors;\n\nusing thx.stream.Emitter;\nimport js.html.Element;\nimport js.html.Event;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.properties.Text;\nimport cards.model.SchemaType;\nusing thx.stream.dom.Dom;\nimport js.Browser;\n\nclass TextEditor implements Editor<String> {\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var value(default, null) : Value<String>;\n  public var type(default, null) : SchemaType;\n  var cancel : Void -> Void;\n  public function new(options : TextEditorOptions) {\n    type = StringType;\n    if(null == options.defaultText)\n      options.defaultText = '';\n    if(null == options.placeHolder)\n      options.placeHolder = '';\n    if(null == options.el && null == options.template)\n      options.template = '<div></div>';\n    if(null == options.inputEvent)\n      options.inputEvent = function(component : Component) return component.el.streamEvent('input');\n\n    component = new Component(options);\n    component.el.classList.add('editor');\n    component.el.classList.add('text');\n    component.el.setAttribute('tabindex', '1');\n    component.el.setAttribute('contenteditable', 'true');\n    component.el.setAttribute('placeholder', options.placeHolder);\n\n    // PREVENT SELECTION DRAG AND DROP\n    component.el.addEventListener('dragstart', function(e) e.preventDefault(), false);\n    component.el.addEventListener('drop', function(e) e.preventDefault(), false);\n\n    // TODO: find out how to set the content of :before programmatically\n    component.el.style.content = options.placeHolder;\n\n    var text = new Text(component, options.defaultText);\n\n    value = text.stream;\n    options.inputEvent(component)\n      .mapValue(function(_) return text.component.el.textContent)\n      .feed(value);\n\n    focus = new Value(false);\n    // TODO: adding contenteditable dynamically doesn't work very well in FF\n    //focus.subscribe(component.el.subscribeToggleAttribute('contenteditable', 'true'));\n    focus.withValue(true).subscribe(component.el.subscribeFocus());\n    var focusStream = focus\n      .withValue(true)\n      .subscribe(function(_) {\n        Browser.document.getSelection().selectAllChildren(component.el);\n      });\n\n    component.el.streamFocus().feed(focus);\n    cancel = function() {\n      text.dispose();\n      focusStream.cancel();\n    };\n\n    var empty = new Value(options.defaultText == '');\n    component.el.streamEvent('input')\n      .mapValue(function(_) return text.component.el.textContent == '')\n      .merge(value.mapValue(function(t) return t == ''))\n      .feed(empty);\n    empty.subscribe(component.el.subscribeToggleClass('empty'));\n\n    // PASTE EVENT\n    component.el.streamEvent(\"paste\")\n      .mapValue(function(ev) {\n        var e : Dynamic = ev;\n        e.preventDefault();\n        var data      = null == e.clipboardData ? \"\" : e.clipboardData.getData(\"text/plain\"),\n            current   = value.get(),\n            selection = Browser.window.getSelection(),\n            start     = selection.anchorOffset,\n            end       = selection.extentOffset;\n        return current.substr(0, start) + data + current.substr(end);\n      })\n      .filterValue(function(v) return v.length > 0)\n      .feed(value);\n  }\n\n  public function destroy() {\n    value.clear();\n    component.destroy();\n    cancel();\n  }\n}\n\ntypedef TextEditorOptions = {> ComponentOptions,\n  defaultText : String,\n  ?placeHolder : String,\n  ?inputEvent : Component -> Emitter<Event>\n}","package cards.ui.editors;\n\nimport thx.stream.Emitter;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.properties.Text;\nimport cards.model.SchemaType;\nimport cards.ui.editors.TextEditor;\nusing thx.stream.dom.Dom;\n\nclass CodeEditor extends TextEditor {\n  public function new(options : TextEditorOptions) {\n    if(null == options.inputEvent)\n      options.inputEvent = function(component : Component) return component.el.streamEvent('blur');\n    super(options);\n    type = CodeType;\n    component.el.classList.add('code');\n  }\n}","package cards.ui.editors;\n\nusing thx.stream.Emitter;\nimport js.html.KeyboardEvent;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.properties.Text;\nimport cards.model.SchemaType;\nusing thx.stream.dom.Dom;\n\nclass DateEditor implements Editor<Date> {\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var value(default, null) : Value<Date>;\n  public var type(default, null) : SchemaType;\n  var cancel : Void -> Void;\n  public function new(options : DateEditorOptions) {\n    type = DateType;\n    if(null == options.defaultValue)\n      options.defaultValue = Date.now();\n    if(null == options.template)\n      options.template = '<input type=\"date\"/>';\n\n    component = new Component(options);\n\n    var cls = component.el.classList;\n    cls.add('editor');\n    cls.add('date');\n    component.el.setAttribute('tabindex', '1');\n\n    value = new Value(options.defaultValue);\n\n    focus = new Value(false);\n    focus.withValue(true).subscribe(component.el.subscribeFocus());\n    var focusStream = component.el.streamFocus().feed(focus);\n\n    var input = (cast component.el : js.html.InputElement);\n\n    input.streamInput()\n      .mapValue(function(_) {\n        return input.valueAsDate;\n      })\n      .feed(value);\n    cancel = function() {\n      focusStream.cancel();\n    };\n  }\n\n  public function destroy() {\n    cancel();\n    component.destroy();\n    value.clear();\n  }\n}\n\ntypedef DateEditorOptions = {> ComponentOptions,\n  defaultValue : Date\n}","package cards.ui.editors;\n\nimport js.html.Element;\nimport cards.components.Component;\nimport cards.model.SchemaType;\n\nclass EditorPicker {\n  public static function pick(type : SchemaType, container : Element, parent : Component, value : Dynamic) : Editor<Dynamic> {\n    return switch type {\n      case BoolType:\n        new BoolEditor({ container : container, parent : parent, defaultValue : value });\n      case CodeType:\n        new CodeEditor({ container : container, parent : parent, defaultText : value, placeHolder : 'code' });\n      case ReferenceType:\n        new ReferenceEditor({ container : container, parent : parent, defaultText : value, placeHolder : 'reference' });\n      case StringType:\n        new TextEditor({ container : container, parent : parent, defaultText : value, placeHolder : 'content' });\n      case DateType:\n        new DateEditor({ container : container, parent : parent, defaultValue : value });\n      case FloatType:\n        new FloatEditor({ container : container, parent : parent, defaultValue : value });\n      case ArrayType(t):\n        new ArrayEditor({ container : container, parent : parent, defaultValue : value, innerType : t });\n      case _:\n        throw 'Editor for $type has not been implemented yet';\n    }\n  }\n}","package cards.ui.editors;\n\nusing thx.stream.Emitter;\nimport js.html.KeyboardEvent;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.properties.Text;\nimport cards.model.SchemaType;\nusing thx.stream.dom.Dom;\n\nclass FloatEditor implements Editor<Float> {\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var value(default, null) : Value<Float>;\n  public var type(default, null) : SchemaType;\n  var cancel : Void -> Void;\n  public function new(options : FloatEditorOptions) {\n    type = FloatType;\n    if(null == options.defaultValue)\n      options.defaultValue = 0.0;\n    if(null == options.template)\n      options.template = '<input type=\"number\"/>';\n\n    component = new Component(options);\n\n    var cls = component.el.classList;\n    cls.add('editor');\n    cls.add('float');\n    component.el.setAttribute('tabindex', '1');\n\n    value = new Value(options.defaultValue);\n\n    focus = new Value(false);\n    focus.withValue(true).subscribe(component.el.subscribeFocus());\n    var focusStream = component.el.streamFocus().feed(focus);\n\n    component.el.streamEvent('input')\n      .mapValue(function(_) return (cast component.el : js.html.InputElement).valueAsNumber)\n      .feed(value);\n    cancel = function() {\n      focusStream.cancel();\n    };\n  }\n\n  public function destroy() {\n    cancel();\n    component.destroy();\n    value.clear();\n  }\n}\n\ntypedef FloatEditorOptions = {> ComponentOptions,\n  defaultValue : Float\n}","package cards.ui.editors;\n\nimport thx.stream.Emitter;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport thx.stream.Value;\nimport cards.properties.Text;\nimport cards.model.SchemaType;\nimport cards.ui.editors.TextEditor;\nusing thx.stream.dom.Dom;\n\nclass ReferenceEditor extends TextEditor {\n  public function new(options : TextEditorOptions) {\n    if(null == options.inputEvent)\n      options.inputEvent = function(component : Component) return component.el.streamEvent('blur');\n    super(options);\n    type = ReferenceType;\n    component.el.classList.add('reference');\n  }\n}","package cards.ui.fragments;\n\nimport thx.stream.Value;\nimport cards.components.Component;\nimport cards.properties.ToggleClass;\nimport cards.ui.editors.TextEditor;\nusing thx.stream.dom.Dom;\n\nclass Block implements Fragment {\n  public var name(default, null) : String = 'block';\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var active(default, null) : Value<Bool>;\n  public var uid(default, null) : String;\n  public var parent(default, null) : Fragment;\n  public function new(options : BlockOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<div class=\"block\" tabindex=\"1\"></div>';\n    parent = options.fragmentParent;\n    uid = null != options.uid ? options.uid : thx.core.UUID.create();\n    component = new Component(options);\n    active = new Value(false);\n    active.feed(new ToggleClass(component, 'active').stream);\n\n    focus = new Value(false);\n    component.el.streamFocus().feed(focus);\n  }\n\n  public function destroy() {\n    focus.clear();\n    component.destroy();\n  }\n\n  public function toString()\n    return name;\n}\n\ntypedef BlockOptions = {> FragmentOptions,\n\n}","package cards.ui.fragments;\n\nimport cards.properties.ValueProperties;\nimport cards.ui.fragments.FragmentProperties;\nusing thx.core.Iterators;\n\nclass FragmentMapper {\n  public var fragments(default, null) : FragmentProperties;\n  public var values(default, null) : ValueProperties;\n  public function new(fragments : FragmentProperties, values : ValueProperties) {\n    this.fragments = fragments;\n    this.values = values;\n  }\n\n  public function getValuePropertyInfoForFragment(fragment : FragmentName)\n    return fragments.getAssociations(fragment)\n      .map(values.get);\n\n\n  public function getAttachedPropertiesForFragment(fragment : Fragment)\n    return fragments.getAssociations(fragment)\n      .filter(function(name) return fragment.component.properties.exists(name))\n      .map(values.get);\n\n  public function getAttachablePropertiesForFragment(fragment : Fragment)\n    return fragments.getAssociations(fragment)\n      .filter(function(name) return !fragment.component.properties.exists(name))\n      .map(values.get);\n}","package cards.ui.fragments;\n\nabstract FragmentName(String) {\n  @:from public inline static function fromFragment(fragment : Fragment)\n    return new FragmentName(fragment.name);\n\n  @:from public inline static function fromString(name : String)\n    return new FragmentName(name);\n\n  public inline function new(name : String)\n    this = name;\n\n  @:to public inline function toString()\n    return this;\n}","package cards.ui.fragments;\n\nimport thx.core.Set;\nimport cards.properties.PropertyName;\nusing thx.core.Iterables;\n\nclass FragmentProperties {\n  var map : Map<String, Set<String>>;\n  public function new() {\n    map = new Map();\n  }\n\n  public function associate(fragment : FragmentName, property : PropertyName) {\n    var s = map.get(fragment);\n    if(null == s)\n      map.set(fragment, s = new Set());\n    s.add(property);\n  }\n\n  public function associateMany(fragment : FragmentName, properties : Iterable<PropertyName>)\n    properties.map(associate.bind(fragment, _));\n\n  public function getAssociations(fragment : FragmentName) : Iterator<String> {\n    var s = map.get(fragment);\n    if(s == null)\n      s = new Set();\n    return s.iterator();\n  }\n}","package cards.ui.fragments;\n\nimport thx.stream.Value;\nimport cards.components.Component;\nimport cards.properties.ToggleClass;\nimport cards.ui.editors.TextEditor;\n\nclass InlineText implements Fragment {\n  public var name(default, null) : String = 'text';\n  public var editor(default, null) : TextEditor;\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var active(default, null) : Value<Bool>;\n  public var uid(default, null) : String;\n  public var parent(default, null) : Fragment;\n  public function new(options : InlineTextOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<span class=\"text\"></span>';\n    uid = null != options.uid ? options.uid : thx.core.UUID.create();\n    if(null == options.placeHolder)\n      options.placeHolder = 'type some content';\n    parent = options.fragmentParent;\n    editor = new TextEditor(options);\n    active = new Value(false);\n    active.feed(new ToggleClass(editor.component, 'active').stream);\n    focus = editor.focus;\n    component = editor.component;\n  }\n\n  public function destroy() {\n    editor.destroy();\n  }\n\n  public function toString()\n    return name;\n}\n\ntypedef InlineTextOptions = {> TextEditorOptions,\n  ?uid : String,\n  fragmentParent : cards.ui.fragments.Block\n}","package cards.ui.fragments;\n\nimport thx.stream.Value;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nusing thx.stream.dom.Dom;\nusing thx.stream.Emitter;\nusing thx.stream.IStream;\n\nclass ReadonlyBlock implements Fragment {\n  public var name(default, null) : String = 'readonly';\n  public var component(default, null) : Component;\n  public var focus(default, null) : Value<Bool>;\n  public var active(default, null) : Value<Bool>;\n  public var uid(default, null) : String;\n  public var parent(default, null) : Fragment;\n  var focusStream : IStream;\n  public function new(options : FragmentOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<div class=\"readonly block\" tabindex=\"1\">readonly</div>';\n\n    component = new Component(options);\n    focus = new Value(false);\n    active = new Value(false);\n    uid = null != options.uid ? options.uid : thx.core.UUID.create();\n\n    focusStream = component.el.streamFocus().feed(focus);\n\n    active.subscribe(component.el.subscribeToggleClass('active'));\n  }\n\n  public function destroy() {\n    focusStream.cancel();\n    component.destroy();\n  }\n\n  public function toString()\n    return name;\n}","package cards.ui.input;\n\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport cards.model.SchemaType;\nimport thx.stream.Bus;\nimport thx.stream.Value;\n\n// TODO: add interface IRoutedEditor to support path\nclass Editor implements IEditor {\n  public var stream(default, null) : Bus<TypedValue>;\n  public var type(default, null) : SchemaType;\n  public var focus(default, null) : Value<Bool>;\n  public var component(default, null) : Component;\n\n  public function new(type : SchemaType, options : ComponentOptions) {\n    this.stream    = new Bus(true, TypedValue.equal);\n    this.type      = type;\n    this.focus     = new Value(false);\n    this.component = new Component(options);\n  }\n\n  public function dispose() {\n    stream.clear();\n    focus.clear();\n    component.destroy();\n  }\n\n  public function toString()\n    return Type.getClassName(Type.getClass(this)).split('.').pop();\n}","package cards.ui.input;\n\nimport cards.ui.input.Path;\nimport thx.stream.Bus;\nimport cards.model.SchemaType;\nimport cards.components.ComponentOptions;\n\nclass RouteEditor extends Editor implements IRouteEditor {\n  public var diff(default, null) : Bus<DiffAt>;\n\n  public function new(type : SchemaType, options : ComponentOptions) {\n    super(type, options);\n    diff = new Bus();\n  }\n\n  override public function dispose() {\n    super.dispose();\n    diff.clear();\n  }\n\n  public function typeAt(path : Path) : SchemaType {\n    return throw 'abstract method';\n  }\n}","package cards.ui.input;\n\nimport cards.components.Component;\nimport cards.model.SchemaType;\nimport cards.ui.widgets.Toolbar;\nimport js.Browser;\nimport js.html.Element;\nimport js.html.TableCellElement;\nimport js.html.TableElement;\nimport haxe.ds.Option;\nusing thx.core.Arrays;\nusing thx.core.Options;\nusing thx.stream.Emitter;\nimport thx.stream.Value;\nusing udom.Dom;\n\nclass BaseObjectEditor extends RouteEditor {\n  var fields : Array<FieldInfo>;\n  var object : {};\n  var editors : Map<String, IEditor>;\n  var defMap : Map<String, { field : FieldInfo, index : Int }>;\n  var table : TableElement;\n  var currentField : Value<Option<String>>;\n  var toolbar : Toolbar;\n  public function new(container : Element, parent : Component, fields : Array<FieldInfo>) {\n    this.object = {};\n    editors = new Map();\n    defMap = new Map();\n    currentField = Value.createOption();\n    var options = {\n      template  : '<div class=\"editor table\"></div>',\n      container : container,\n      parent : parent\n    };\n    super(ObjectType([]), options);\n    this.fields = [];\n\n    toolbar = new Toolbar({\n      parent : component,\n      container : component.el\n    });\n\n    var buttonRemove = toolbar.right.addButton('', Config.icons.remove);\n    buttonRemove.enabled.set(false);\n\n    currentField\n      .mapValue(function(cur) return switch cur {\n        case None: false;\n        case Some(name): defMap.get(name).field.optional;\n      })\n      .feed(buttonRemove.enabled);\n\n    buttonRemove.clicks\n      .subscribe(function(_) {\n        var name = currentField.get().toValue();\n        if(null == name)\n          return;\n        removeField(name);\n      });\n\n    table = Browser.document.createTableElement();\n    component.el.appendChild(table);\n\n    diff.subscribe(function(d) {\n      switch [d.path.asArray(), d.diff] {\n        case [[Field(name)], Remove]:\n          if(editors.exists(name))\n            removeField(name);\n        case [[Field(name)], Add]:\n          ensureField(name);\n        case [[Field(name)], Set(tv)] if(Type.enumEq(tv.asType(), defMap.get(name).field.type)):\n          ensureField(name).stream.pulse(tv);\n        case [path, diff] if(path.length > 0):\n          var first = path.shift();\n          switch first {\n            case Field(name) if(switch defMap.get(name).field.type {\n                case ObjectType(_), ArrayType(_): true;\n                case _: false;\n              }):\n              (cast ensureField(name) : IRouteEditor)\n                .diff.pulse(new DiffAt(path, diff));\n            case _:\n              throw 'unable to forward $d within ObjectEditor';\n          }\n        case [[], Set(tv)] if(Type.enumEq(type, tv.asType())):\n          // TODO: set value?\n        case _:\n          trace(d.path.toString());\n          trace(switch d.diff {\n            case Set(d): Std.string(d);\n            case _: Std.string(d.diff);\n          });\n          throw 'unable to assign $d within ObjectEditor';\n      }\n      pulse();\n    });\n\n    fields.mapi(function(field, i) {\n      addFieldDefinition(field, i);\n    });\n/*\n    currentField\n      .toBool()\n      .feed(focus);\n*/\n  }\n\n  function ensureField(name : String) {\n    if(!editors.exists(name))\n      realizeField(name);\n    return editors.get(name);\n  }\n\n  public function addFieldDefinition(field : FieldInfo, ?index : Int) {\n    checkUnique(field.name);\n    if(null == index)\n      index = fields.length;\n    defMap.set(field.name, { field : field, index : index });\n    fields.push(field);\n    this.type = ObjectType(fields);\n    if(!field.optional)\n      realizeField(field.name);\n  }\n\n  function createFieldLabel(parent : Component, container : Element, name : String)\n    container.textContent = name;\n\n  public function realizeField(name : String, ?type : SchemaType) {\n    if(editors.exists(name))\n      throw 'field $name already realized';\n    var def = fields.first(function(field) return field.name == name);\n    if(null == def) throw 'unable to realize $name because it is not defined in ObjectType';\n    if(null == type)\n      type = def.type;\n    var editor = switch type {\n      case ObjectType(_), ArrayType(_):\n        var rowh = Browser.document.createTableRowElement(),\n            rowd = Browser.document.createTableRowElement(),\n            th : TableCellElement = cast Browser.document.createElement('th'),\n            td : TableCellElement = cast Browser.document.createElement('td');\n        var index = defMap.get(name).index;\n        rowh.setAttribute('data-index', cast index);\n        rowd.setAttribute('data-index', cast index);\n        th.colSpan = 2;\n        createFieldLabel(component, th, name);\n        th.className = \"composite\";\n        td.colSpan = 2;\n        td.className = \"composite\";\n        var editor = EditorFactory.create(type, td, component);\n        rowh.appendChild(th);\n        rowd.appendChild(td);\n        var ref = findRef(table, index);\n        if(null != ref) {\n          table.insertBefore(rowd, ref);\n        } else {\n          table.appendChild(rowd);\n        }\n        table.insertBefore(rowh, rowd);\n        editor;\n      case _:\n        var row = Browser.document.createTableRowElement(),\n            th  = Browser.document.createElement('th'),\n            td  = Browser.document.createElement('td');\n        var index = defMap.get(name).index;\n        row.setAttribute('data-index', cast index);\n        createFieldLabel(component, th, name);\n        th.className = \"primitive\";\n        td.className = \"primitive\";\n        var editor = EditorFactory.create(type, td, component);\n        row.appendChild(th);\n        row.appendChild(td);\n        var ref = findRef(table, index);\n        if(null != ref) {\n          table.insertBefore(row, ref);\n        } else {\n          table.appendChild(row);\n        }\n        editor;\n    }\n    editors.set(name, editor);\n\n    editor.focus.feed(focus);\n\n    editor.focus\n      .withValue(true)\n      .mapValue(function(_) return def.name)\n      .toOption()\n      .feed(currentField);\n\n    editor.stream\n      .mapValue(function(v)\n        return new DiffAt(name, Set(v)))\n      .plug(diff);\n\n    diff.pulse(new DiffAt(name, Add));\n  }\n\n  static function findRef(table : TableElement, index : Int) {\n    var trs = Query.all('tr', table).childrenOf(table);\n    for(tr in trs) {\n      var ref : Int = cast tr.getAttribute(\"data-index\");\n      if(ref > index)\n        return tr;\n    }\n    return null;\n  }\n\n  override public function typeAt(path : Path) {\n    return switch path.asArray() {\n      case [Field(name)]:\n        editors.get(name).type;\n      case [Index(_)]:\n        throw 'invalid path $path';\n      case []:\n        type;\n      case arr:\n        arr = arr.copy();\n        var first = arr.pop();\n        switch first {\n          case Field(name) if(Std.is(editors.get(name), IRouteEditor)):\n            Std.instance(editors.get(name), IRouteEditor).typeAt(arr);\n          case _:\n            throw 'invalid path $arr';\n        }\n    }\n  }\n\n  public function removeField(name : String) {\n    var editor = editors.get(name),\n        def    = defMap.get(name);\n    editor.dispose();\n    editors.remove(name);\n    var rows = Query.all('tr[data-index=\"${def.index}\"]', table).childrenOf(table);\n    rows.copy().map(function(row) {\n      table.removeChild(row);\n    });\n    currentField.set(None);\n  }\n\n  function checkUnique(name : String)\n    for(field in fields)\n      if(name == field.name)\n        throw '$name field already exists in this ObjectType';\n\n  // TODO: pulse passes original object and bad things can happen if it is modified elsewhere\n  function pulse()\n    stream.pulse(new TypedValue(type, object));\n}","package cards.ui.input;\n\nimport cards.ui.input.TypedValue;\nimport cards.ui.widgets.Button;\nimport cards.ui.widgets.Menu;\nimport haxe.ds.Option;\nimport cards.ui.widgets.Toolbar;\nimport cards.model.SchemaType;\nimport js.Browser;\nimport js.html.Element;\nimport js.html.TableCellElement;\nimport js.html.TableElement;\nusing thx.core.Arrays;\nusing thx.core.Iterables;\nusing thx.core.Options;\nusing thx.stream.Emitter;\nusing udom.Dom;\nimport thx.stream.Value;\nimport cards.components.Component;\n\nclass AnonymousObjectEditor extends BaseObjectEditor {\n  public static var defaultTypes(default, null) : Array<{ type : SchemaType, description : String }> = (function() {\n      var types = [\n          { type : StringType,     description : \"text\" },\n          { type : FloatType,      description : \"number\" },\n          { type : DateType,       description : \"date\" },\n          { type : CodeType,       description : \"code\" },\n          { type : BoolType,       description : \"yes/no\" },\n          { type : ObjectType([]), description : \"object\" }\n        ];\n      types = types\n        .concat(types.map(function(o) return {\n          type : ArrayType(o.type),\n          description : 'list of ${o.description}'\n        }))\n        //.concat(types.map(function(o) return {\n        //  type : ArrayType(ArrayType(o.type)),\n        //  description : 'list of list of ${o.description}'\n        //}))\n        ;\n      return types;\n    })();\n  var menuAdd : Menu;\n  var allowedTypes : Array<{ type : SchemaType, description : String }>;\n  public function new(container : Element, parent : Component, ?allowedTypes : Array<{ type : SchemaType, description : String }>) {\n    super(container, parent, []);\n    this.allowedTypes = null == allowedTypes ? defaultTypes : allowedTypes;\n    menuAdd = new Menu({ parent : component });\n    initMenu();\n\n    var buttonAdd = toolbar.left.addButton('', Config.icons.addMenu);\n\n    buttonAdd.clicks\n      .subscribe(function(_) {\n        menuAdd.anchorTo(buttonAdd.component.el);\n        menuAdd.visible.stream.set(true);\n      });\n  }\n\n  function initMenu()\n    allowedTypes.map(function(item) {\n      var button = new Button('add <b>${item.description}</b>');\n      button.clicks\n        .subscribe(function(_) {\n          var name = guessFieldName();\n          addFieldDefinition({ name : name, type : item.type, optional : true });\n          realizeField(name);\n          editors.get(name).focus.set(true);\n        });\n      menuAdd.addItem(button.component);\n    });\n\n  override public function removeField(name : String) {\n    super.removeField(name);\n    fields = fields.filter(function(field) return field.name != name);\n    this.type = ObjectType(fields);\n    defMap.remove(name);\n  }\n\n  override function createFieldLabel(parent : Component, container : Element, name : String) {\n    var editor = new cards.ui.input.FieldNameEditor(container, parent);\n    // TODO: change model\n    editor.stream\n      .mapValue(function(v) return v.asValue())\n      .debounce(10)\n      .window(2, false)\n      .subscribe(function(names) switch names{\n        case [o, n] if(editors.exists(n)): // rename to existing key\n          // put in queue again.\n          // debounce() ensure that the original name is preserved\n          editor.stream.pulse((guessFieldName(n) : TypedValue));\n        case [o, n]: // rename\n          // change definition\n          var def = defMap.get(o);\n          defMap.remove(o);\n          def.field.name = n;\n          defMap.set(n, def);\n\n          // change editor reference\n          editors.remove(o);\n          editors.set(n, editor);\n\n          // set type\n          type = ObjectType(defMap\n            .order(function(a, b) return a.index - b.index)\n            .map(function(v) return v.field));\n        case _:\n          throw 'createFieldLabel should never reach this point';\n      });\n    editor.stream.pulse((name : TypedValue));\n  }\n\n  public function guessFieldName(?prefix = 'field') {\n    var id = 0,\n        t;\n    function assemble(id)\n      return id > 0 ? [prefix, '$id'].join('_') : prefix;\n    while(editors.exists(t = assemble(id))) id++;\n    return t;\n  }\n}","package cards.ui.input;\n\nimport cards.ui.widgets.*;\nimport cards.model.SchemaType;\nimport js.Browser;\nimport js.html.Element;\nimport js.html.LIElement;\nimport cards.ui.input.EditorFactory;\nimport thx.stream.Value;\nusing thx.stream.Emitter;\nimport haxe.ds.Option;\nimport js.html.OListElement;\nusing udom.Dom;\nusing thx.core.Options;\nimport cards.ui.input.Diff;\nimport cards.components.Component;\n\n// TODO\n//  * drag and drop item\n//  * set value at once\n//  * change SchemaType dynamically\nclass ArrayEditor extends RouteEditor {\n  var list : OListElement;\n  var editors : Array<IEditor>;\n  var innerType : SchemaType;\n  var currentIndex : Value<Option<Int>>;\n  var values : Array<Null<Dynamic>>;\n  public function new(container : Element, parent : Component, innerType : SchemaType) {\n    values = [];\n    editors = [];\n    currentIndex = Value.createOption();\n    var options = {\n      template  : '<div class=\"editor array\"></div>',\n      container : container,\n      parent : parent\n    };\n    super(ArrayType(innerType), options);\n    this.innerType = innerType;\n\n    var toolbar = new Toolbar({\n      parent : component,\n      container : component.el\n    });\n\n    // create DOM containers\n    list = Browser.document.createOListElement();\n    var items = Browser.document.createDivElement();\n    items.className = \"items\";\n    component.el.appendChild(items);\n    items.appendChild(list);\n\n    var buttonAdd = toolbar.left.addButton('', Config.icons.add),\n        buttonRemove = toolbar.right.addButton('', Config.icons.remove);\n\n    currentIndex\n      .toBool()\n      .feed(buttonRemove.enabled);\n\n    diff.subscribe(function(d) {\n      switch [d.path.asArray(), d.diff] {\n        case [[Index(i)], Remove]:\n          values.splice(i, 1);\n          removeEditor(i);\n        case [[Index(i)], Add]:\n          values.insert(i, null);\n          createEditor(i);\n        case [[Index(i)], Set(tv)] if(Type.enumEq(tv.asType(), innerType)):\n          values[i] = tv.asValue();\n          setEditor(i, tv);\n        case [path, diff] if(path.length > 0):\n          var first = path.shift();\n          switch first {\n            case Index(index) if(Std.is(editors[index], IRouteEditor)):\n              (cast editors[index] : IRouteEditor).diff.pulse(new DiffAt(path, diff));\n            case _:\n              throw 'unable to forward $d within ArrayEditor';\n          }\n        case [[], Set(tv)] if(Type.enumEq(type, tv.asType())):\n          // TODO: set value?\n        case _:\n          throw 'unable to assign $d within ArrayEditor';\n      }\n      pulse();\n    });\n\n    currentIndex\n      .audit(function(_) {\n        var prev = Query.first('li.active', list).childOf(list);\n        if(null == prev) return;\n        prev.classList.remove('active');\n      })\n      .filterOption()\n      .subscribe(function(index) {\n        var el = Query.first('li:nth-child(${index+1})', list).childOf(list);\n        if(null == el) return;\n        el.classList.add('active');\n      });\n\n    buttonAdd.clicks\n      .subscribe(function(_) {\n        var index = currentIndex.get().toBool() ? currentIndex.get().toValue() + 1 : values.length;\n        diff.pulse(new DiffAt(index, Add));\n        editors[index].focus.set(true);\n      });\n    buttonRemove.clicks\n      .subscribe(function(_) {\n        if(!currentIndex.get().toBool())\n          return;\n        var index = currentIndex.get().toValue();\n        diff.pulse(new DiffAt(index, Remove));\n      });\n  }\n\n  public function pushItem(?value : TypedValue)\n    insertItem(values.length, value);\n\n  public function insertItem(index : Int, ?value : TypedValue) {\n    diff.pulse(new DiffAt(index, Add));\n    if(null != value)\n      diff.pulse(new DiffAt(index, Set(value)));\n  }\n\n  override public function typeAt(path : Path) {\n    return switch path.asArray() {\n      case [Index(_)]:\n        innerType;\n      case []:\n        type;\n      case arr:\n        arr = arr.copy();\n        var first = arr.pop();\n        switch first {\n          case Index(i) if(Std.is(editors[i], IRouteEditor)):\n            Std.instance(editors[i], IRouteEditor).typeAt(arr);\n          case _:\n            throw 'invalid path $arr';\n        }\n    }\n  }\n\n  function createEditor(index : Int) {\n    var item = Browser.document.createLIElement(),\n        ref  = Query.first('li:nth-child(${index+1})', list).childOf(list);\n    if(null == ref)\n      list.appendChild(item);\n    else\n      list.insertBefore(item, ref);\n    var editor = EditorFactory.create(innerType, item, component);\n    editors.insert(index, editor);\n\n    editor.focus\n      .feed(focus);\n\n    editor.focus\n      .withValue(true)\n      .mapValue(function(_) return editor.component.el.parentElement)\n      .mapValue(function(el) return el.getElementIndex())\n      .toOption()\n      .feed(currentIndex);\n\n    editor.stream\n      .filterValue(function(v) return currentIndex.get().toBool())\n      .mapValue(function(v) return new DiffAt(currentIndex.get().toValue(), Set(v)))\n      .distinct(DiffAt.equal)\n      // don't use plug or the diff stream will be killed when killing the editor\n      .subscribe(function(v) diff.pulse(v));\n  }\n\n  function setEditor(index : Int, value : TypedValue) {\n    editors[index].stream.pulse(value);\n  }\n\n  function removeEditor(index : Int) {\n    var item = Query.first('li:nth-child(${index+1})', list).childOf(list),\n        editor = editors[index];\n    list.removeChild(item);\n    editor.dispose();\n    editors.splice(index, 1);\n    currentIndex.set(None);\n\n    // set focus after removal\n    thx.core.Timer.delay(function() {\n      if(editors.length == 0)\n        return;\n      if(index == editors.length)\n        index--;\n      editors[index].focus.set(true);\n    }, 10);\n  }\n\n  // TODO: pulse passes original object and bad things can happen if it is modified elsewhere\n  function pulse()\n    stream.pulse(new TypedValue(type, values));\n}","package cards.ui.input;\n\nimport cards.components.ComponentOptions;\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport js.html.InputElement;\nimport udom.Dom.Query;\nusing thx.stream.dom.Dom;\nimport cards.components.Component;\n\nclass BoolEditor extends Editor {\n  public function new(container : Element,parent : Component) {\n    var options = {\n      template  : '<input class=\"editor bool\" placeholder=\"on/off\" type=\"checkbox\" />',\n      container : container,\n      parent : parent\n    };\n    super(BoolType, options);\n\n    var el : InputElement = cast component.el;\n    el.streamEvent('change')\n      .mapValue(function(_) return (el.checked : TypedValue))\n      .plug(stream);\n    el.streamFocus().feed(focus);\n\n    stream.subscribe(function(num) {\n      var v = num.asValue();\n      if(el.value != v)\n        el.value = v;\n    });\n\n    focus.subscribe(el.subscribeFocus());\n  }\n}","package cards.ui.input;\n\nimport cards.components.ComponentOptions;\nimport cards.model.SchemaType;\nimport cards.ui.input.TypedValue;\nimport js.html.Element;\nimport js.html.TextAreaElement;\nimport udom.Dom.Query;\nusing thx.stream.dom.Dom;\nimport cards.components.Component;\n\n// TODO: focus\nclass CodeMirrorEditor extends Editor {\n  var editor : Dynamic;\n  public function new(container : Element, parent : Component) {\n    var options = {\n      template  : '<div class=\"editor code\"></div>',\n      container : container,\n      parent : parent\n    };\n    super(CodeType, options);\n\n    editor = untyped __js__('CodeMirror')(component.el, {\n      mode : \"javascript\",\n      tabSize : 2,\n      lineNumbers : true,\n      tabindex : 1,\n      lineWrapping : true\n\n    });\n    editor.on(\"changes\", changes);\n    editor.on(\"focus\", setFocus);\n    editor.on(\"blur\", blurFocus);\n\n    stream.subscribe(function(text) {\n      var v = text.asValue();\n      if(editor.doc.getValue() != v) {\n        editor.doc.setValue(v);\n      }\n    });\n\n    focus.subscribe(function(_) editor.focus());\n\n    thx.core.Timer.delay(function() {\n        editor.refresh();\n      }, 10);\n  }\n\n  function changes() {\n    var content = editor.doc.getValue();\n    stream.pulse(new TypedValue(CodeType, content));\n  }\n\n  function setFocus() focus.set(true);\n  function blurFocus() focus.set(false);\n\n  override public function dispose() {\n    super.dispose();\n    editor.off(\"changes\", changes);\n    editor.off(\"focus\", setFocus);\n    editor.off(\"blur\", blurFocus);\n    editor = null;\n  }\n}","package cards.ui.input;\n\nimport cards.components.ComponentOptions;\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport js.html.InputElement;\nimport udom.Dom.Query;\nusing thx.stream.dom.Dom;\n//import thx.date.ISO8601;\nimport cards.components.Component;\n\nclass DateEditor extends Editor {\n  var format : String;\n  public function new(container : Element, parent : Component, useTime = true) {\n    format = useTime ? '%Y-%m-%dT%H:%M' : '%Y-%m-%d';\n    var options = {\n      template  : '<input class=\"editor date\" placeholder=\"insert date\" type=\"${useTime?\"datetime-local\":\"date\"}\" />',\n      container : container,\n      parent : parent\n    };\n    super(DateType, options);\n\n    var el : InputElement = cast component.el;\n    el.streamEvent('change')\n      .mapValue(function(_) return try (Date.fromString(el.value) : TypedValue) catch(e : Dynamic) null)\n      .notNull()\n      .filterValue(function(v) return !Math.isNaN(v.asValue().getTime()))\n      .plug(stream);\n    el.streamFocus().feed(focus);\n\n    stream.subscribe(function(num) {\n      var v = num.asValue(),\n          s = DateTools.format(v, format);\n      if(el.value != s)\n        el.value = s;\n    });\n\n    focus.subscribe(el.subscribeFocus());\n  }\n}","package cards.ui.input;\n\nimport cards.model.SchemaType;\nusing thx.core.Dynamics;\nusing thx.core.Tuple;\n\nabstract DiffAt(Tuple2<Path, Diff>) {\n  public inline function new(path : Path, diff : Diff)\n    this = new Tuple2(path, diff);\n\n  public var path(get, never) : Path;\n  public var diff(get, never) : Diff;\n\n  public inline function get_path() : Path\n    return this._0;\n\n  public inline function get_diff() : Diff\n    return this._1;\n\n  @:op(A==B) public static function equal(a : DiffAt, b : DiffAt) : Bool\n    if(null == a && null == b)\n      return true;\n    else if(null == a || null == b)\n      return false;\n    else\n      return Path.equal(a.path, b.path) && Dynamics.same(a.diff, b.diff);\n\n  public function toString()\n    return this._0.toString() + ':' + Std.string(this._1);\n}","package cards.ui.input;\n\nimport js.html.Element;\nimport cards.components.Component;\nimport cards.model.SchemaType;\n\nclass EditorFactory {\n  public static function create(type : SchemaType, container : Element, parent : Component) : IEditor {\n    return switch type {\n      case ArrayType(t):\n        new ArrayEditor(container, parent, t);\n      case BoolType:\n        new BoolEditor(container, parent);\n      case CodeType:\n        new CodeMirrorEditor(container, parent);\n      case DateType:\n        new DateEditor(container, parent, false);\n      case FloatType:\n        new NumberEditor(container, parent);\n      case ObjectType(fields):\n        fields.length == 0\n          ? new AnonymousObjectEditor(container, parent)\n          : new ObjectEditor(container, parent, fields);\n      case ReferenceType:\n        new ReferenceEditor(container, parent);\n      case StringType:\n        new TextEditor(container, parent);\n      case _:\n        throw 'Editor for $type has not been implemented yet';\n    }\n  }\n}","package cards.ui.input;\n\nimport cards.components.ComponentOptions;\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport js.html.InputElement;\nimport udom.Dom.Query;\nusing thx.stream.dom.Dom;\nimport cards.components.Component;\n\nclass InputBasedEditor extends Editor {\n  public function new(container : Element, parent : Component, valueType : SchemaType, name : String, ?type : String, ?event : String = 'change', ?extract : InputElement -> TypedValue, ?assign : InputElement -> TypedValue -> Void) {\n    if(null == type)\n      type = name;\n    if(null == extract)\n      extract = function(input) return (input.value : TypedValue);\n    if(null == assign)\n      assign = function(input, value) input.value = value.asValue();\n    var options = {\n      template  : '<input class=\"editor $name\" placeholder=\"$name\" type=\"$type\" />',\n      container : container,\n      parent : parent\n    };\n    super(valueType, options);\n\n    var el : InputElement = cast component.el;\n    el.streamEvent(event)\n      .mapValue(function(_) return extract(el))\n      .plug(stream);\n    el.streamFocus().feed(focus);\n\n    stream.subscribe(function(value) {\n      var v = value.asValue();\n      if(extract(el) != v)\n        assign(el, value);\n    });\n\n    focus.subscribe(el.subscribeFocus());\n  }\n}","package cards.ui.input;\n\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport cards.components.Component;\nimport js.html.KeyboardEvent;\n\n// TODO: limit input to acceptable field value\n// TODO: limit paste values\nclass FieldNameEditor extends InputBasedEditor {\n  //static var pattern = ~/[a-z]_/i;\n  public function new(container : Element, parent : Component) {\n    super(container, parent, FloatType, 'fieldname', 'text', 'change');\n    component.el.addEventListener('keyup', function(e : KeyboardEvent) {\n\n    }, false);\n  }\n}","package cards.ui.input;\n\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport cards.components.Component;\n\nclass NumberEditor extends InputBasedEditor {\n  public function new(container : Element, parent : Component) {\n    super(container, parent, FloatType, 'number', 'number', 'input', function(el) return (el.valueAsNumber : TypedValue));\n  }\n}","package cards.ui.input;\n\nimport cards.components.Component;\nimport cards.model.SchemaType;\nimport cards.ui.widgets.Button;\nimport cards.ui.widgets.Menu;\nimport js.html.Element;\n\nclass ObjectEditor extends BaseObjectEditor {\n  var menuAdd : Menu;\n  var buttonAdd : Button;\n  var inited = false;\n  public function new(container : Element, parent : Component, fields : Array<FieldInfo>) {\n    super(container, parent, fields);\n\n    buttonAdd = toolbar.left.addButton('', Config.icons.addMenu);\n    buttonAdd.enabled.set(false);\n\n    buttonAdd.clicks\n      .subscribe(function(_) {\n        menuAdd.anchorTo(buttonAdd.component.el);\n        menuAdd.visible.stream.set(true);\n      });\n\n    menuAdd = new Menu({ parent : component });\n    inited = true;\n    setAddState();\n  }\n\n  override public function removeField(name : String) {\n    super.removeField(name);\n    setAddState();\n  }\n\n  override public function realizeField(name : String, ?type : SchemaType) {\n    super.realizeField(name, type);\n    setAddState();\n  }\n\n  function setAddState() {\n    if(!inited) return;\n    var fields = this.fields.copy().filter(function(field) {\n      return !editors.exists(field.name);\n    });\n    var enabled = fields.length > 0;\n    buttonAdd.enabled.set(enabled);\n    if(enabled) {\n      menuAdd.clear();\n      fields.map(function(field) {\n        var button = new Button('add <b>${field.name}</b>');\n        button.clicks\n          .subscribe(function(_) {\n            realizeField(field.name);\n            setAddState();\n            editors.get(field.name).focus.set(true);\n          });\n        menuAdd.addItem(button.component);\n      });\n    }\n  }\n}","package cards.ui.input;\n\nusing StringTools;\n\nabstract Path(Array<PathItem>) from Array<PathItem> to Array<PathItem> {\n  inline public function new(arr : Array<PathItem>)\n    this = arr;\n\n  @:from public static function stringAsPath(path : String)\n    return path.replace('[', '.[').split('.')\n      .filter(function(s) return s.length > 0)\n      .map(function(v) {\n        if(v.substr(0,1) == '[')\n          return Index(Std.parseInt(v.substr(1, v.length - 1)));\n        else\n          return Field(v);\n      });\n\n  @:from public static function intAsPath(index : Int)\n    return new Path([Index(index)]);\n\n  @:to public inline function asArray() : Array<PathItem>\n    return this;\n\n  @:to public function toString() {\n    if(null == this)\n      return '';\n    return this.map(function(item) return switch item {\n        case Field(name): name.replace('.', '\\\\.');\n        case Index(pos): '[$pos]';\n      }).join('.').replace('.[', '[');\n  }\n\n  @:op(A==B) public function equal(other : Path) {\n    var other : Array<PathItem> = other;\n    if(this == null || other == null)\n      return false;\n    if(this.length != other.length)\n      return false;\n    for(i in 0...this.length) {\n      if(!Type.enumEq(this[i], other[i]))\n        return false;\n    }\n    return true;\n  }\n\n}\n\nenum PathItem {\n  Field(name : String);\n  Index(pos : Int);\n}","package cards.ui.input;\n\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport cards.components.Component;\n\nclass ReferenceEditor extends InputBasedEditor {\n  public function new(container : Element, parent : Component) {\n    super(container, parent, ReferenceType, 'reference', 'text', 'input', function(el) return new TypedValue(ReferenceType, el.value));\n  }\n}","package cards.ui.input;\n\nimport cards.components.ComponentOptions;\nimport cards.model.SchemaType;\nimport js.html.Element;\nimport js.html.TextAreaElement;\nimport udom.Dom.Query;\nusing thx.stream.dom.Dom;\nimport cards.components.Component;\n\nclass TextEditor extends Editor {\n  function resize() {\n    var el = component.el;\n    el.style.height = \"5px\";\n    el.style.height = (1+el.scrollHeight) + \"px\";\n  }\n\n  public function new(container : Element, parent : Component) {\n    var options = {\n      template  : '<textarea class=\"editor text\" placeholder=\"text\"></textarea>',\n      container : container,\n      parent : parent\n    };\n    super(StringType, options);\n\n    var el : TextAreaElement = cast component.el;\n    el.streamEvent('input')\n      .audit(function(_) resize())\n      .mapValue(function(_) return (el.value : TypedValue))\n      .plug(stream);\n    el.streamFocus().feed(focus);\n\n    stream.subscribe(function(text) {\n      var v = text.asValue();\n      if(el.value != v)\n        el.value = v;\n    });\n\n    focus.subscribe(el.subscribeFocus());\n  }\n}","package cards.ui.input;\n\nimport cards.model.SchemaType;\nimport thx.core.Tuple;\nimport thx.core.Dynamics;\n\nabstract TypedValue(Tuple2<SchemaType, Dynamic>) {\n  public inline function new(type : SchemaType, value : Dynamic)\n    this = new Tuple2(type, value);\n\n  @:to public inline function asType()\n    return this._0;\n\n  public inline function asValue() : Dynamic\n    return this._1;\n\n  @:from public static inline function fromString(s : String)\n    return new TypedValue(StringType, s);\n\n  @:from public static inline function fromFloat(f : Float)\n    return new TypedValue(FloatType, f);\n\n  @:from public static inline function fromDate(d : Date)\n    return new TypedValue(DateType, d);\n\n  @:from public static inline function fromBool(b : Bool)\n    return new TypedValue(BoolType, b);\n\n  @:to public function asString()\n    return Std.string(this._1); // TODO: use type transform here\n\n  @:op(A==B) public static function equal(a : TypedValue, b : TypedValue) {\n    if(null == a && null == b)\n      return true;\n    else if(null == a || null == b)\n      return false;\n    else\n      return Dynamics.same(a.asValue(), b.asValue()) && Dynamics.same(a.asType(), b.asType());\n  }\n\n  public function toString()\n    return Std.string(this._1) + ' : ' + Std.string(this._0);\n}","package cards.ui.widgets;\n\nimport js.html.Audio;\nimport js.html.MouseEvent;\nusing thx.stream.Emitter;\nimport thx.stream.Value;\nimport cards.components.Component;\nusing thx.stream.dom.Dom;\n\nclass Button {\n  public static var sound(default, null) : Audio = (function() {\n      var audio = new Audio();\n      audio.volume = 0.5;\n      audio.src = 'sound/click.mp3';\n      return audio;\n    })();\n  public var component(default, null) : Component;\n  public var clicks(default, null) : Emitter<MouseEvent>;\n  public var enabled(default, null) : Value<Bool>;\n  var cancel : Void -> Void;\n  public function new(text = '', ?icon : String) {\n    component = new Component({\n      template : null == icon\n        ? '<button>$text</button>'\n        : '<button class=\"fa fa-$icon\">$text</button>'\n    });\n    clicks = component.el.streamClick()\n      .audit(playSound);\n\n    enabled = new Value(true);\n    enabled.negate().subscribe(\n      component.el.subscribeToggleAttribute(\"disabled\", \"disabled\")\n    );\n  }\n\n  function playSound(_) {\n    sound.load();\n    sound.play();\n  }\n\n  public function destroy() {\n    cancel();\n    component.destroy();\n  }\n}","package cards.ui.widgets;\n\nimport js.Browser;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport js.html.Element;\nimport udom.Dom;\n\nclass Menu extends FrameOverlay {\n  var items : Map<Component, Element>;\n  var ul : Element;\n  public function new(options : ComponentOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<menu class=\"frame-overlay\"><ul></ul></menu>';\n    super(options);\n    ul = Query.first('ul', component.el);\n    items = new Map();\n  }\n\n  public function clear() {\n    ul.innerHTML = '';\n    items = new Map();\n  }\n\n  public function addItem(item : Component) {\n    var el = Browser.document.createLIElement();\n    item.appendTo(el);\n    component.add(item);\n    ul.appendChild(el);\n    items.set(item, el);\n  }\n\n  public function removeItem(item : Component) {\n    var el = items.get(item);\n    item.detach();\n    ul.removeChild(el);\n  }\n}","package cards.ui.widgets;\n\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\nimport cards.ui.widgets.Toolbar.ToolbarGroup;\nimport udom.Dom;\n\nclass Statusbar {\n  public var component(default, null) : Component;\n  public var left(default, null) : ToolbarGroup;\n  public var center(default, null) : ToolbarGroup;\n  public var right(default, null) : ToolbarGroup;\n  public function new(options : ComponentOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<footer class=\"statusbar\"><div><div class=\"left\"></div><div class=\"center\"></div><div class=\"right\"></div></div></footer>';\n    component = new Component(options);\n    left   = new ToolbarGroup(Query.first('.left',   component.el), component);\n    center = new ToolbarGroup(Query.first('.center', component.el), component);\n    right  = new ToolbarGroup(Query.first('.right',  component.el), component);\n  }\n}","package cards.ui.widgets;\n\nimport udom.Dom;\nimport js.html.Element;\nimport cards.components.Component;\nimport cards.components.ComponentOptions;\n\nclass Toolbar {\n  public var component(default, null) : Component;\n  public var left(default, null) : ToolbarGroup;\n  public var center(default, null) : ToolbarGroup;\n  public var right(default, null) : ToolbarGroup;\n  public function new(options : ComponentOptions) {\n    if(null == options.el && null == options.template)\n      options.template = '<header class=\"toolbar\"><div><div class=\"left\"></div><div class=\"center\"></div><div class=\"right\"></div></div></header>';\n    component = new Component(options);\n    left   = new ToolbarGroup(Query.first('.left', component.el), component);\n    center = new ToolbarGroup(Query.first('.center', component.el), component);\n    right  = new ToolbarGroup(Query.first('.right', component.el), component);\n  }\n}\n\nclass ToolbarGroup {\n  public var component(default, null) : Component;\n\n  public function new(el : Element, parent : Component) {\n    this.component =  new Component({ el : el, parent : parent});\n  }\n\n  public function addButton(text = '', ?icon : String) {\n    var button = new Button(text, icon);\n    button.component.appendTo(component.el);\n    component.add(button.component);\n    return button;\n  }\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash9\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\treturn makeStack(\"$s\");\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\t\tvar stack = [];\n\t\t\t\tfor (site in callsites) {\n\t\t\t\t\tvar method = null;\n\t\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\t\tif (fullName != null) {\n\t\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t\t}\n\t\t\t\treturn stack;\n\t\t\t}\n\t\t\tvar a = makeStack(untyped __new__(\"Error\").stack);\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\t\treturn a;\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar infos = python.lib.Traceback.extract_stack();\n\t\t\tinfos.pop();\n\t\t\tinfos.reverse();\n\t\t\tfor (elem in infos)\n\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif flash9\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\treturn makeStack(\"$e\");\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar exc = python.lib.Sys.exc_info();\n\t\t\tif (exc._3 != null)\n\t\t\t{\n\t\t\t\tvar infos = python.lib.Traceback.extract_tb(exc._3);\n\t\t\t\tinfos.reverse();\n\t\t\t\tfor (elem in infos)\n\t\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash9\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a : Array<String> = untyped __eval__(s);\n\t\t\tvar m = new Array();\n\t\t\tfor( i in 0...a.length - if(s == \"$s\") 2 else 0 ) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.unshift(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.unshift(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.unshift(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tvar m = [];\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tm.push(Module(line)); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the trace() method, which is invoked upon a call to\n\ttrace() in haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the trace() call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v,infos) { // handle trace }\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to trace() will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped #if flash9 __global__[\"trace\"] #else __trace__ #end(pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#end\n\t\t#elseif (python)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + Std.string(infos.lineNumber) + \": \" + v;\n\t\t\t\tif (infos.customParams != null) {\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\tpython.Lib.println(str);\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements Map.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements Map.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class StringMap<T> implements Map.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : String, value : T ) : Void {\n\t\tuntyped h[\"$\"+key] = value;\n\t}\n\n\tpublic function get( key : String ) : Null<T> {\n\t\treturn untyped h[\"$\"+key];\n\t}\n\n\tpublic function exists( key : String ) : Bool {\n\t\treturn untyped h.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tkey = \"$\"+key;\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[\"$\"+i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","package thx.core;\n\nimport thx.core.Functions.Functions in F;\n\n#if macro\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.ExprTools;\n#end\n\n/**\nIt provides additional extension methods on top of the `Array` type.\n\nNote that some of the examples imply `using thx.core.Arrays;`.\n**/\nclass Arrays {\n/**\nReturns `true` if `element` is found in the array.\n\nAn optional equality function can be passed as the last argument. If not provided, strict equality is adopted.\n**/\n  public static function contains<T>(array : Array<T>, element : T, ?eq : T -> T -> Bool) : Bool {\n    if(null == eq) {\n      return array.indexOf(element) >= 0;\n    } else {\n      for(i in 0...array.length)\n        if(eq(array[i], element))\n          return true;\n      return false;\n    }\n  }\n\n/**\nIt returns the cross product between two arrays.\n\n```haxe\nvar r = [1,2,3].cross([4,5,6]);\ntrace(r); // [[1,4],[1,5],[1,6],[2,4],[2,5],[2,6],[3,4],[3,5],[3,6]]\n```\n**/\n  public static function cross<T>(a : Array<T>, b : Array<T>) {\n    var r = [];\n    for (va in a)\n      for (vb in b)\n        r.push([va, vb]);\n    return r;\n  }\n\n  public static function crossMulti<T>(array : Array<Array<T>>) {\n    var acopy  = array.copy(),\n        result = acopy.shift().map(function(v) return [v]);\n    while (acopy.length > 0) {\n      var array = acopy.shift(),\n          tresult = result;\n      result = [];\n      for (v in array) {\n        for (ar in tresult) {\n          var t = ar.copy();\n          t.push(v);\n          result.push(t);\n        }\n      }\n    }\n    return result;\n  }\n\n  public static function eachPair<TIn, TOut>(array : Array<TIn>, callback : TIn -> TIn -> Bool)\n    for(i in 0...array.length)\n      for(j in i...array.length)\n        if(!callback(array[i], array[j]))\n          return;\n\n/**\nIt compares the lengths and elements of two given arrays and returns `true` if they match.\n\nAn optional equality function can be passed as the last argument. If not provided, strict equality is adopted.\n**/\n  public static function equals<T>(a : Array<T>, b : Array<T>, ?equality : T -> T -> Bool) {\n    if(a == null || b == null || a.length != b.length) return false;\n    if(null == equality) equality = F.equality;\n    for(i in 0...a.length)\n      if(!equality(a[i], b[i]))\n        return false;\n    return true;\n  }\n\n  public static function extract<T>(a : Array<T>, f : T -> Bool) : T {\n    for(i in 0...a.length)\n      if(f(a[i]))\n        return a.splice(i, 1)[0];\n    return null;\n  }\n\n  public static function find<T, TFind>(array : Array<T>, f : T -> Bool) {\n    var out = [];\n    for(item in array)\n      if(f(item))\n        out.push(item);\n    return out;\n  }\n\n/**\nIt returns the first element of the array that matches the provided predicate function.\nIf none is found it returns null.\n**/\n  public static function first<T, TFind>(array : Array<T>, predicate : T -> Bool) : Null<T> {\n    for(item in array)\n      if(predicate(item))\n        return item;\n    return null;\n  }\n\n/**\nIt traverses an array of elements. Each element is split using the `callback` function and a 'flattened' array is returned.\n\n```haxe\nvar chars = ['Hello', 'World'].flatMap(function(s) return s.split(''));\ntrace(chars); // ['H','e','l','l','o','W','o','r','l','d']\n```\n**/\n  inline public static function flatMap<TIn, TOut>(array : Array<TIn>, callback : TIn -> Array<TOut>) : Array<TOut>\n    return flatten(array.map(callback));\n\n/**\nIt takes an array of arrays and 'flattens' it into an array.\n\n```haxe\nvar arr = [[1,2,3],[4,5,6],[7,8,9]];\ntrace(arr); // [1,2,3,4,5,6,7,8,9]\n```\n**/\n  #if js inline #end\n  public static function flatten<T>(array : Array<Array<T>>) : Array<T>\n    #if js\n      return untyped __js__('Array.prototype.concat.apply')([], array);\n    #else\n      return reduce(array, function(acc : Array<T>, item) return acc.concat(item), []);\n    #end\n\n/**\nIt returns `true` if the array contains zero elements.\n**/\n  inline public static function isEmpty<T>(array : Array<T>) : Bool\n    return array.length == 0;\n\n/**\nIn other libraries it is usually referred as `pluck()`. The method works like a normal `Array.map()`\nbut instead of passing a function that receives an item, you can pass an expression that defines\nhow to access to a member of the item itself.\n\nThe following two examples are equivalent:\n\n```\nvar r = ['a','b','c'].mapField(toUppercase());\ntrace(r); // ['A','B','C']\n```\n\nAlternative using traditional `map`.\n\n```\nvar r = ['a','b','c'].map(function(o) return o.toUppercase());\ntrace(r); // ['A','B','C']\n```\n\nYou can use `mapField` on any kind of field including properties and methods and you can even pass arguments\nto such functions.\n\nThe method is a macro method that guarantees that the correct types and identifiers are used.\n**/\n  macro public static function mapField<T>(a : ExprOf<Array<T>>, field : Expr) {\n    var id = 'o.'+ExprTools.toString(field),\n        expr = Context.parse(id, field.pos);\n    return macro $e{a}.map(function(o) return ${expr});\n  }\n\n/**\nLike `mapField` but with an extra argument `i` that can be used to infer the index of the iteration.\n\n```haxe\nvar r = arr.mapFieldi(increment(i)); // where increment() is a method of the elements in the array\n```\n**/\n  macro public static function mapFieldi<T>(a : ExprOf<Array<T>>, field : Expr) {\n    var id = 'o.'+ExprTools.toString(field),\n        expr = Context.parse(id, field.pos);\n    return macro thx.core.Arrays.mapi($e{a}, function(o, i) return ${expr});\n  }\n\n/**\nSame as `Array.map()` but it adds a second argument to the `callback` function with the current index value.\n**/\n  #if js inline #end\n  public static function mapi<TIn, TOut>(array : Array<TIn>, callback : TIn -> Int -> TOut) : Array<TOut> {\n    #if js\n      return (cast array : { map : (TIn -> Int -> TOut) -> Array<TOut> }).map(callback);\n    #else\n      var r = [];\n      for(i in 0...array.length)\n        r.push(callback(array[i], i));\n      return r;\n    #end\n  }\n\n/**\nIt works the same as `Array.sort()` but returns a sorted copy of the original array.\n**/\n  public static function order<T>(array : Array<T>, sort : T -> T -> Int) {\n    var n = array.copy();\n    n.sort(sort);\n    return n;\n  }\n\n/**\nIt pushes `value` onto the array if `condition` is true. Also returns the array for easy method chaining.\n**/\n  public static function pushIf<T>(array : Array<T>, condition : Bool, value : T) {\n    if (condition)\n      array.push(value);\n    return array;\n  }\n\n  inline public static function reduce<TItem, TAcc>(array : Array<TItem>, callback : TAcc -> TItem -> TAcc, initial : TAcc) : TAcc\n    #if js\n      return untyped array.reduce(callback, initial);\n    #else\n      return Iterables.reduce(array, callback, initial);\n    #end\n\n  inline public static function reducei<TItem, TAcc>(array : Array<TItem>, callback : TAcc -> TItem -> Int -> TAcc, initial : TAcc) : TAcc\n    #if js\n      return untyped array.reduce(callback, initial);\n    #else\n      return Iterables.reducei(array, callback, initial);\n    #end\n\n/**\nIt returns a copy of the array with its elements randomly changed in position.\n**/\n  public static function shuffle<T>(a : Array<T>) : Array<T> {\n    var t = Ints.range(a.length),\n        array = [];\n    while (t.length > 0) {\n      var pos = Std.random(t.length),\n        index = t[pos];\n      t.splice(pos, 1);\n      array.push(a[index]);\n    }\n    return array;\n  }\n}","package thx.core;\n\nclass Dynamics {\n  public static function same<T1, T2>(a : T1, b : T2) : Bool {\n    // quick check\n    if(untyped a == b)\n      return true;\n\n    // type check\n    if(!Types.sameType(a, b))\n      return false;\n\n    switch Type.typeof(a) {\n      case TFloat, TNull, TInt, TBool:\n        return false;\n      case TFunction:\n        return Reflect.compareMethods(a, b);\n      case TClass(c):\n        var ca = Type.getClassName(c),\n            cb = Type.getClassName(Type.getClass(b));\n        if (ca != cb)\n          return false;\n\n        // string\n        if (Std.is(a, String))\n          return false;\n\n        // arrays\n        if (Std.is(a, Array)) {\n          var aa : Array<Dynamic> = cast a,\n              ab : Array<Dynamic> = cast b;\n          if (aa.length != ab.length)\n            return false;\n          for (i in 0...aa.length)\n            if (!same(aa[i], ab[i]))\n              return false;\n          return true;\n        }\n\n        // date\n        if(Std.is(a, Date))\n          return untyped a.getTime() == b.getTime();\n\n        // map\n        if (Std.is(a, Map)) {\n          var ha : Map<Dynamic, Dynamic> = cast a,\n              hb : Map<Dynamic, Dynamic> = cast b;\n          var ka = Iterators.toArray(ha.keys()),\n              kb = Iterators.toArray(hb.keys());\n          if (ka.length != kb.length)\n            return false;\n          for (key in ka)\n            if (!hb.exists(key) || !same(ha.get(key), hb.get(key)))\n              return false;\n          return true;\n        }\n\n        // iterator or iterable\n        var t = false;\n        if ((t = Iterators.isIterator(a)) || Iterables.isIterable(a)) {\n          var va = t ? Iterators.toArray(cast a) : Iterables.toArray(cast a),\n              vb = t ? Iterators.toArray(cast b) : Iterables.toArray(cast b);\n          if (va.length != vb.length)\n            return false;\n\n          for (i in 0...va.length)\n            if (!same(va[i], vb[i]))\n              return false;\n          return true;\n        }\n\n        // custom class\n        var fields = Type.getInstanceFields(Type.getClass(a));\n        for (field in fields) {\n          var va = Reflect.field(a, field);\n          if (Reflect.isFunction(va))\n            continue;\n          var vb = Reflect.field(b, field);\n          if(!same(va, vb))\n            return false;\n        }\n        return true;\n      case TEnum(e) :\n        var ea  = Type.getEnumName(e),\n            teb = Type.getEnum(cast b),\n            eb  = Type.getEnumName(teb);\n        if (ea != eb)\n          return false;\n\n        if (Type.enumIndex(cast a) != Type.enumIndex(cast b))\n          return false;\n        var pa = Type.enumParameters(cast a),\n          pb = Type.enumParameters(cast b);\n        for (i in 0...pa.length)\n          if (!same(pa[i], pb[i]))\n            return false;\n        return true;\n      case TObject  :\n        // anonymous object\n        var fa = Reflect.fields(a),\n            fb = Reflect.fields(b);\n        for (field in fa) {\n          fb.remove(field);\n          if (!Reflect.hasField(b, field))\n            return false;\n          var va = Reflect.field(a, field);\n          if(Reflect.isFunction(va))\n            continue;\n          var vb = Reflect.field(b, field);\n          if(!same(va, vb))\n            return false;\n        }\n        if (fb.length > 0)\n          return false;\n\n        // iterator\n        var t = false;\n        if ((t = Iterators.isIterator(a)) || Iterables.isIterable(a)) {\n          if (t && !Iterators.isIterator(b))\n            return false;\n          if (!t && !Iterables.isIterable(b))\n            return false;\n\n\n          var aa = t ? Iterators.toArray(cast a) : Iterables.toArray(cast a);\n          var ab = t ? Iterators.toArray(cast b) : Iterables.toArray(cast b);\n          if (aa.length != ab.length)\n            return false;\n          for (i in 0...aa.length)\n            if (!same(aa[i], ab[i]))\n              return false;\n          return true;\n        }\n        return true;\n      case TUnknown :\n        return throw \"Unable to compare two unknown types\";\n    }\n    return throw new Error('Unable to compare values: $a and $b');\n  }\n}","package thx.core;\n\nimport haxe.PosInfos;\nimport haxe.CallStack;\n\nclass Error #if js extends js.Error #end {\n  public static function fromDynamic(err : Dynamic, ?pos : PosInfos) : Error {\n    if(Std.is(err, Error))\n      return cast err;\n    return new Error(\"\"+err, null, pos);\n  }\n\n#if !js\n  public var message(default, null) : String;\n#end\n  public var pos(default, null) : PosInfos;\n  public var stackItems(default, null) : Array<StackItem>;\n\n  public function new(message : String, ?stack : Array<StackItem>, ?pos : PosInfos) {\n#if js\n    super(message);\n#else\n    this.message = message;\n#end\n    if(null == stack) {\n      stack = CallStack.exceptionStack();\n      if(stack.length == 0)\n        stack = CallStack.callStack();\n    }\n    this.stackItems = stack;\n    this.pos = pos;\n  }\n\n  public function toString()\n    return message + \"from: \" + pos.className + \".\" + pos.methodName + \"() at \" + pos.lineNumber + \"\\n\\n\" + CallStack.toString(stackItems);\n}","package thx.core;\n\nclass Function0 {\n  public inline static function join(fa : Void -> Void, fb : Void -> Void)\n    return function() {\n      fa();\n      fb();\n    }\n\n  public static function noop() : Void {}\n\n  public inline static function once(f : Void -> Void)\n    return function() {\n      f();\n      f = function(){}\n    };\n}\n\nclass Function1 {\n  public inline static function compose<TIn, TRet1, TRet2>(fa : TRet2 -> TRet1, fb : TIn -> TRet2)\n    return function(v : TIn) return fa(fb(v));\n\n  public static function noop<T>(_ : T) : Void {}\n\n  public inline static function join<TIn>(fa : TIn -> Void, fb : TIn -> Void)\n    return function(v : TIn) {\n      fa(v);\n      fb(v);\n    }\n}\n\nclass Functions {\n  public static function equality<T>(a : T, b : T) return a == b;\n}","package thx.core;\n\nclass Ints {\n  static var pattern_parse = ~/^[+-]?(\\d+|0x[0-9A-F]+)$/i;\n  public static function canParse(s : String)\n    return pattern_parse.match(s);\n\n  public static inline function clamp(v : Int, min : Int, max : Int) : Int\n    return v < min ? min : (v > max ? max : v);\n\n  inline public static function compare(a : Int, b : Int) : Int\n    return a - b;\n\n  inline public static function max(a : Int, b : Int) : Int\n    return a > b ? a : b;\n\n  inline public static function min(a : Int, b : Int) : Int\n    return a < b ? a : b;\n\n  // TODO add proper octal/hex/exp support\n  public static function parse(s : String) {\n    if (s.substr(0, 1) == \"+\")\n      s = s.substr(1);\n    return Std.parseInt(s);\n  }\n\n  public static function range(start : Int, ?stop : Int, step = 1) : Array<Int> {\n    if (null == stop) {\n      stop = start;\n      start = 0;\n    }\n    if ((stop - start) / step == Math.POSITIVE_INFINITY) throw \"infinite range\";\n    var range = [], i = -1, j;\n    if (step < 0)\n      while ((j = start + step * ++i) > stop) range.push(j);\n    else\n      while ((j = start + step * ++i) < stop) range.push(j);\n    return range;\n  }\n}","package thx.core;\n\nclass Iterables {\n  public inline static function eachPair<TIn, TOut>(it : Iterable<TIn>, handler : TIn -> TIn -> Bool)\n    return Iterators.eachPair(it.iterator(), handler);\n\n  public inline static function filter<T>(it : Iterable<T>, predicate : T -> Bool) : Array<T>\n    return Iterators.filter(it.iterator(), predicate);\n\n  public inline static function find<T, TFind>(it : Iterable<T>, f : T -> Bool)\n    return Iterators.find(it.iterator(), f);\n\n  public inline static function first<T, TFind>(it : Iterable<T>, f : T -> Bool)\n    return Iterators.first(it.iterator(), f);\n\n  public inline static function isEmpty<T>(it : Iterable<T>) : Bool\n    return Iterators.isEmpty(it.iterator());\n\n  public static function isIterable(v : Dynamic) {\n    var fields = Types.isAnonymousObject(v) ? Reflect.fields(v) : Type.getInstanceFields(Type.getClass(v));\n    if(!Lambda.has(fields, \"iterator\")) return false;\n    return Reflect.isFunction(Reflect.field(v, \"iterator\"));\n  }\n\n  public inline static function map<T, S>(it : Iterable<T>, f : T -> S) : Array<S>\n    return Iterators.map(it.iterator(), f);\n\n  public inline static function mapi<T, S>(it : Iterable<T>, f : T -> Int -> S) : Array<S>\n    return Iterators.mapi(it.iterator(), f);\n\n  public inline static function order<T>(it : Iterable<T>, sort : T -> T -> Int) : Array<T>\n    return Iterators.order(it.iterator(), sort);\n\n  public inline static function reduce<TItem, TAcc>(it : Iterable<TItem>, callback : TAcc -> TItem -> TAcc, initial : TAcc) : TAcc\n    return Iterators.reduce(it.iterator(), callback, initial);\n\n  public inline static function reducei<TItem, TAcc>(it : Iterable<TItem>, callback : TAcc -> TItem -> Int -> TAcc, initial : TAcc) : TAcc\n    return Iterators.reducei(it.iterator(), callback, initial);\n\n  public inline static function toArray<T>(it : Iterable<T>) : Array<T>\n    return Iterators.toArray(it.iterator());\n}","package thx.core;\n\nclass Iterators {\n  public static function map<T, S>(it : Iterator<T>, f : T -> S) : Array<S> {\n    var acc = [];\n    for(v in it)\n      acc.push(f(v));\n    return acc;\n  }\n\n  public static function mapi<T, S>(it : Iterator<T>, f : T -> Int -> S) : Array<S> {\n    var acc = [],\n      i = 0;\n    for(v in it)\n      acc.push(f(v, i++));\n    return acc;\n  }\n\n  public static function first<T, TFind>(it : Iterator<T>, f : T -> Bool) {\n    for(item in it)\n      if(f(item))\n        return item;\n    return null;\n  }\n\n  public static function find<T, TFind>(it : Iterator<T>, f : T -> Bool) {\n    var out = [];\n    for(item in it)\n      if(f(item))\n        out.push(item);\n    return out;\n  }\n\n  public static function eachPair<TIn, TOut>(it : Iterator<TIn>, handler : TIn -> TIn -> Bool)\n    Arrays.eachPair(toArray(it), handler);\n\n  public static function toArray<T>(it : Iterator<T>) : Array<T> {\n    var items = [];\n    for(item in it)\n      items.push(item);\n    return items;\n  }\n\n  public static function order<T>(it : Iterator<T>, sort : T -> T -> Int) {\n    var n = Iterators.toArray(it);\n    n.sort(sort);\n    return n;\n  }\n\n  public static function reduce<TItem, TAcc>(it : Iterator<TItem>, callback : TAcc -> TItem -> TAcc, initial : TAcc) : TAcc {\n    map(it, function(v) initial = callback(initial, v));\n    return initial;\n  }\n\n  public static function reducei<TItem, TAcc>(it : Iterator<TItem>, callback : TAcc -> TItem -> Int -> TAcc, initial : TAcc) : TAcc {\n    mapi(it, function(v, i) initial = callback(initial, v, i));\n    return initial;\n  }\n\n  inline public static function isEmpty<T>(it : Iterator<T>) : Bool\n    return !it.hasNext();\n\n  public static function filter<TItem>(it : Iterator<TItem>, predicate : TItem -> Bool) : Array<TItem>\n    return reduce(it, function(acc : Array<TItem>, item) {\n        if(predicate(item))\n          acc.push(item);\n        return acc;\n      }, []);\n\n  public static function isIterator(v : Dynamic) {\n    var fields = Types.isAnonymousObject(v) ? Reflect.fields(v) : Type.getInstanceFields(Type.getClass(v));\n    if(!Lambda.has(fields, \"next\") || !Lambda.has(fields, \"hasNext\")) return false;\n    return Reflect.isFunction(Reflect.field(v, \"next\")) && Reflect.isFunction(Reflect.field(v, \"hasNext\"));\n  }\n}","package thx.core;\n\nclass Objects {\n  inline public static function isEmpty(o : {})\n    return Reflect.fields(o).length == 0;\n}\n","package thx.core;\n\nclass Set<T> {\n  public static function arrayToSet<T>(arr : Array<T>) : Set<T> {\n    var set = new Set();\n    for (item in arr)\n      set.add(item);\n    return set;\n  }\n\n  public var length : Int;\n  var _v : Array<T>;\n  public function new() {\n    _v = [];\n    length = 0;\n  }\n\n  public function add(v : T) : Void {\n    _v.remove(v);\n    _v.push(v);\n    length = _v.length;\n  }\n\n  public function remove(v : T) : Bool {\n    var t = _v.remove(v);\n    length = _v.length;\n    return t;\n  }\n\n  public function exists(v : T) : Bool {\n    for (t in _v)\n      if (t == v)\n        return true;\n    return false;\n  }\n\n  public function iterator()\n    return _v.iterator();\n\n  public function array()\n    return _v.copy();\n\n  public function toString()\n    return \"{\" + _v.join(\", \") + \"}\";\n}","package thx.core;\n\nusing StringTools;\n\nclass Strings {\n  static var _reSplitWC = ~/(\\r\\n|\\n\\r|\\n|\\r)/g;\n  static var _reReduceWS = ~/\\s+/;\n#if !php\n  static var _reStripTags = ~/(<[a-z]+[^>\\/]*\\/?>|<\\/[a-z]+>)/i;\n#end\n  // TODO, test me\n  public static function upTo(value : String, searchFor : String) {\n    var pos = value.indexOf(searchFor);\n    if (pos < 0)\n      return value;\n    else\n      return value.substr(0, pos);\n  }\n\n  // TODO, test me\n  public static function startFrom(value : String, searchFor : String) {\n    var pos = value.indexOf(searchFor);\n    if (pos < 0)\n      return value;\n    else\n      return value.substr(pos + searchFor.length);\n  }\n\n  // TODO, test me\n  public static function rtrim(value : String, charlist : String) : String {\n#if php\n    return untyped __call__(\"rtrim\", value, charlist);\n#else\n    var len = value.length;\n    while (len > 0) {\n      var c = value.substr(len - 1, 1);\n      if (charlist.indexOf(c) < 0)\n        break;\n      len--;\n    }\n    return value.substr(0, len);\n#end\n  }\n\n  // TODO, test me\n  public static function ltrim(value : String, charlist : String) : String {\n#if php\n    return untyped __call__(\"ltrim\", value, charlist);\n#else\n    var start = 0;\n    while (start < value.length) {\n      var c = value.substr(start, 1);\n      if (charlist.indexOf(c) < 0)\n        break;\n      start++;\n    }\n    return value.substr(start);\n#end\n  }\n\n  public static inline function trim(value : String, charlist : String) : String {\n#if php\n    return untyped __call__(\"trim\", value, charlist);\n#else\n    return rtrim(ltrim(value, charlist), charlist);\n#end\n  }\n\n  static var _reCollapse = ~/\\s+/g;\n  public static function collapse(value : String)\n    return _reCollapse.replace(StringTools.trim(value), \" \");\n\n  public static inline function ucfirst(value : String) : String\n    return (value == null ? null : value.charAt(0).toUpperCase() + value.substr(1));\n\n  public static inline function lcfirst(value : String) : String\n    return (value == null ? null : value.charAt(0).toLowerCase() + value.substr(1));\n\n  public static function empty(value : String)\n    return value == null || value == '';\n\n  public static inline function isAlphaNum(value : String) : Bool\n#if php\n    return untyped __call__(\"ctype_alnum\", value);\n#else\n    return (value == null ? false : __alphaNumPattern.match(value));\n#end\n\n  public static inline function digitsOnly(value : String) : Bool\n#if php\n    return untyped __call__(\"ctype_digit\", value);\n#else\n    return (value == null ? false : __digitsPattern.match(value));\n#end\n\n  public static function ucwords(value : String) : String\n    return __ucwordsPattern.map(ucfirst(value), __upperMatch);\n\n  /**\n   * Like ucwords but uses only white spaces as boundaries\n   */\n  public static function ucwordsws(value : String) : String\n#if php\n    return untyped __call__(\"ucwords\", value);\n#else\n    return __ucwordswsPattern.map(ucfirst(value), __upperMatch);\n#end\n\n  static function __upperMatch(re : EReg)\n    return re.matched(0).toUpperCase();\n  static var __ucwordsPattern = new EReg('[^a-zA-Z]([a-z])', 'g');\n#if !php\n  static var __ucwordswsPattern = new EReg('\\\\s[a-z]', 'g');\n  static var __alphaNumPattern = new EReg('^[a-z0-9]+$', 'i');\n  static var __digitsPattern = new EReg('^[0-9]+$', '');\n#end\n\n  /**\n  *  Replaces undescores with space, finds UC characters, turns them into LC and prepends them with a space.\n  *  More than one UC in sequence is left untouched.\n  **/\n  public static function humanize(s : String)\n    return underscore(s).replace('_', ' ');\n\n  // TO TEST\n  public static function capitalize(s : String)\n    return s.substr(0, 1).toUpperCase() + s.substr(1);\n\n  // TO TEST\n  public static function succ(s : String)\n    return s.substr(0, -1) + String.fromCharCode(s.substr(-1).charCodeAt(0)+1);\n\n  // TO TEST\n  public static function underscore(s : String) {\n    s = (~/::/g).replace(s, '/');\n    s = (~/([A-Z]+)([A-Z][a-z])/g).replace(s, '$1_$2');\n    s = (~/([a-z\\d])([A-Z])/g).replace(s, '$1_$2');\n    s = (~/-/g).replace(s, '_');\n    return s.toLowerCase();\n  }\n\n  public static function dasherize(s : String)\n    return s.replace('_', '-');\n\n  public static function repeat(s : String, times : Int) {\n    var b = [];\n    for(i in 0...times)\n      b.push(s);\n    return b.join('');\n  }\n\n  public static function wrapColumns(s : String, columns = 78, indent = \"\", newline = \"\\n\") {\n    var parts = _reSplitWC.split(s),\n      result = [];\n    for(part in parts)\n      result.push(_wrapColumns(StringTools.trim(_reReduceWS.replace(part, \" \")), columns, indent, newline));\n    return result.join(newline);\n  }\n\n  static function _wrapColumns(s : String, columns : Int, indent : String, newline : String) {\n    var parts = [],\n      pos = 0,\n      len = s.length,\n      ilen = indent.length;\n    columns -= ilen;\n    while(true) {\n      if(pos + columns >= len - ilen) {\n        parts.push(s.substr(pos));\n        break;\n      }\n\n      var i = 0;\n      while(!StringTools.isSpace(s, pos + columns - i) && i < columns)\n        i++;\n      if(i == columns) {\n        // search ahead\n        i = 0;\n        while(!StringTools.isSpace(s, pos + columns + i) && pos + columns + i < len)\n          i++;\n        parts.push(s.substr(pos, columns + i));\n        pos += columns + i + 1;\n      } else {\n        parts.push(s.substr(pos, columns - i));\n        pos += columns - i + 1;\n      }\n    }\n\n    return indent + parts.join(newline + indent);\n  }\n\n  public static function stripTags(s : String) : String\n#if php\n    return untyped __call__(\"strip_tags\", s);\n#else\n    return _reStripTags.replace(s, \"\");\n#end\n\n  public static function ellipsis(s : String, maxlen = 20, symbol = \"...\") {\n    if (s.length > maxlen)\n      return s.substr(0, symbol.length > maxlen - symbol.length ? symbol.length : maxlen - symbol.length) + symbol;\n    else\n      return s;\n  }\n\n  public static function compare(a : String, b : String) return a < b ? -1 : a > b ? 1 : 0;\n}","package thx.core;\n\n#if !js\nimport haxe.Timer in T;\n#end\n\nclass Timer {\n#if !js\n  static var timers = new Map<Int, haxe.Timer>();\n  static var _id = 0;\n#end\n  public static function repeat(callback : Void -> Void, delayms : Int) : Void -> Void {\n#if !js\n    var id = _id++,\n        timer = new T(delayms);\n    timer.run = callback;\n    timers.set(id, timer);\n    return clear.bind(id);\n#else\n    return clear.bind(untyped __js__('setInterval')(callback, delayms));\n#end\n  }\n\n  public static function delay(callback : Void -> Void, delayms : Int) : Void -> Void {\n#if !js\n    var id = _id++,\n        timer = T.delay(function() {\n          callback();\n          clear(id);\n        }, delayms);\n    timers.set(id, timer);\n    return clear.bind(id);\n#else\n    return clear.bind(untyped __js__('setTimeout')(callback, delayms));\n#end\n  }\n\n  public static function immediate(callback : Void -> Void) : Void -> Void\n#if !js\n    return delay(callback, 0);\n#else\n    return clear.bind(untyped __js__('setImmediate')(callback));\n#end\n\n  static #if js inline #end function clear(id) : Void {\n#if !js\n    var timer = timers.get(id);\n    if(null != timer) {\n      timers.remove(id);\n      timer.stop();\n    }\n#else\n    return untyped __js__('clearTimeout')(id);\n#end\n  }\n\n#if js\n  static function __init__() untyped {\n    var scope : Dynamic = __js__('(\"undefined\" !== typeof window && window) || (\"undefined\" !== typeof global && global) || this');\n    if(!scope.setImmediate)\n      scope.setImmediate = function(callback) scope.setTimeout(callback, 0);\n  }\n#end\n}","package thx.core;\n\nabstract Tuple0(Nil) {\n  inline public function new()\n    this = nil;\n\n  inline public function with<T0>(v : T0)\n    return new Tuple1(v);\n\n  inline public function toString()\n    return 'Tuple0()';\n\n  @:to inline public function toNil()\n    return this;\n\n  @:from inline static public function nilToTuple(v : Nil)\n    return new Tuple0();\n}\n\nabstract Tuple1<T0>(T0) {\n  inline public function new(_0 : T0)\n    this = _0;\n  public var _0(get, never) : T0;\n  inline function get__0() return this;\n\n  inline public function with<T1>(v : T1)\n    return new Tuple2(_0, v);\n\n  inline public function dropLeft()\n    return new Tuple0();\n\n  inline public function dropRight()\n    return new Tuple0();\n\n  inline public function toString()\n    return 'Tuple1($_0)';\n}\n\nabstract Tuple2<T0, T1>(TTuple2<T0, T1>) from TTuple2<T0, T1> to TTuple2<T0, T1> {\n  inline public function new(_0 : T0, _1 : T1)\n    this = { _0 : _0, _1 : _1 };\n  public var _0(get, never) : T0;\n  public var _1(get, never) : T1;\n  inline function get__0() return this._0;\n  inline function get__1() return this._1;\n\n  inline public function flip() : Tuple2<T1, T0>\n    return { _0 : this._1, _1 : this._0 };\n\n  inline public function dropLeft()\n    return new Tuple1(this._1);\n\n  inline public function dropRight()\n    return new Tuple1(this._0);\n\n  inline public function with<T2>(v : T2)\n    return new Tuple3(_0, _1, v);\n\n  inline public function toString()\n    return 'Tuple2($_0,$_1)';\n}\n\ntypedef TTuple2<T0, T1> = { _0 : T0, _1 : T1 };\n\nabstract Tuple3<T0, T1, T2>(TTuple3<T0, T1, T2>) from TTuple3<T0, T1, T2> to TTuple3<T0, T1, T2> {\n  inline public function new(_0 : T0, _1 : T1, _2 : T2)\n    this = { _0 : _0, _1 : _1, _2 : _2 };\n  public var _0(get, never) : T0;\n  public var _1(get, never) : T1;\n  public var _2(get, never) : T2;\n  inline function get__0() return this._0;\n  inline function get__1() return this._1;\n  inline function get__2() return this._2;\n\n  inline public function flip() : Tuple3<T2, T1, T0>\n    return { _0 : this._2, _1 : this._1, _2 : this._0 };\n\n  inline public function dropLeft()\n    return new Tuple2(this._1, this._2);\n\n  inline public function dropRight()\n    return new Tuple2(this._0, this._1);\n\n  inline public function with<T3>(v : T3)\n    return new Tuple4(_0, _1, _2, v);\n\n  inline public function toString()\n    return 'Tuple3($_0,$_1,$_2)';\n}\n\ntypedef TTuple3<T0, T1, T2> = { _0 : T0, _1 : T1, _2 : T2 };\n\nabstract Tuple4<T0, T1, T2, T3>(TTuple4<T0, T1, T2, T3>) from TTuple4<T0, T1, T2, T3> to TTuple4<T0, T1, T2, T3> {\n  inline public function new(_0 : T0, _1 : T1, _2 : T2, _3 : T3)\n    this = { _0 : _0, _1 : _1, _2 : _2, _3 : _3 };\n  public var _0(get, never) : T0;\n  public var _1(get, never) : T1;\n  public var _2(get, never) : T2;\n  public var _3(get, never) : T3;\n  inline function get__0() return this._0;\n  inline function get__1() return this._1;\n  inline function get__2() return this._2;\n  inline function get__3() return this._3;\n\n  inline public function flip() : Tuple4<T3, T2, T1, T0>\n    return { _0 : this._3, _1 : this._2, _2 : this._1, _3 : this._0 };\n\n  inline public function dropLeft()\n    return new Tuple3(this._1, this._2, this._3);\n\n  inline public function dropRight()\n    return new Tuple3(this._0, this._1, this._2);\n\n  inline public function with<T4>(v : T4)\n    return new Tuple5(_0, _1, _2, _3, v);\n\n  inline public function toString()\n    return 'Tuple4($_0,$_1,$_2,$_3)';\n}\n\ntypedef TTuple4<T0, T1, T2, T3> = { _0 : T0, _1 : T1, _2 : T2, _3 : T3 };\n\nabstract Tuple5<T0, T1, T2, T3, T4>(TTuple5<T0, T1, T2, T3, T4>) from TTuple5<T0, T1, T2, T3, T4> to TTuple5<T0, T1, T2, T3, T4> {\n  inline public function new(_0 : T0, _1 : T1, _2 : T2, _3 : T3, _4 : T4)\n    this = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4 };\n  public var _0(get, never) : T0;\n  public var _1(get, never) : T1;\n  public var _2(get, never) : T2;\n  public var _3(get, never) : T3;\n  public var _4(get, never) : T4;\n  inline function get__0() return this._0;\n  inline function get__1() return this._1;\n  inline function get__2() return this._2;\n  inline function get__3() return this._3;\n  inline function get__4() return this._4;\n\n  inline public function flip() : Tuple5<T4, T3, T2, T1, T0>\n    return { _0 : this._4, _1 : this._3, _2 : this._2, _3 : this._1, _4 : this._0 };\n\n  inline public function dropLeft()\n    return new Tuple4(this._1, this._2, this._3, this._4);\n\n  inline public function dropRight()\n    return new Tuple4(this._0, this._1, this._2, this._3);\n\n  inline public function with<T5>(v : T5)\n    return new Tuple6(_0, _1, _2, _3, _4, v);\n\n  inline public function toString()\n    return 'Tuple5($_0,$_1,$_2,$_3,$_4)';\n}\n\ntypedef TTuple5<T0, T1, T2, T3, T4> = { _0 : T0, _1 : T1, _2 : T2, _3 : T3, _4 : T4 };\n\nabstract Tuple6<T0, T1, T2, T3, T4, T5>(TTuple6<T0, T1, T2, T3, T4, T5>) from TTuple6<T0, T1, T2, T3, T4, T5> to TTuple6<T0, T1, T2, T3, T4, T5> {\n  inline public function new(_0 : T0, _1 : T1, _2 : T2, _3 : T3, _4 : T4, _5 : T5)\n    this = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5 };\n  public var _0(get, never) : T0;\n  public var _1(get, never) : T1;\n  public var _2(get, never) : T2;\n  public var _3(get, never) : T3;\n  public var _4(get, never) : T4;\n  public var _5(get, never) : T5;\n  inline function get__0() return this._0;\n  inline function get__1() return this._1;\n  inline function get__2() return this._2;\n  inline function get__3() return this._3;\n  inline function get__4() return this._4;\n  inline function get__5() return this._5;\n\n  inline public function flip() : Tuple6<T5, T4, T3, T2, T1, T0>\n    return { _0 : this._5, _1 : this._4, _2 : this._3, _3 : this._2, _4 : this._1, _5 : this._0 };\n\n  inline public function dropLeft()\n    return new Tuple5(this._1, this._2, this._3, this._4, this._5);\n\n  inline public function dropRight()\n    return new Tuple5(this._0, this._1, this._2, this._3, this._4);\n\n  inline public function toString()\n    return 'Tuple6($_0,$_1,$_2,$_3,$_4,$_5)';\n}\n\ntypedef TTuple6<T0, T1, T2, T3, T4, T5> = { _0 : T0, _1 : T1, _2 : T2, _3 : T3, _4 : T4, _5 : T5 };","/**\n * ...\n * @author Franco Ponticelli\n */\n\npackage thx.core;\n\nclass Types {\n  public static inline function isAnonymousObject(v : Dynamic) : Bool\n    return Reflect.isObject(v) && null == Type.getClass(v);\n\n  public static function sameType<A, B>(a : A, b : B) : Bool\n    return ValueTypes.toString(Type.typeof(a)) == ValueTypes.toString(Type.typeof(b));\n}\n\nclass ClassTypes {\n  public inline static function toString(cls : Class<Dynamic>)\n    return Type.getClassName(cls);\n\n  static public #if !php inline #end function as<T1, T2>(value : T1, type : Class<T2>) : Null<T2>\n    return (Std.is(value, type) ? cast value : null);\n}\n\nclass ValueTypes {\n  public static function typeAsString<T>(value : T)\n    return toString(Type.typeof(value));\n\n  public static function toString(type : Type.ValueType) {\n    return switch type {\n      case TInt:      \"Int\";\n      case TFloat:    \"Float\";\n      case TBool:     \"Bool\";\n      case TObject:   \"Dynamic\"; // TODO ?\n      case TFunction: \"Function\";\n      case TClass(c): Type.getClassName(c);\n      case TEnum(e):  Type.getEnumName(e);\n      case _:         null;\n    }\n  }\n\n  public static function typeInheritance(type : Type.ValueType) {\n    return switch type {\n      case TInt:      [\"Int\"];\n      case TFloat:    [\"Float\"];\n      case TBool:     [\"Bool\"];\n      case TObject:   [\"Dynamic\"];\n      case TFunction: [\"Function\"];\n      case TClass(c):\n        var classes = [];\n        while (null != c) {\n          classes.push(c);\n          c = Type.getSuperClass(c);\n        }\n        classes.map(Type.getClassName);\n      case TEnum(e):  [Type.getEnumName(e)];\n      case _:         null;\n    }\n  }\n}","package thx.core;\n\nclass UUID {\n  static var itoh = '0123456789ABCDEF';\n\n  static inline function random()\n    return Math.floor(Math.random()*0x10);\n\n  static inline function srandom()\n    return ''+random();\n\n  public static function create() {\n    var s = [];\n    for(i in 0...8)\n      s[i] = srandom();\n    s[8]  = '-';\n    for(i in 9...13)\n      s[i] = srandom();\n    s[13] = '-';\n    s[14] = '4';\n    for(i in 15...18)\n      s[i] = srandom();\n    s[18] = '-';\n    s[19] = '' + ((random() & 0x3) | 0x8);\n    for(i in 20...23)\n      s[i] = srandom();\n    s[23] = '-';\n    for(i in 24...36)\n      s[i] = srandom();\n    return s.join('');\n  }\n}","package thx.promise;\n\nimport haxe.PosInfos;\nimport thx.core.Error;\nimport thx.promise.Promise;\n\n@:access(thx.promise.Promise)\nclass Deferred<T> {\n  public var promise(default, null) : Promise<T>;\n  public function new()\n    promise = new Promise<T>();\n\n  public function reject(error : Error)\n    return fulfill(Failure(error));\n\n  public function rejectWith(error : Dynamic, ?pos : PosInfos)\n    return fulfill(Failure(Error.fromDynamic(error, pos)));\n\n  public function resolve(value : T)\n    return fulfill(Success(value));\n\n  public function fulfill(result : PromiseValue<T>)\n    return promise.setState(result);\n\n  public function toString() return 'Deferred';\n}","package thx.promise;\n\nimport haxe.ds.Option;\nimport thx.core.Error;\nimport thx.core.Tuple;\nimport thx.core.Nil;\nusing thx.core.Options;\nusing thx.core.Arrays;\n\nclass Promise<T> {\n  public static var nil(default, null) : Promise<Nil> = Promise.value(Nil.nil);\n\n  public static function all<T>(arr : Array<Promise<T>>) : Promise<Array<T>>\n    return Promise.create(function(resolve, reject) {\n      var results  = [],\n          counter  = 0,\n          hasError = false;\n      arr.mapi(function(p, i) {\n        p.either(function(value) {\n          if(hasError) return;\n          results[i] = value;\n          counter++;\n          if(counter == arr.length)\n            resolve(results);\n        }, function(err) {\n          if(hasError) return;\n          hasError = true;\n          reject(err);\n        });\n      });\n    });\n\n  public static function create<T>(callback : (T -> Void) -> (Error -> Void) -> Void) : Promise<T> {\n    var deferred = new Deferred<T>();\n    callback(deferred.resolve, deferred.reject);\n    return deferred.promise;\n  }\n\n  public static function createFulfill<T>(callback : (PromiseValue<T> -> Void) -> Void) : Promise<T> {\n    var deferred = new Deferred<T>();\n    callback(deferred.fulfill);\n    return deferred.promise;\n  }\n\n  public static function error<T>(err : Error) : Promise<T>\n    return Promise.create(function(_, reject) reject(err));\n\n  public static function value<T>(v : T) : Promise<T>\n    return Promise.create(function(resolve, _) resolve(v));\n\n  var handlers : Array<PromiseValue<T> -> Void>;\n  var state : Option<PromiseValue<T>>;\n  private function new() {\n    handlers = [];\n    state = None;\n  }\n\n  public function always(handler : Void -> Void)\n    then(function(_) handler());\n\n  public function either(success : T -> Void, failure : Error -> Void) {\n    then(function(r) switch r {\n      case Success(value): success(value);\n      case Failure(error): failure(error);\n    });\n    return this;\n  }\n\n  public function isComplete()\n    return switch state { case None: false; case Some(_): true; };\n\n  public function isFailure()\n    return switch state {\n      case None, Some(Success(_)): false;\n      case _: true;\n    };\n\n  public function isResolved()\n    return switch state {\n      case None, Some(Failure(_)): false;\n      case _: true;\n    };\n\n  public function failure(failure : Error -> Void)\n    return either(function(_){}, failure);\n\n  public function map<TOut>(handler : PromiseValue<T> -> Promise<TOut>)\n    return Promise.createFulfill(function(fulfill)\n      then(function(result) handler(result).then(fulfill))\n    );\n\n  public function mapAlways<TOut>(handler : Void -> Promise<TOut>)\n    map(function(_) return handler());\n\n  public function mapEither<TOut>(success : T -> Promise<TOut>, failure : Error -> Promise<TOut>)\n    return map(function(result) return switch result {\n        case Success(value): success(value);\n        case Failure(error): failure(error);\n      });\n\n  public function mapFailure(failure : Error -> Promise<T>)\n    return mapEither(function(value : T) return Promise.value(value), failure);\n\n  public function mapSuccess<TOut>(success : T -> Promise<TOut>)\n    return mapEither(success, function(err) return Promise.error(err));\n\n  public function success(success : T -> Void)\n    return either(success, function(_){});\n\n  public function then(handler : PromiseValue<T> -> Void) {\n    handlers.push(handler);\n    update();\n    return this;\n  }\n\n  public function throwFailure()\n    return failure(function(err) {\n      throw err;\n    });\n\n  public function toString() return 'Promise';\n\n  function setState(newstate : PromiseValue<T>) {\n    switch state {\n      case None:\n        state = Some(newstate);\n      case Some(r):\n        throw new Error('promise was already $r, can\\'t apply new state $newstate');\n    }\n    update();\n    return this;\n  }\n\n  function update()\n    switch state {\n      case None:\n      case Some(result): {\n        var handler;\n        while(null != (handler = handlers.shift()))\n          handler(result);\n      }\n    };\n}\n\nclass Promises {\n#if !macro\n  public static function delay<T>(p : Promise<T>, ?interval : Int) : Promise<T>\n    return p.map(\n      function(r)\n        return Promise.createFulfill(\n          null == interval ?\n            function(fulfill) thx.core.Timer.immediate(fulfill.bind(r)) :\n            function(fulfill) thx.core.Timer.delay(fulfill.bind(r), interval)\n        )\n    );\n#end\n\n  public static function join<T1,T2>(p1 : Promise<T1>, p2 : Promise<T2>) : Promise<Tuple2<T1,T2>> {\n    return Promise.create(function(resolve, reject) {\n      var hasError = false,\n        counter = 0,\n        v1 : Null<T1> = null,\n        v2 : Null<T2> = null;\n\n      function complete() {\n        if(counter < 2)\n          return;\n        resolve(new Tuple2(v1, v2));\n      }\n\n      function handleError(error) {\n        if(hasError) return;\n        hasError = true;\n        reject(error);\n      }\n\n      p1.either(function(v) {\n        if(hasError) return;\n        counter++;\n        v1 = v;\n        complete();\n      }, handleError);\n\n      p2.either(function(v) {\n        if(hasError) return;\n        counter++;\n        v2 = v;\n        complete();\n      }, handleError);\n    });\n  }\n\n  public static function log<T>(promise : Promise<T>, ?prefix : String = '')\n    return promise.either(\n      function(r) trace('$prefix SUCCESS: $r'),\n      function(e) trace('$prefix ERROR: ${e.toString()}')\n    );\n}\n\nclass PromiseTuple6 {\n  public static function mapTuple<T1,T2,T3,T4,T5,T6,TOut>(promise : Promise<Tuple6<T1,T2,T3,T4,T5,T6>>, success : T1 -> T2 -> T3 -> T4 -> T5 -> T6 -> Promise<TOut>) : Promise<TOut>\n    return promise.mapSuccess(function(t)\n      return success(t._0, t._1, t._2, t._3, t._4, t._5)\n    );\n\n  public static function tuple<T1,T2,T3,T4,T5,T6>(promise : Promise<Tuple6<T1,T2,T3,T4,T5,T6>>, success : T1 -> T2 -> T3 -> T4 -> T5 -> T6 -> Void, ?failure : Error -> Void)\n    return promise.either(\n      function(t) success(t._0, t._1, t._2, t._3, t._4, t._5),\n      null == failure ? function(_) {} : failure\n    );\n}\n\nclass PromiseTuple5 {\n  public static function join<T1,T2,T3,T4,T5,T6>(p1 : Promise<Tuple5<T1,T2,T3,T4,T5>>, p2 : Promise<T6>) : Promise<Tuple6<T1,T2,T3,T4,T5,T6>> {\n    return Promise.create(function(resolve, reject) {\n      Promises.join(p1, p2)\n        .either(\n          function(t) resolve(t._0.with(t._1)),\n          function(e) reject(e));\n    });\n  }\n\n  public static function mapTuple<T1,T2,T3,T4,T5,TOut>(promise : Promise<Tuple5<T1,T2,T3,T4,T5>>, success : T1 -> T2 -> T3 -> T4 -> T5 -> Promise<TOut>) : Promise<TOut>\n    return promise.mapSuccess(function(t)\n      return success(t._0, t._1, t._2, t._3, t._4)\n    );\n\n  public static function tuple<T1,T2,T3,T4,T5>(promise : Promise<Tuple5<T1,T2,T3,T4,T5>>, success : T1 -> T2 -> T3 -> T4 -> T5 -> Void, ?failure : Error -> Void)\n    return promise.either(\n      function(t) success(t._0, t._1, t._2, t._3, t._4),\n      null == failure ? function(_) {} : failure\n    );\n}\n\nclass PromiseTuple4 {\n  public static function join<T1,T2,T3,T4,T5>(p1 : Promise<Tuple4<T1,T2,T3,T4>>, p2 : Promise<T5>) : Promise<Tuple5<T1,T2,T3,T4,T5>> {\n    return Promise.create(function(resolve, reject) {\n      Promises.join(p1, p2)\n        .either(\n          function(t) resolve(t._0.with(t._1)),\n          function(e) reject(e));\n    });\n  }\n\n  public static function mapTuple<T1,T2,T3,T4,TOut>(promise : Promise<Tuple4<T1,T2,T3,T4>>, success : T1 -> T2 -> T3 -> T4 -> Promise<TOut>) : Promise<TOut>\n    return promise.mapSuccess(function(t)\n      return success(t._0, t._1, t._2, t._3)\n    );\n\n  public static function tuple<T1,T2,T3,T4>(promise : Promise<Tuple4<T1,T2,T3,T4>>, success : T1 -> T2 -> T3 -> T4 -> Void, ?failure : Error -> Void)\n    return promise.either(\n      function(t) success(t._0, t._1, t._2, t._3),\n      null == failure ? function(_) {} : failure\n    );\n}\n\nclass PromiseTuple3 {\n  public static function join<T1,T2,T3,T4>(p1 : Promise<Tuple3<T1,T2,T3>>, p2 : Promise<T4>) : Promise<Tuple4<T1,T2,T3,T4>> {\n    return Promise.create(function(resolve, reject) {\n      Promises.join(p1, p2)\n        .either(\n          function(t) resolve(t._0.with(t._1)),\n          function(e) reject(e));\n    });\n  }\n\n  public static function mapTuple<T1,T2,T3,TOut>(promise : Promise<Tuple3<T1,T2,T3>>, success : T1 -> T2 -> T3 -> Promise<TOut>) : Promise<TOut>\n    return promise.mapSuccess(function(t)\n      return success(t._0, t._1, t._2)\n    );\n\n  public static function tuple<T1,T2,T3>(promise : Promise<Tuple3<T1,T2,T3>>, success : T1 -> T2 -> T3 -> Void, ?failure : Error -> Void)\n    return promise.either(\n      function(t) success(t._0, t._1, t._2),\n      null == failure ? function(_) {} : failure\n    );\n}\n\nclass PromiseTuple2 {\n  public static function join<T1,T2,T3>(p1 : Promise<Tuple2<T1,T2>>, p2 : Promise<T3>) : Promise<Tuple3<T1,T2,T3>> {\n    return Promise.create(function(resolve, reject) {\n      Promises.join(p1, p2)\n        .either(\n          function(t) resolve(t._0.with(t._1)),\n          function(e) reject(e));\n    });\n  }\n\n  public static function mapTuple<T1,T2,TOut>(promise : Promise<Tuple2<T1,T2>>, success : T1 -> T2 -> Promise<TOut>) : Promise<TOut>\n    return promise.mapSuccess(function(t)\n      return success(t._0, t._1)\n    );\n\n  public static function tuple<T1,T2>(promise : Promise<Tuple2<T1,T2>>, success : T1 -> T2 -> Void, ?failure : Error -> Void)\n    return promise.either(\n      function(t) success(t._0, t._1),\n      null == failure ? function(_) {} : failure\n    );\n}\n\nclass PromiseNil {\n  public static function join<T2>(p1 : Promise<Nil>, p2 : Promise<T2>) : Promise<T2>\n    return Promise.create(function(resolve, reject) {\n      Promises.join(p1, p2)\n        .either(\n          function(t) resolve(t._1),\n          function(e) reject(e));\n    });\n}\n\n// TODO: flatten\n// TODOL flatMap","package thx.stream;\n\nimport thx.core.Error;\n\nclass Bus<T> extends Emitter<T> {\n  var downStreams : Array<Stream<T>>;\n  var upStreams : Array<Stream<T>>;\n  var distinctValuesOnly : Bool;\n  var equal : T -> T -> Bool;\n  var value : Null<T>;\n  public function new(distinctValuesOnly = false, ?equal : T -> T -> Bool) {\n    this.distinctValuesOnly = distinctValuesOnly;\n    this.equal = null == equal ? function(a, b) return a == b : equal;\n    this.downStreams = [];\n    this.upStreams = [];\n    super(function(stream : Stream<T>) {\n      this.downStreams.push(stream);\n      stream.addCleanUp(function() this.downStreams.remove(stream));\n    });\n  }\n\n  inline public function cancel()\n    emit(End(true));\n\n  public function clearStreams()\n    for(stream in downStreams.copy())\n      stream.end();\n\n  public function clearEmitters()\n    for(stream in upStreams.copy())\n      stream.cancel();\n\n  public function clear() {\n    clearEmitters();\n    clearStreams();\n  }\n\n  public function emit(value : StreamValue<T>) switch value {\n    case Pulse(v):\n      if(distinctValuesOnly) {\n        if(equal(v, this.value))\n          return;\n        this.value = v;\n      }\n      for(stream in downStreams.copy())\n        stream.pulse(v);\n    case Failure(e):\n      for(stream in downStreams.copy())\n        stream.fail(e);\n    case End(true):\n      for(stream in downStreams.copy())\n        stream.cancel();\n    case End(false):\n      for(stream in downStreams.copy())\n        stream.end();\n  }\n\n  inline public function end()\n    emit(End(false));\n\n  inline public function fail(error : Error)\n    emit(Failure(error));\n\n  inline public function pulse(value : T)\n    emit(Pulse(value));\n}","package thx.stream;\n\nimport thx.core.Error;\n\nclass Stream<T> implements IStream {\n\n  var subscriber : StreamValue<T> -> Void;\n  var cleanUps : Array<Void -> Void>;\n  var finalized : Bool;\n  public var canceled(default, null) : Bool;\n  public function new(subscriber : StreamValue<T> -> Void) {\n    this.subscriber = subscriber;\n    this.cleanUps   = [];\n    this.finalized  = false;\n    this.canceled   = false;\n  }\n\n  public function addCleanUp(f : Void -> Void)\n    cleanUps.push(f);\n\n  public function cancel() {\n    canceled = true;\n    finalize(End(true));\n  }\n\n  public function end()\n    finalize(End(false));\n\n  public function fail(error : Error)\n    finalize(Failure(error));\n\n  public function pulse(v : T)\n    subscriber(Pulse(v));\n\n  function finalize(signal : StreamValue<T>) {\n    if(finalized) return;\n    finalized = true;\n    while(cleanUps.length > 0)\n      cleanUps.shift()();\n    subscriber(signal);\n    subscriber = function(_) {};\n  }\n}","class Config {\n  public static var icons(default, null) = {\n    add : 'plus-circle',\n    addMenu : 'plus-square',\n    remove : 'ban',\n    dropdown : 'reorder',\n    checked : 'toggle-on',\n    unchecked : 'toggle-off',\n    switchtype : 'bolt',\n    code : 'bolt',\n    value : 'pencil',\n    reference : 'link',\n\n    bool : 'check-circle',\n    text : 'pencil',\n    number : 'superscript',\n    date : 'calendar',\n    array : 'list',\n    object : 'table',\n  };\n\n  public static var selectors(default, null) = {\n    app : '.card'\n  };\n}"],
"names":[],
"mappings":"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Q;;;;yCChCI,zBACZ;CAAO,AAAuB;;wCAGlB,xBACZ;CAAO,AAAqB;;wCAGhB,xBACZ;CAAO,AAAqB;;yCAGhB,zBACZ;CAAO,AAAuB;;0CAGlB,1BACZ;CAAO,AAAyB;;0CAGpB,1BACZ;CAAO,AAAyB;;wCAGpB,xBAAyC;CACrD,EAAQ,FAAY;CACb,AAAC,GAAK,HAAS,KAAK,HAAG;;6CAGlB,7BACZ;CAAO,GAAQ,HAAS,KAAI;;;;sCC/BhB,tBACZ;CAAO,AAAS,AAAc,AAAQ;;qCAG1B,rBACZ;CAAc,AAAS;CAAhB,KAAO;KACP,AAAI,AAAO,AAAM,AAAS;EAAK;;EAC5B;;;qCAIE,rBACZ;CAAO,GACL;CAAgB;;EAEhB;;;sCAIU,tBACZ;CAAO,AAAe,AAAS;;uCAGnB,vBACZ;CAAO,AAAwB,AAAC,AAAS;;uCAG7B,vBACZ;CAAO,GAAQ,HAAQ,KAAS;;qCAGpB,rBACZ;CAAO,MAAC,JAAK,FAAS,AAAgB,AAAK,EAAS;;0CAGxC,1BACZ;CAAQ;;;;sCC9BI,ZACZ;CAAO,KAAO;KACP;EACH,IAAO;KACA;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;;;KAED;EACH,IAAO;KACA;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;;;KAED;EACH,IAAO;KACA;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;;;KAED;EACH,IAAO;KACA;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;;;KAED;EACH,IAAO;KACA;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;;;KAED;EACH,IAAO;KACA;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;KACG;GACH;;;KAED;EACH,IAAO;KACA;GACH;KACG;G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"
}